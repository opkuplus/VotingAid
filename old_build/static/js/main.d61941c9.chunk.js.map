{"version":3,"sources":["navigation/routeValidation.js","properties/language.js","api/index.js","context/userContext.js","components/defaultInput/index.jsx","components/defaultButton/index.jsx","helpers/constants.js","containers/form/index.jsx","containers/home/index.jsx","containers/registration/index.jsx","containers/login/index.jsx","components/partials/picture.js","components/fileUpload/index.js","containers/profile/index.jsx","functions/dbCalls.js","components/partials/selectMenuLists.js","components/partials/studentAssociationOption.js","components/partials/selectMenu.js","components/partials/candidateTableLinkItem.js","components/partials/candidateTableItem.js","components/partials/candidateTableRow.js","components/partials/candidateTableHeader.js","components/partials/candidateTable.js","containers/candidates/index.js","components/questionItem/index.jsx","containers/questions/index.jsx","containers/candidateAnswers/index.jsx","containers/suggestedCandidates/index.jsx","containers/addCandidates/index.js","containers/addOneCandidate/index.js","containers/addQuestion/index.jsx","context/ThemeProvider.js","components/themeToggleButton/index.js","assets/icons/finland.svg","assets/icons/uk.svg","components/navbar/index.js","components/adminNavbar/index.js","navigation/index.js","App.js","serviceWorker.js","index.js"],"names":["CandidateRoute","Component","component","rest","render","props","getLoginStatus","to","pathname","state","from","location","AdminRoute","PublicRoute","storedToken","sessionStorage","getItem","decodedToken","jwt","console","log","status","language","title","fin","eng","homePageDescription","selectStudentAssociation","navigationHome","navigationLogin","navigationRegister","navigationLogOut","navigationProfile","formButton","loginButton","loginHolder","mainPageLink","registerButton","emailPlaceHolder","passwordPlaceHolder","passwordConfirmationPlaceHolder","registrationError","passwordConfirmationError","profileButton","adminLogo","addCandidates","addCandidatesCautionHolder","addCandidate","browseCandidates","addQuestion","browseQuestions","agreeButton","disagreeButton","fillFormButton","removeButton","browseButton","matchingCandidates","oneCandidate","manyCandidates","firstName","surName","school","selectStudentAssociationList","campus","electoralDistrict","electoralAlliance","description","filterCandidateLabel","addQuestionButton","deleteButton","editButton","updateButton","formLink","uploadPicture","candidateHolder","studentAssociationHolder","deleteHolder","successQuestionAddedHolder","questionHolder","continueHolder","wrongPasswordHolder","addedCandidatesToDatabaseAlert","addingOneCandidateToDatabaseAlert","addingOneCandidateToDatabaseErrorAlert","changeProfileDataAlert","filledFormAlert","noSimilarCandidates","endpoint","UserContext","createContext","UserContextProvider","changeLanguage","e","setState","setItem","changeUser","user","email","loggedIn","token","logOut","removeItem","checkExistingLogin","existingLogin","this","Provider","value","children","DefaultInput","style","fontSize","marginBottom","label","type","name","placeholder","defaultValue","onChange","required","id","ref","padding","PureComponent","DefaultButton","outline","border","borderColor","backgroundColor","color","textColor","textTransform","width","onClick","text","WHITE","DARK_GREEN","GREEN","FromValueItem","handleClick","className","isActive","textAlign","display","justifyContent","FormValueContainer","map","idx","answer","question","Form","handleChange","answersDesc","currentTarget","handleSubmit","preventDefault","context","axios","post","ans","answers","desc","studentAssociation","path","headers","Authorization","then","res","Swal","fire","data","icon","includes","confirmButtonText","history","push","oldAnswers","parseInt","questions","filledFormQuestion","area","split","loader","response","oldQuestions","questionDesc","questionNumber","Object","assign","questionValue","values","filledForm","filter","item","isNaN","counter","disabled","flexDirection","maxWidth","marginLeft","marginRight","onSubmit","React","Children","toArray","questionFin","contextType","Home","target","userStudentAssociation","catch","err","bind","Registration","event","password","password_confirmation","registrationErrors","Login","tokenUser","Picture","source","alt","src","FileUpload","onUpload","useContext","useState","setFile","filename","setFilename","setUploadedFile","a","files","formData","FormData","append","fileName","filePath","msg","htmlFor","Profile","fetchData","profile","updatePicture","image","componentDidMount","submitData","componentDidUpdate","prevState","information","key","surname","height","objectFit","overflow","borderRadius","process","info","SetCandidateTable","setStateArray","Axios","get","q","s","i","length","uniqueAssociations","Array","Set","QuestionAreaList","universal","ask","helga","humako","jamko","laureamko","metka","odiako","tuo","StudentAssociationOption","SelectMenu","action","selectMenuList","CandidateTableLinkItem","textOne","textTwo","cursor","CandidateTableItem","CandidateTableItemRow","candidateDeleted","button","callback","deleteCandidateByEmail","confirmDelete","CandidateTableHeader","header","CandidateTable","stateArray","Table","striped","bordered","hover","variant","amount","index","Candidates","SetStateArray","Association","theme","filtered","marginTop","QuestionsItem","changeInputValue","confirmChange","inputEnglish","inputFinnish","_id","alert","refreshQuestions","borderBottom","alignItems","Questions","newQuestions","findIndex","allQuestions","newFilters","unique","filtersData","FilterQuestions","selectBox","schools","CandidateAnswers","candidateInfo","Suggestions","hideComponent","showCandidateAnswers","suggestions","myData","concat","sort","b","similarity","candidate","toFixed","buttonRef","createRef","AddCandidates","handleOpenDialog","current","open","handleOnFileLoad","file","candidates","handleOnError","inputElem","reason","handleRemoveFile","removeFile","candiates","swal","showCancelButton","confirmButtonColor","cancelButtonColor","result","isConfirmed","handeSubmit","onFileLoad","onError","handleOnSubmit","noClick","noDrag","config","onRemoveFile","handleOnRemoveFile","paddingLeft","paddingRight","borderWidth","borderStyle","lineHeight","paddingTop","confirmSubmit","addOneCandidate","refs","AddQuestion","selectBoxChanged","selectValue","error","ThemeContext","ThemeProvider","mode","setTheme","useEffect","ThemeToggleButton","setIcon","iconChange","Navbar","isDark","Consumer","classNames","Finland","UK","AdminNavbar","margin","Navigation","AddOneCandidate","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d61941c9.chunk.js","sourcesContent":["import { Route, Redirect } from 'react-router-dom';\r\nimport jwt from 'jwt-decode'\r\n\r\n// Simple Auth check with out token just to stop us to navigate in any private route\r\nexport const CandidateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        // Here need to check if Token exist because is unsecure\r\n        getLoginStatus() === \"Candidate\" ||\r\n            getLoginStatus() === \"Admin\" // TODO: TOKEN\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/Login',\r\n                state: { from: props.location }\r\n            }} />\r\n    )} />\r\n)\r\n\r\n// Simple Auth check with out token just to stop us to navigate in any private route\r\nexport const AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        // Here need to check if Token exist because is unsecure\r\n        getLoginStatus() === \"Admin\" // TODO: TOKEN\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/Login',\r\n                state: { from: props.location }\r\n            }} />\r\n    )} />\r\n)\r\n\r\n// Simple Auth check with out token just to stop us to navigate in any private route\r\nexport const PublicRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        // Here need to check if Token exist because is unsecure\r\n        !getLoginStatus() // TODO: TOKEN\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/Login',\r\n                state: { from: props.location }\r\n            }} />\r\n    )} />\r\n)\r\n\r\nconst getLoginStatus = () => {\r\n    const storedToken = sessionStorage.getItem(\"token\")\r\n    const decodedToken = storedToken ? jwt(storedToken) : ''\r\n    console.log(decodedToken);\r\n    return decodedToken.status;\r\n}","const language = {\r\n    title: { fin: 'Vaalikone', eng: 'VotingAid' },\r\n    homePageDescription: { fin: 'Tervetuloa käyttämään vaalikonetta!', eng: 'Welcome to our voting aid application!' },\r\n    selectStudentAssociation: { fin: 'Valitse opiskelijakuntasi', eng: 'Choose your student association' },\r\n    navigationHome: { fin: 'Koti', eng: 'Home' },\r\n    navigationLogin: { fin: 'Kirjaudu sisään', eng: 'Login' },\r\n    navigationRegister: { fin: 'Rekisteröidy', eng: 'Register' },\r\n    navigationLogOut: { fin: 'Kirjaudu ulos', eng: 'Logout' },\r\n    navigationProfile: { fin: 'Profiili', eng: 'Profile' },\r\n    formButton: { fin: 'Kysely', eng: 'Form' },\r\n    loginButton: { fin: 'Kirjaudu', eng: 'Login' },\r\n    loginHolder: { fin: 'Olet onnistuneesti kirjautunut sisään!', eng: 'You have succesfully logged in' },\r\n    mainPageLink: { fin: 'Takaisin etusivulle', eng: 'Back to main page' },\r\n    registerButton: { fin: 'Rekisteröidy', eng: 'Register' },\r\n    emailPlaceHolder: { fin: 'Sähköpostiosoite', eng: 'Email' },\r\n    passwordPlaceHolder: { fin: 'Salasana', eng: 'Password' },\r\n    passwordConfirmationPlaceHolder: { fin: 'Salasanan varmennus', eng: 'Password confirmation' },\r\n    registrationError: { fin: 'Et voi rekisteröityä sellaisella sähköpostiosoitteella, jota ei ole lisätty tietokantaan kandidaattina!', eng: 'You cannot register an account for email address that does not exist as a candidate!' },\r\n    passwordConfirmationError: { fin: 'Varmennetun salasanan täytyy täsmätä salasanan kanssa', eng: 'Confirmation password must match with password' },\r\n    profileButton: { fin: 'Varmista tiedot', eng: 'Submit Information' },\r\n    adminLogo: { fin: 'Ylläpitäjän paneli', eng: 'Admin Panel' },\r\n    addCandidates: { fin: 'Lisää monta kandidaattia', eng: 'Add Candidates' },\r\n    addCandidatesCautionHolder: { fin: 'Lisätään kandidaatit, jotka eivät ole tietokannassa', eng: 'This will add all the candidates, which are not present in the database' },\r\n    addCandidate: { fin: 'Lisää yksi kandidaatti', eng: 'Add One Candidate' },\r\n    browseCandidates: { fin: 'Selaa kandidaatteja', eng: 'Browse Candidates' },\r\n    addQuestion: { fin: 'Lisää kysymys', eng: 'Add Question' },\r\n    browseQuestions: { fin: 'Selaa kysymyksiä', eng: 'Browse Questions' },\r\n    agreeButton: { fin: 'Samaa mieltä', eng: 'Agree' },\r\n    disagreeButton: { fin: 'Eri mieltä', eng: 'Disagree' },\r\n    fillFormButton: { fin: 'Lähetä', eng: 'Submit' },\r\n    removeButton: { fin: 'Poista', eng: 'Remove' },\r\n    browseButton: { fin: 'Selaa', eng: 'Browse file' },\r\n    matchingCandidates: { fin: 'Saman näkemyksen omaavat kandit:', eng: 'Candidates with matching values:' },\r\n    oneCandidate: { fin: 'Täytä alla olevat tiedot lisätäksesi yhden kandidaatin:', eng: 'Fill in the information below to add one candidate:' },\r\n    manyCandidates: { fin: 'Voit lisätä useamman kandidaatin alla olevan linkin kautta. Vain CSV tiedostot käyvät. ', eng: 'You can add candidates by the link below. Only CSV files are acceptable.' },\r\n    firstName: { fin: 'Etunimi:', eng: 'First name:' },\r\n    surName: { fin: 'Sukunimi:', eng: 'Surname:' },\r\n    school: { fin: 'Koulu:', eng: 'School:' },\r\n    selectStudentAssociationList: { fin: 'Opiskelijakunta:', eng: 'Student Association:' },\r\n    campus: { fin: 'Kampus:', eng: 'Campus:' },\r\n    electoralDistrict: { fin: 'Vaalipiiri:', eng: 'Electoral District:' },\r\n    electoralAlliance: { fin: 'Vaaliliitto:', eng: 'Electoral Alliance:' },\r\n    description: { fin: 'Kuvaus:', eng: 'Description:' },\r\n    filterCandidateLabel: { fin: 'Suodata koulun perusteella', eng: 'Filter by School' },\r\n    addQuestionButton: { fin: 'Lisää kysymys', eng: 'Add question' },\r\n    deleteButton: { fin: 'Poista', eng: 'Delete' },\r\n    editButton: { fin: 'Muokkaa', eng: 'Edit' },\r\n    updateButton: { fin: 'Päivitä tiedot', eng: 'Update your information' },\r\n    formLink: { fin: 'Linkki täytettyyn kyselyyn', eng: 'Link to your filled form' },\r\n    uploadPicture: { fin: 'Lataa profiilikuva', eng: 'Upload a profile picture' },\r\n    candidateHolder: { fin: 'Kandidaatti', eng: 'Candidate' },\r\n    studentAssociationHolder: { fin: 'Opiskelijakunta', eng: 'Student Association' },\r\n    deleteHolder: { fin: 'Poista', eng: 'Delete' },\r\n    successQuestionAddedHolder: { fin: 'Olet onnistuneesti lisännyt uuden kysymyksen', eng: 'You have succesfully submitted a question\"' },\r\n    questionHolder: { fin: 'Kysymys:', eng: 'Question:' },\r\n    continueHolder: { fin: 'Jatka', eng: 'Proceed' },\r\n    wrongPasswordHolder: { fin: 'Väärä käyttäjätunnus tai salasana', eng: 'Invalid Username Or Password' },\r\n    addedCandidatesToDatabaseAlert: { fin: 'Kanditaatit onnistuneesti lisätty tietokantaan', eng: 'Candidates have been added into the database' },\r\n    addingOneCandidateToDatabaseAlert: { fin: 'Kandidaatti onnistuneesti lisätty tietokantaan', eng: 'Succesfully added user to database' },\r\n    addingOneCandidateToDatabaseErrorAlert: { fin: 'Kandidaatti tällä sähköpostiosoitteella on jo olemassa', eng: 'Email with this address already exists as a user' },\r\n    changeProfileDataAlert: { fin: 'Olet onnistuneesti päivittänyt profiilisi tiedot', eng: 'You have Succesfully updated your profile data' },\r\n    filledFormAlert: { fin: 'Olet onnistuneesti täyttänyt kyselyn', eng: 'You have succesfully filled the form' },\r\n    noSimilarCandidates: { fin: 'Valitettavasti kukaan ei ollut samaa mieltä kanssasi', eng: 'Unfortunately no one related with your answers' },\r\n}\r\n\r\nexport default language;","// export const url = 'https://votingaid.herokuapp.com/';\r\n\r\nexport const endpoint = {\r\n    addCandidates: 'addCandidates/',\r\n    addOneCandidate: 'addOneCandidate/',\r\n    filteredCandidates: 'filteredCandidates/',\r\n    candidates: 'candidates/',\r\n\r\n    questions: '/questions/',\r\n    addQuestion: 'addQuestion/',\r\n    allQuestions: 'allQuestions/',\r\n    filteredQuestions: 'filteredQuestions/',\r\n\r\n    deleteQhuahoo: 'deleteQhuahoo/',\r\n    submitQhuahoo: 'submitQhuahoo/',\r\n\r\n    fillForm: '/fillForm/',\r\n\r\n    send: '/send/',\r\n    suggested: 'suggested/',\r\n\r\n    login: 'login/',\r\n    profile: 'profile/',\r\n    editInformation: 'editInformation/',\r\n    register: 'registration',\r\n}","import jwt from \"jwt-decode\";\r\nimport React, { createContext, Component } from 'react';\r\n\r\nexport const UserContext = createContext();\r\nclass UserContextProvider extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = this.existingLogin() || {\r\n      user: 'Quest',\r\n      email: '',\r\n      loggedIn: false,\r\n      language: 'fin',\r\n      token: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (sessionStorage.getItem('language')) {\r\n      this.setState({ language: sessionStorage.getItem('language') })\r\n    }\r\n  }\r\n\r\n  changeLanguage = (e) => {\r\n    this.setState({ language: e });\r\n    sessionStorage.setItem('language', e);\r\n  }\r\n\r\n  changeUser = (user, email, loggedIn, token) => {\r\n    this.setState({\r\n      user: user,\r\n      email: email,\r\n      loggedIn: loggedIn,\r\n      token: token\r\n    });\r\n  }\r\n\r\n  logOut = () => {\r\n    this.changeUser('Quest', '', false);\r\n    /*sessionStorage.removeItem('email');\r\n    sessionStorage.removeItem('status');*/\r\n    sessionStorage.removeItem('token');\r\n  }\r\n\r\n  checkExistingLogin = () => {\r\n    /*let email = sessionStorage.getItem('email');\r\n    let status = sessionStorage.getItem('status');*/\r\n    let storedToken = sessionStorage.getItem('token');\r\n    if (storedToken) {\r\n      let decodedToken = jwt(storedToken)\r\n      this.changeUser(decodedToken.status, decodedToken.email, true, storedToken);\r\n    }\r\n  }\r\n\r\n  existingLogin() {\r\n    let storedToken = sessionStorage.getItem('token')\r\n    if (storedToken) {\r\n      let decodedToken = jwt(storedToken)\r\n      return {\r\n        user: decodedToken.status,\r\n        email: decodedToken.email,\r\n        loggedIn: true,\r\n        token: storedToken,\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <UserContext.Provider value={{\r\n        ...this.state,\r\n        changeUser: this.changeUser,\r\n        checkExistingLogin: this.checkExistingLogin,\r\n        logOut: this.logOut,\r\n        changeLanguage: this.changeLanguage,\r\n      }}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserContextProvider;","import React, { PureComponent } from \"react\";\r\n\r\nclass DefaultInput extends PureComponent {\r\n  render() {\r\n    return (\r\n      <>\r\n        <label style={{ fontSize: 16, marginBottom: 3 }}>\r\n          {this.props.label}\r\n        </label>\r\n        <input\r\n          type={this.props.type}\r\n          name={this.props.name}\r\n          placeholder={this.props.placeholder}\r\n          defaultValue={this.props.value}\r\n          onChange={this.props.onChange}\r\n          required={this.props.required ? this.props.required : false}\r\n          id={this.props.id}\r\n          ref={this.props.ref}\r\n          style={{\r\n            fontSize: 16,\r\n            padding: \"6px 4px\",\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultInput;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DefaultButton extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          type={this.props.type ? this.props.type : \"button\"}\r\n          style={{\r\n            outline: \"none\",\r\n            border: \"1px solid\",\r\n            borderColor: this.props.borderColor\r\n              ? this.props.borderColor\r\n              : \"#000000\",\r\n            backgroundColor: this.props.backgroundColor\r\n              ? this.props.backgroundColor\r\n              : \"#FFFFFF\",\r\n            color: this.props.textColor ? this.props.textColor : \"#000000\",\r\n            textTransform: \"capitalize\",\r\n            fontSize: \"15px\",\r\n            padding: \"2px 15px\",\r\n            width: \"100%\",\r\n          }}\r\n          onClick={this.props.onClick}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultButton;\r\n","\r\nexport const WHITE = \"#FFFFFF\"\r\n\r\nexport const DARK_GREEN = \"#43571A\";\r\nexport const GREEN = \"#80AE35\";\r\n\r\nexport const DARK_RED = \"#790207\";\r\nexport const RED = \"#CB0812\";","import React, { Component } from \"react\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport Swal from \"sweetalert2\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nexport const FromValueItem = (props) => {\r\n  return (\r\n    <label\r\n      onClick={() => props.handleClick(props.value)}\r\n      className=\"boxContainer\"\r\n    >\r\n      <span className={props.isActive ? \"checkActive\" : \"checkPassive\"}></span>\r\n      <span\r\n        style={{\r\n          fontSize: 14,\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {props.value}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const FormValueContainer = (props) => {\r\n  const staticValue = [-2, -1, 0, 1, 2];\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: 14,\r\n      }}\r\n    >\r\n      {staticValue.map((value, idx) => (\r\n        <FromValueItem\r\n          value={value}\r\n          isActive={props.answer === value}\r\n          question={props.answer}\r\n          idx={idx}\r\n          handleClick={(value) => props.handleClick(value, props.idx)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Form extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      answers: [],\r\n      answersDesc: [],\r\n      filledFormQuestion: [],\r\n      area: \"\",\r\n      path: this.props.location.pathname.split(\"/\")[2],\r\n      loader: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.path);\r\n    let email = this.props.location.email;\r\n    if (this.context.loggedIn) {\r\n      {\r\n        console.log(endpoint.questions)}\r\n      axios.post(endpoint.questions,{ data: this.state.path }).then((res) => {\r\n        console.log(res);\r\n        this.setState({ questions: res.data });\r\n        axios.post(endpoint.fillForm, { data: email }).then((response) => {\r\n          console.log(response);\r\n          let oldQuestions = res.data;\r\n          let questionDesc = [];\r\n          let questionNumber = [];\r\n          oldQuestions.map((question, idx) => {\r\n            Object.assign(oldQuestions[idx], {\r\n              questionValue: Object.values(response.data.filledForm).filter(\r\n                (item) => isNaN(item)\r\n              )[idx],\r\n              questionNumber: Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx],\r\n            });\r\n            questionDesc.push(\r\n              Object.values(response.data.filledForm).filter((item) =>\r\n                isNaN(item)\r\n              )[idx]\r\n            );\r\n            questionNumber.push(\r\n              Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx]\r\n            );\r\n          });\r\n          this.setState({ questions: oldQuestions });\r\n          this.setState({\r\n            answersDesc: questionDesc,\r\n            answers: questionNumber,\r\n          });\r\n          this.setState({ loader: false });\r\n        });\r\n      });\r\n    } else {\r\n      {\r\n        console.log(endpoint.questions)}\r\n      axios.post(endpoint.questions,{ data: this.state.path }).then((res) => {\r\n        this.setState({ loader: false });\r\n        this.setState({ questions: res.data });\r\n      });\r\n    }\r\n  }\r\n\r\n  isQuest(counter) {\r\n    if (this.context.user !== \"Quest\") {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          name={counter}\r\n          placeholder=\"Explain your choice\"\r\n          style={{ marginBottom: \"41px\", width: \"50%\" }}\r\n          onChange={this.handleChange}\r\n          disabled={this.state.disabled}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.state.answersDesc[e.currentTarget.name] = e.currentTarget.value;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.context.user !== \"Quest\") {\r\n      axios\r\n        .post(\r\n          endpoint.send,\r\n          {\r\n            ans: this.state.answers,\r\n            desc: this.state.answersDesc,\r\n            email: this.context.email,\r\n            studentAssociation: this.context.path,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.context.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          Swal.fire({\r\n            title: res.data /*language.filledFormAlert[this.context.language]*/, //  TEXT AND ICON DEFINITION FROM SERVER ROW 308\r\n            icon: res.data.includes(\"Error\") ? \"error\" : \"success\",\r\n            confirmButtonText: language.continueHolder[this.context.language],\r\n          });\r\n        });\r\n    } else {\r\n      this.props.history.push({\r\n        pathname: \"/suggestedCandidates\",\r\n        data: {\r\n          answers: this.state.answers,\r\n          studentAssociation: this.state.path,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClick = (value, idx) => {\r\n    const oldAnswers = [...this.state.answers];\r\n    oldAnswers[idx] = parseInt(value);\r\n    this.setState({\r\n      answers: [...oldAnswers],\r\n    });\r\n    // let sum = this.state.answers.reduce((result, number) => result + number);\r\n    // console.log(sum);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        {this.state.loader ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <p style={{ textAlign: \"center\" }}>Waiting for data...</p>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.state.questions &&\r\n              React.Children.toArray(\r\n                this.state.questions.map((question, idx) => (\r\n                  <>\r\n                    <div className=\"questionSet\">\r\n                      <label style={{ fontSize: 16 }}>\r\n                        <strong>\r\n                          {language.questionHolder[this.context.language]}\r\n                        </strong>\r\n                        {this.context.language === \"fin\"\r\n                          ? question.questionFin\r\n                          : question.question}\r\n                      </label>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          {language.disagreeButton[this.context.language]}\r\n                        </span>\r\n                        <span className=\"agg\">\r\n                          {language.agreeButton[this.context.language]}\r\n                        </span>\r\n                      </div>\r\n\r\n                      {this.state.answers && (\r\n                        <FormValueContainer\r\n                          answer={this.state.answers[idx]}\r\n                          idx={idx}\r\n                          handleClick={(value, idx) =>\r\n                            this.handleClick(value, idx)\r\n                          }\r\n                        />\r\n                      )}\r\n\r\n                      {this.context.user !== \"Quest\" &&\r\n                        this.state.answersDesc && (\r\n                          <DefaultInput\r\n                            label=\"Explain your choice\"\r\n                            type=\"text\"\r\n                            name={idx}\r\n                            value={this.state.answersDesc[idx]}\r\n                            onChange={this.handleChange}\r\n                            disabled={this.state.disabled}\r\n                          />\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                ))\r\n              )}\r\n\r\n            <DefaultButton\r\n              type=\"submit\"\r\n              borderColor={DARK_GREEN}\r\n              backgroundColor={GREEN}\r\n              textColor={WHITE}\r\n              text={language.fillFormButton[this.context.language]}\r\n            />\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\n\r\nclass Home extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studentAssociation: \"\",\r\n      userStudentAssociation: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.context.email) {\r\n      axios\r\n        .post(endpoint.profile, { email: this.context.email })\r\n        .then((res) => {\r\n          this.setState({\r\n            userStudentAssociation: res.data.studentAssociation,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ studentAssociation: e.target.value });\r\n    // console.log(this.state.studentAssociation);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          {language.title[this.context.language]}\r\n        </h1>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          {language.homePageDescription[this.context.language]}\r\n        </p>\r\n        {/* <label htmlFor=\"campus\">\r\n          {language.selectStudentAssociation[this.context.language]}\r\n        </label> */}\r\n        <select\r\n          onChange={this.handleChange.bind(this)}\r\n          style={{ marginBottom: 5 }}\r\n        >\r\n          {this.context.loggedIn ? (\r\n            <>\r\n              <option value=\"\">\r\n                {language.selectStudentAssociation[this.context.language]}\r\n              </option>\r\n              <option value={this.state.userStudentAssociation}>\r\n                {this.state.userStudentAssociation}\r\n              </option>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <option value=\"\">\r\n                {language.selectStudentAssociation[this.context.language]}\r\n              </option>\r\n              <option value=\"ASK\">ASK</option>\r\n              <option value=\"Helga\">Helga</option>\r\n              <option value=\"HUMAKO\">HUMAKO</option>\r\n              <option value=\"JAMKO\">JAMKO</option>\r\n              <option value=\"Laureamko\">Laureamko</option>\r\n              <option value=\"METKA\">METKA</option>\r\n              <option value=\"O'Diako\">O'Diako</option>\r\n              <option value=\"TUO\">TUO</option>\r\n            </>\r\n          )}\r\n        </select>\r\n\r\n        {this.state.studentAssociation != \"-\" && (\r\n          <Link\r\n            className=\"Form-button\"\r\n            to={{\r\n              pathname: \"/Form/\" + this.state.studentAssociation,\r\n              studentAssociation: this.state.studentAssociation,\r\n              email: this.context.email,\r\n            }}\r\n          >\r\n            {language.formButton[this.context.language]}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nclass Registration extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      registrationErrors: \"\",\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password_confirmation: this.state.password_confirmation,\r\n      status: \"Candidate\",\r\n    };\r\n    if (this.state.password == this.state.password_confirmation) {\r\n      axios.post(endpoint.register, user).then((res) => {\r\n        console.log(user.email);\r\n        console.log(res.data);\r\n        Swal.fire({\r\n          text: res.data.includes(\"address\")\r\n            ? language.registrationError[this.context.language]\r\n            : \"success\",\r\n          icon: res.data.includes(\"address\") ? \"error\" : \"success\",\r\n        });\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"ERROR\",\r\n        text: language.passwordConfirmationError[this.context.language],\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <form onSubmit={this.handleSubmit}>\r\n          <DefaultInput\r\n            label={language.emailPlaceHolder[this.context.language]}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={language.passwordPlaceHolder[this.context.language]}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={\r\n              language.passwordConfirmationPlaceHolder[this.context.language]\r\n            }\r\n            type=\"password\"\r\n            name=\"password_confirmation\"\r\n            value={this.state.password_confirmation}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultButton\r\n            type=\"submit\"\r\n            text={language.registerButton[this.context.language]}\r\n            borderColor={DARK_GREEN}\r\n            backgroundColor={GREEN}\r\n            textColor={WHITE}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {language.mainPageLink[this.context.language]}{\" \"}\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    axios.post(endpoint.login, user).then((res) => {\r\n      console.log(res);\r\n      if (res) {\r\n        const { changeUser } = this.context;\r\n        changeUser(\r\n          res.data.tokenUser.status,\r\n          res.data.tokenUser.email,\r\n          true,\r\n          res.data.token\r\n        );\r\n        if (!this.context.user || !this.context.email) {\r\n          changeUser(\"Quest\", \"\", false, this.context.language);\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"ERROR\",\r\n            text: language.wrongPasswordHolder[this.context.language],\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: language.loginHolder[this.context.language],\r\n            icon: \"success\",\r\n            confirmButtonText: \"Confirm\",\r\n          });\r\n          /*sessionStorage.setItem(\"email\", this.context.email);\r\n          sessionStorage.setItem(\"status\", this.context.user);*/\r\n          sessionStorage.setItem(\"language\", this.context.language);\r\n          sessionStorage.setItem(\"token\", this.context.token);\r\n          this.props.history.push({\r\n            pathname: \"/\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  static contextType = UserContext;\r\n\r\n  render() {\r\n    const { changeUser } = this.context;\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <form onSubmit={this.handleSubmit}>\r\n          <DefaultInput\r\n            label={language.emailPlaceHolder[this.context.language]}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={language.passwordPlaceHolder[this.context.language]}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultButton\r\n            type=\"submit\"\r\n            text={language.loginButton[this.context.language]}\r\n            borderColor={DARK_GREEN}\r\n            backgroundColor={GREEN}\r\n            textColor={WHITE}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {language.mainPageLink[this.context.language]}{\" \"}\r\n          </Link>{\" \"}\r\n          <br></br>\r\n          <br></br>\r\n          {/* <p className=\"forgot-password text-right\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/newPassword\"\r\n              }}> Unohditko salasanan? </Link></p> */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","export const Picture = ({ source, alt, className, style }) => {\r\n    return <img src={source} alt={alt} className={className ? className : ''} style={style} />\r\n}\r\nexport default Picture;","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from '../../context/userContext';\r\n\r\nconst FileUpload = ({ email, onUpload }) => {\r\n    const context = useContext(UserContext);\r\n    const { language } = context;\r\n\r\n    const [file, setFile] = useState(''); //useState is the default file: ''; only call setFile instead of setState \r\n    const [filename, setFilename] = useState('New profile picture');\r\n    const [uploadedFile, setUploadedFile] = useState({});\r\n\r\n    const onChange = async e => {\r\n        setFile(e.target.files[0]); //html input you can do multiple files, so it is like an array\r\n        setFilename(e.target.files[0].name);\r\n\r\n        const formData = new FormData();\r\n        formData.append('email', email)\r\n        formData.append('file', e.target.files[0]);\r\n\r\n        try {\r\n            const res = await axios.post('/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n            });\r\n            const { fileName, filePath } = res.data;\r\n            setUploadedFile({ fileName, filePath });\r\n            if (typeof onUpload === 'function') {\r\n                onUpload({ fileName, filePath })\r\n            }\r\n            Swal.fire({\r\n                title: 'You have succesfully changed your profile picture!',\r\n                icon: \"success\",\r\n                confirmButtonText: \"Confirm\",\r\n            })\r\n        } catch (err) {\r\n            if (err.response.status === 500) {\r\n                console.log('There was a problem with the server');\r\n            } else {\r\n                console.log(err.response.data.msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    // const onSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //     const formData = new FormData();\r\n    //     formData.append('email', email)\r\n    //     formData.append('file', file);\r\n\r\n    //     try {\r\n    //         const res = await axios.post('/upload', formData, {\r\n    //             headers: {\r\n    //                 'Content-Type': 'multipart/form-data'\r\n    //             },\r\n    //         });\r\n\r\n    //         const { fileName, filePath } = res.data;\r\n    //         setUploadedFile({ fileName, filePath });\r\n    //         if (typeof onUpload === 'function') {\r\n    //             onUpload({ fileName, filePath })\r\n    //         }\r\n    //     } catch (err) {\r\n    //         if (err.response.status === 500) {\r\n    //             console.log('There was a problem with the server');\r\n    //         } else {\r\n    //             console.log(err.response.data.msg);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // const alert = () => {\r\n    //     Swal.fire({\r\n    //         title: 'You have succesfully changed your profile picture!',\r\n    //         icon: \"success\",\r\n    //         confirmButtonText: \"Confirm\",\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"custom-file mb-4\">\r\n                <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" onChange={onChange} />\r\n                <label className=\"custom-file-label\" htmlFor=\"custom-file\">\r\n                    {filename}\r\n                </label>\r\n            </div>\r\n            {/* <input onClick={alert} type=\"submit\" value=\"Upload\" /> */}\r\n        </div>\r\n    )\r\n}\r\nexport default FileUpload","import React, { Component } from \"react\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Picture from \"../../components/partials/picture\";\r\nimport FileUpload from \"../../components/fileUpload\";\r\nimport Swal from \"sweetalert2\";\r\nimport language from \"../../properties/language\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\n\r\nclass Profile extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profile: {},\r\n      filename: null,\r\n    };\r\n  }\r\n\r\n  fetchData = async () => {\r\n    var email = this.context.email;\r\n    if (this.props.location.data != null) {\r\n      email = this.props.location.data;\r\n    }\r\n    await axios\r\n      .post(endpoint.profile, { email: email })\r\n      .then((res) => {\r\n        this.setState({ profile: res.data });\r\n        // console.log(\"is this the correct email\");\r\n        // console.log(res.data.email);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  updatePicture = (data) => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      profile: {\r\n        ...state.profile,\r\n        image: data.filePath,\r\n      },\r\n    }));\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  submitData = async () => {\r\n    await axios\r\n      .post(endpoint.editInformation, { data: this.state.profile })\r\n      .then((res) => {\r\n        Swal.fire({\r\n          title: language.changeProfileDataAlert[this.context.language],\r\n          icon: \"success\",\r\n        });\r\n        this.setState({ profile: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    this.onChange = (e) => {\r\n      let target = e.target;\r\n      this.setState((prevState) => {\r\n        let profile = { ...prevState.profile };\r\n        profile[target.id] = target.value;\r\n        return { profile };\r\n      });\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { profile } = this.state;\r\n    console.log(profile.email);\r\n    if (!profile) {\r\n      return null;\r\n    }\r\n    let information = [\r\n      {\r\n        value: profile.name,\r\n        key: this.state.profile.name,\r\n        id: \"name\",\r\n        placeholder: language.firstName[this.context.language],\r\n      },\r\n      {\r\n        value: profile.surname,\r\n        id: \"surname\",\r\n        placeholder: language.surName[this.context.language],\r\n      },\r\n      {\r\n        value: profile.school,\r\n        id: \"school\",\r\n        placeholder: language.school[this.context.language],\r\n      },\r\n      {\r\n        value: profile.studentAssociation,\r\n        id: \"studentAssociation\",\r\n        placeholder:\r\n          language.selectStudentAssociationList[this.context.language],\r\n      },\r\n      {\r\n        value: profile.description,\r\n        id: \"description\",\r\n        placeholder: language.description[this.context.language],\r\n      },\r\n      {\r\n        value: profile.campus,\r\n        id: \"campus\",\r\n        placeholder: language.campus[this.context.language],\r\n      },\r\n    ];\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <form onSubmit={this.submitData}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            {profile.image && (\r\n              <div\r\n                style={{\r\n                  width: 100,\r\n                  height: 120,\r\n                  objectFit: \"contain\",\r\n                  overflow: \"hidden\",\r\n                  borderRadius: \"50%\",\r\n                }}\r\n              >\r\n                <Picture\r\n                  source={process.env.PUBLIC_URL + profile.image}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          {information &&\r\n            React.Children.toArray(\r\n              information.map((info) => (\r\n                <div>\r\n                  <DefaultInput\r\n                    label={info.placeholder}\r\n                    type=\"text\"\r\n                    name=\"password\"\r\n                    value={info.value}\r\n                    onChange={this.onChange}\r\n                    className=\"profileInput\"\r\n                    id={info.id}\r\n                    required\r\n                  />\r\n                </div>\r\n              ))\r\n            )}\r\n          <FileUpload\r\n            email={profile.email}\r\n            onUpload={this.updatePicture}\r\n          ></FileUpload>\r\n          <DefaultButton\r\n            type=\"submit\"\r\n            borderColor={DARK_GREEN}\r\n            backgroundColor={GREEN}\r\n            textColor={WHITE}\r\n            text={language.updateButton[this.context.language]}\r\n          />\r\n          <hr />\r\n          <Link\r\n            to={{\r\n              pathname: \"/Form/\" + profile.studentAssociation,\r\n              email: profile.email,\r\n            }}\r\n          >\r\n            {language.formLink[this.context.language]}\r\n          </Link>\r\n          <br />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import Axios from 'axios';\r\nimport { endpoint } from '../api';\r\n\r\nconst FilterCandidateTable = (setStateArray, filter) => {\r\n    Axios.post(endpoint.filteredCandidates, { data: filter })\r\n        .then(res => {\r\n            console.log(res)\r\n            let q = [];\r\n            for (var i = 0; i < res.data.length; i++) {\r\n                setStateArray(['Candidate' + i], res.data[i])\r\n                q.push(res.data[i].name);\r\n                setStateArray('amount', q);\r\n            }\r\n        })\r\n}\r\n\r\nconst SetCandidateTable = (setStateArray) => {\r\n    Axios.get(endpoint.candidates)\r\n        .then(res => {\r\n            let q = [];\r\n            let s = [];\r\n            for (var i = 0; i < res.data.length; i++) {\r\n                setStateArray(['Candidate' + i], res.data[i])\r\n                q.push(res.data[i].name);\r\n                setStateArray('amount', q);\r\n                s.push(res.data[i].studentAssociation);\r\n\r\n            }\r\n            const uniqueAssociations = Array.from(new Set(s));\r\n            setStateArray('Association', uniqueAssociations);\r\n        });\r\n}\r\n\r\nexport {\r\n    SetCandidateTable,\r\n    FilterCandidateTable,\r\n};","const QuestionAreaList = {\r\n    universal: 'Select filter',\r\n    ask: 'ASK',\r\n    helga: 'Helga',\r\n    humako: 'HUMAKO',\r\n    jamko: 'JAMKO',\r\n    laureamko: 'Laureamko',\r\n    metka: 'METKA',\r\n    odiako: \"O'Diako\",\r\n    tuo: 'TUO',\r\n};\r\n\r\nconst StudentAssociations = Object.assign({}, QuestionAreaList);\r\ndelete StudentAssociations.universal;\r\n\r\n\r\n\r\nexport {\r\n    QuestionAreaList,\r\n    StudentAssociations,\r\n}","const StudentAssociationOption = ({ value, text }) => {\r\n    return <option value={value}>{text}</option>\r\n}\r\n\r\n\r\nexport default StudentAssociationOption;","\r\nimport React from 'react';\r\nimport StudentAssociationOption from './studentAssociationOption';\r\n\r\n\r\nconst SelectMenu = ({ className, action, selectMenuList }) => {\r\n    return (\r\n        <select className={className} onChange={action}>\r\n            {Object.values(selectMenuList).map(item => {\r\n                return <StudentAssociationOption key={item} value={item} text={item} />\r\n            })}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SelectMenu;","import { Link } from 'react-router-dom'\r\n\r\nconst CandidateTableLinkItem = ({ pathname, data, textOne, textTwo }) => {\r\n    return (\r\n        <td style={{ cursor: \"pointer\" }}>\r\n            <Link to={{ pathname: pathname, data: data }}>\r\n                {textOne + ' ' + textTwo}\r\n            </Link>\r\n        </td>\r\n    );\r\n}\r\n\r\nexport default CandidateTableLinkItem;","const CandidateTableItem = ({ text }) => {\r\n    return (\r\n        <td>{text}</td>\r\n    );\r\n}\r\n\r\nexport default CandidateTableItem;","import CandidateTableLinkItem from './candidateTableLinkItem'\r\nimport CandidateTableItem from './candidateTableItem'\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport React, { useContext } from 'react';\r\n\r\n\r\nconst CandidateTableItemRow = ({ text, textOne, textTwo, data, candidateDeleted, button }) => {\r\n    const context = useContext(UserContext);\r\n\r\n    const confirmDelete = (email) => {\r\n        // console.log(data)\r\n\r\n        const callback = () => candidateDeleted(data)\r\n\r\n        axios\r\n            .post('/deleteCandidate', { deleteCandidateByEmail: email })\r\n            .then(callback, callback);\r\n    }\r\n\r\n    return (\r\n        <tr id=\"candidate\" >\r\n            <CandidateTableLinkItem textOne={textOne} textTwo={textTwo} pathname={'/Profile'} data={data} />\r\n            <CandidateTableItem text={text} />\r\n            <td>\r\n                <button style={{\r\n                    backgroundColor: \"rgb(203, 8, 18)\",\r\n                    color: \"white\",\r\n                }} onClick={() => confirmDelete(data)}>{language.deleteHolder[context.language]}</button>\r\n            </td>\r\n        </tr >\r\n    );\r\n}\r\n\r\n\r\nexport default CandidateTableItemRow;","const CandidateTableHeader = ({ header }) => {\r\n    return <th>{header}</th>\r\n}\r\n\r\nexport default CandidateTableHeader;","import CandidateTableItemRow from './candidateTableRow'\r\nimport CandidateTableHeader from './candidateTableHeader'\r\nimport Table from 'react-bootstrap/Table';\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport React, { useContext } from 'react';\r\n\r\nconst CandidateTable = ({ stateArray, counter, candidateDeleted }) => {\r\n    const context = useContext(UserContext);\r\n    return (\r\n        <Table striped bordered hover variant=\"light\">\r\n            <thead>\r\n                <tr>\r\n                    <CandidateTableHeader header={language.candidateHolder[context.language]} />\r\n                    <CandidateTableHeader header={language.studentAssociationHolder[context.language]} />\r\n                    <CandidateTableHeader header={language.deleteHolder[context.language]} />\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {stateArray.amount.map(index => {\r\n                    counter++;\r\n                    return (\r\n                        <CandidateTableItemRow key={index} id=\"candidate\"\r\n                            candidateDeleted={candidateDeleted}\r\n                            text={stateArray['Candidate' + counter].studentAssociation}\r\n                            textOne={stateArray['Candidate' + counter].name}\r\n                            textTwo={stateArray['Candidate' + counter].surname}\r\n                            data={stateArray['Candidate' + counter].email}\r\n                        />\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default CandidateTable;","import React, { Component } from 'react';\r\nimport { SetCandidateTable, FilterCandidateTable } from '../../functions/dbCalls';\r\nimport { QuestionAreaList } from '../../components/partials/selectMenuLists'\r\nimport SelectMenu from '../../components/partials/selectMenu.js';\r\nimport CandidateTable from '../../components/partials/candidateTable';\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from '../../context/userContext';\r\n\r\nclass Candidates extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: [],\r\n      Association: [],\r\n      theme: this.props.theme,\r\n      filtered: false,\r\n    }\r\n  }\r\n\r\n  SetStateArray = (stateArray, value) => {\r\n    // console.log(value)\r\n    this.setState({ [stateArray]: value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.state.filtered ? console.log('filtteröinnin ja poiston chekki') :\r\n      SetCandidateTable(this.SetStateArray)\r\n  }\r\n\r\n  handleChange(e) {\r\n    if (e.target.value != 'Select filter') {\r\n      this.setState({ filtered: true })\r\n      FilterCandidateTable(this.SetStateArray, e.target.value);\r\n    } else {\r\n      SetCandidateTable(this.SetStateArray); // IF undefined value is given, Return table state including every candidate\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: '50%', marginLeft: '25%' }}>\r\n        <label htmlFor=\"school\" className=\"filterCandidateLabel\"\r\n          style={{\r\n            backgroundColor: 'rgba(255, 255, 255, 0.829)', width: '50%', marginTop: '5%',\r\n            marginLeft: '18%'\r\n          }}\r\n        >{language.filterCandidateLabel[this.context.language]}</label>\r\n        <SelectMenu\r\n          className={'studentAssociationList'}\r\n          selectMenuList={QuestionAreaList}\r\n          action={this.handleChange.bind(this)}\r\n        />\r\n        {/* {console.log(this.state.amount)} */}\r\n        <CandidateTable\r\n          stateArray={this.state} counter={-1}\r\n          candidateDeleted={() => {\r\n            console.log('Got event')\r\n            SetCandidateTable(this.SetStateArray)\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Candidates;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  DARK_GREEN,\r\n  DARK_RED,\r\n  GREEN,\r\n  RED,\r\n  WHITE,\r\n} from \"../../helpers/constants\";\r\nimport DefaultButton from \"../defaultButton\";\r\nimport DefaultInput from \"../defaultInput\";\r\nimport { endpoint } from \"../../api\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\nclass QuestionsItem extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputFinnish: \"\",\r\n      inputEnglish: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      inputFinnish: this.props.question.questionFin,\r\n      inputEnglish: this.props.question.question,\r\n    });\r\n  }\r\n\r\n  changeInputValue = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  confirmChange = (e) => {\r\n    e.preventDefault();\r\n    var data = {\r\n      question: this.state.inputEnglish,\r\n      questionFin: this.state.inputFinnish,\r\n      id: this.props.question._id,\r\n    };\r\n\r\n    axios\r\n      .post(endpoint.submitQhuahoo, { data })\r\n      .then((res) => {\r\n        alert(\"We've changed you\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  confirmDelete = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(endpoint.deleteQhuahoo, { id: this.props.question._id })\r\n      .then((res) => {\r\n        alert(\"is removed\");\r\n        this.props.refreshQuestions();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { idx, question } = this.props;\r\n    return (\r\n      <div\r\n        key={idx}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          borderBottom: \"1px solid #999999\",\r\n          padding: \"20px 0\",\r\n        }}\r\n      >\r\n        <DefaultInput\r\n          label=\"Kysymys suomeksi\"\r\n          type=\"text\"\r\n          name=\"inputFinnish\"\r\n          value={this.state.inputFinnish}\r\n          onChange={this.changeInputValue}\r\n        />\r\n\r\n        <DefaultInput\r\n          label=\"Question in English\"\r\n          type=\"text\"\r\n          name=\"inputEnglish\"\r\n          value={this.state.inputEnglish}\r\n          onChange={this.changeInputValue}\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <b style={{ fontSize: 16 }}>\r\n            {\" \"}\r\n            {language.school[this.context.language]} {question.area}\r\n          </b>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ marginRight: 10 }}>\r\n              <DefaultButton\r\n                borderColor={DARK_GREEN}\r\n                backgroundColor={GREEN}\r\n                textColor={WHITE}\r\n                onClick={this.confirmChange}\r\n                text={language.editButton[this.context.language]}\r\n              />\r\n            </div>\r\n            <div>\r\n              <DefaultButton\r\n                borderColor={DARK_RED}\r\n                backgroundColor={RED}\r\n                textColor={WHITE}\r\n                onClick={this.confirmDelete}\r\n                text={language.deleteButton[this.context.language]}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionsItem;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\nimport QuestionsItem from \"../../components/questionItem\";\r\nimport { endpoint } from \"../../api\";\r\n\r\nclass Questions extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      schools: [],\r\n      filtersData: [],\r\n      selectBox: \"allQuestion\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.allQuestions();\r\n  }\r\n\r\n  changeInputValue = (e, idx) => {\r\n    let newQuestions = [...this.state.questions];\r\n    let question = newQuestions.findIndex((q) => q._id === idx);\r\n    //newQuestions[question].question = e.target.value;\r\n    newQuestions[question].question = e.target.value;\r\n    this.setState({ questions: [...newQuestions] });\r\n  };\r\n\r\n  allQuestions = () => {\r\n    console.log(\"inside\");\r\n    this.setState({ questions: [] });\r\n    axios.get(endpoint.allQuestions).then((res) => {\r\n      this.setState({ questions: res.data });\r\n      let newFilters = [];\r\n      res.data.map((filter) => newFilters.push(filter.area));\r\n      let unique = [...new Set(newFilters)];\r\n      this.setState({ filtersData: [...unique] });\r\n    });\r\n  };\r\n\r\n  FilterQuestions = (filter) => {\r\n    this.setState({ questions: [] });\r\n    axios.post(endpoint.filteredQuestions, { data: filter }).then((res) => {\r\n      this.setState({ questions: res.data });\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.value !== \"Select filter\") {\r\n      console.log(\"not select filter\");\r\n      this.FilterQuestions(e.target.value);\r\n      this.setState({ selectBox: e.target.value });\r\n    } else {\r\n      console.log(\"select filter\");\r\n      this.allQuestions();\r\n      this.setState({ selectBox: \"allQuestion\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginTop: 20,\r\n            backgroundColor: \"rgba(255, 255, 255, 0.829)\",\r\n          }}\r\n        >\r\n          <span className=\"filterCandidateLabel\">\r\n            {language.filterCandidateLabel[this.context.language]}\r\n          </span>\r\n          <select className=\"questionsSelectBox\" onChange={this.handleChange}>\r\n            <option value=\"Select filter\">Select filter</option>\r\n            {this.state.filtersData &&\r\n              React.Children.toArray(\r\n                this.state.filtersData.map((filter) => (\r\n                  <option value={filter}>{filter}</option>\r\n                ))\r\n              )}\r\n          </select>\r\n        </div>\r\n\r\n        <form>\r\n          <div className=\"formQuestions\">\r\n            {this.state.questions &&\r\n              React.Children.toArray(\r\n                this.state.questions.map((question) => (\r\n                  <QuestionsItem\r\n                    question={question}\r\n                    refreshQuestions={() => {\r\n                      this.state.selectBox === \"allQuestion\"\r\n                        ? this.allQuestions()\r\n                        : this.FilterQuestions(this.state.selectBox);\r\n                    }}\r\n                  />\r\n                ))\r\n              )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from \"react\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport Swal from \"sweetalert2\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nexport const FromValueItem = (props) => {\r\n  return (\r\n    <label\r\n      onClick={() => props.handleClick(props.value)}\r\n      className=\"boxContainer\"\r\n    >\r\n      <span className={props.isActive ? \"checkActive\" : \"checkPassive\"}></span>\r\n      <span\r\n        style={{\r\n          fontSize: 14,\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {props.value}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const FormValueContainer = (props) => {\r\n  const staticValue = [-2, -1, 0, 1, 2];\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: 14,\r\n      }}\r\n    >\r\n      {staticValue.map((value, idx) => (\r\n        <FromValueItem\r\n          value={value}\r\n          isActive={props.answer === value}\r\n          question={props.answer}\r\n          idx={idx}\r\n          handleClick={(value) => props.handleClick(value, props.idx)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport class CandidateAnswers extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      answers: [],\r\n      answersDesc: [],\r\n      filledFormQuestion: [],\r\n      area: \"\",\r\n      path: this.props.candidateInfo.studentAssociation,\r\n      loader: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var email = this.props.candidateInfo.email;\r\n    if (this.context.loggedIn) {\r\n      axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n        console.log(res);\r\n        this.setState({ questions: res.data });\r\n        axios.post(endpoint.fillForm, { data: email }).then((response) => {\r\n          console.log(response);\r\n          let oldQuestions = res.data;\r\n          let questionDesc = [];\r\n          let questionNumber = [];\r\n          oldQuestions.map((question, idx) => {\r\n            Object.assign(oldQuestions[idx], {\r\n              questionValue: Object.values(response.data.filledForm).filter(\r\n                (item) => isNaN(item)\r\n              )[idx],\r\n              questionNumber: Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx],\r\n            });\r\n            questionDesc.push(\r\n              Object.values(response.data.filledForm).filter((item) =>\r\n                isNaN(item)\r\n              )[idx]\r\n            );\r\n            questionNumber.push(\r\n              Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx]\r\n            );\r\n          });\r\n          this.setState({ questions: oldQuestions });\r\n          this.setState({\r\n            answersDesc: questionDesc,\r\n            answers: questionNumber,\r\n          });\r\n          this.setState({ loader: false });\r\n        });\r\n      });\r\n    } else {\r\n      axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n        this.setState({ loader: false });\r\n        this.setState({ questions: res.data });\r\n      });\r\n    }\r\n  }\r\n\r\n  isQuest(counter) {\r\n    if (this.context.user !== \"Quest\") {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          name={counter}\r\n          placeholder=\"Explain your choice\"\r\n          style={{ marginBottom: \"41px\", width: \"50%\" }}\r\n          onChange={this.handleChange}\r\n          disabled={this.state.disabled}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.state.answersDesc[e.currentTarget.name] = e.currentTarget.value;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.context.user !== \"Quest\") {\r\n      axios\r\n        .post(endpoint.send, {\r\n          ans: this.state.answers,\r\n          desc: this.state.answersDesc,\r\n          email: this.context.email,\r\n          studentAssociation: this.context.path,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          Swal.fire({\r\n            title: language.filledFormAlert[this.context.language],\r\n            icon: \"success\",\r\n            confirmButtonText: language.continueHolder[this.context.language],\r\n          });\r\n        });\r\n    } else {\r\n      this.props.history.push({\r\n        pathname: \"/suggestedCandidates\",\r\n        data: {\r\n          answers: this.state.answers,\r\n          studentAssociation: this.state.path,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClick = (value, idx) => {\r\n    const oldAnswers = [...this.state.answers];\r\n    oldAnswers[idx] = parseInt(value);\r\n    this.setState({\r\n      answers: [...oldAnswers],\r\n    });\r\n    // let sum = this.state.answers.reduce((result, number) => result + number);\r\n    // console.log(sum);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        {this.state.loader ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <p style={{ textAlign: \"center\" }}>Waiting for data...</p>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.state.questions &&\r\n              React.Children.toArray(\r\n                this.state.questions.map((question, idx) => (\r\n                  <>\r\n                    <div className=\"questionSet\">\r\n                      <label style={{ fontSize: 16 }}>\r\n                        <strong>\r\n                          {language.questionHolder[this.context.language]}\r\n                        </strong>\r\n                        {this.context.language === \"fin\"\r\n                          ? question.questionFin\r\n                          : question.question}\r\n                      </label>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          {language.disagreeButton[this.context.language]}\r\n                        </span>\r\n                        <span className=\"agg\">\r\n                          {language.agreeButton[this.context.language]}\r\n                        </span>\r\n                      </div>\r\n\r\n                      {this.state.answers && (\r\n                        <FormValueContainer\r\n                          answer={this.state.answers[idx]}\r\n                          idx={idx}\r\n                          handleClick={(value, idx) =>\r\n                            this.handleClick(value, idx)\r\n                          }\r\n                        />\r\n                      )}\r\n\r\n                      {this.context.user !== \"Quest\" &&\r\n                        this.state.answersDesc && (\r\n                          <DefaultInput\r\n                            label=\"Explain your choice\"\r\n                            type=\"text\"\r\n                            name={idx}\r\n                            value={this.state.answersDesc[idx]}\r\n                            onChange={this.handleChange}\r\n                            disabled={this.state.disabled}\r\n                          />\r\n                        )}\r\n                    </div>\r\n                  </>\r\n                ))\r\n              )}\r\n\r\n            <DefaultButton\r\n              type=\"submit\"\r\n              borderColor={DARK_GREEN}\r\n              backgroundColor={GREEN}\r\n              textColor={WHITE}\r\n              text={language.fillFormButton[this.context.language]}\r\n            />\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CandidateAnswers;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Picture from \"../../components/partials/picture\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { endpoint } from \"../../api\";\r\nimport CandidateAnswers from \"../candidateAnswers\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Suggestions extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      suggestions: [],\r\n      showCandidateAnswers: false,\r\n    };\r\n  }\r\n\r\n  hideComponent = (name) => {\r\n    console.log(name);\r\n    switch (name) {\r\n      case \"showCandidateAnswers\":\r\n        this.setState({\r\n          showCandidateAnswers: !this.state.showCandidateAnswers,\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    var data = {\r\n      answers: this.props.location.data.answers,\r\n      studentAssociation: this.props.location.data.studentAssociation,\r\n    };\r\n    axios.post(endpoint.suggested, { data: data }).then((res) => {\r\n      this.setState({ suggestions: res.data });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { showCandidateAnswers } = this.state;\r\n    const myData = [].concat(this.state.suggestions);\r\n    if (this.state.suggestions.length > 0) {\r\n      return (\r\n        <div\r\n          className=\"candidateSuggestions\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              display: \"inline-block\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {language.matchingCandidates[this.context.language]}\r\n          </h1>\r\n          {myData\r\n            .sort((a, b) => (a.similarity < b.similarity ? 1 : -1))\r\n            .map((candidate) => {\r\n              return (\r\n                <div className=\"candidateSuggestionCenter\">\r\n                  <h2\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {\r\n                      <Picture\r\n                        className=\"pic\"\r\n                        source={process.env.PUBLIC_URL + candidate.image}\r\n                      ></Picture>\r\n                    }{\" \"}\r\n                    {candidate.name} {candidate.surname}{\" \"}\r\n                    {candidate.similarity.toFixed() + \"%\"}\r\n                  </h2>{\" \"}\r\n                  {showCandidateAnswers && (\r\n                    <CandidateAnswers candidateInfo={candidate} />\r\n                  )}\r\n                  <button\r\n                    onClick={() => this.hideComponent(\"showCandidateAnswers\")}\r\n                  >\r\n                    {showCandidateAnswers ? <p>Show less</p> : <p>Show more</p>}\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className=\"candidateSuggestions\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >\r\n          <h2\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            {language.noSimilarCandidates[this.context.language]}\r\n          </h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Suggestions;\r\n","import React, { Component } from 'react'\r\nimport axios from \"axios\"\r\nimport swal from \"sweetalert2\"\r\nimport { CSVReader } from 'react-papaparse'\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport { endpoint } from '../../api';\r\n\r\nconst buttonRef = React.createRef()\r\nclass AddCandidates extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filename: null,\r\n      candidates: [],\r\n    }\r\n  }\r\n  handleOpenDialog = (e) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      buttonRef.current.open(e)\r\n    }\r\n  }\r\n\r\n  handleOnFileLoad = (data, file) => {\r\n    this.setState({ filename: file.name })\r\n    if (file.name.includes('.csv')) {\r\n      this.setState({ candidates: null }); //Reset the state\r\n      this.setState({ candidates: data });\r\n    }\r\n    else {\r\n      console.log('NOT CSV');\r\n    }\r\n  }\r\n\r\n  handleOnError = (err, file, inputElem, reason) => {\r\n    console.log(err)\r\n  }\r\n\r\n  handleRemoveFile = (e) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      buttonRef.current.removeFile(e)\r\n      this.setState({ candidates: null })\r\n      console.log(this.state.candiates);\r\n    }\r\n  }\r\n\r\n  confirmSubmit() {\r\n    swal.fire({\r\n      title: 'Caution!',\r\n      text: language.addCandidatesCautionHolder[this.context.language],\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: language.continueHolder[this.context.language]\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.handeSubmit();\r\n        swal.fire(\r\n          language.addedCandidatesToDatabaseAlert[this.context.language]\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  handeSubmit() {\r\n    if (this.state.filename.includes('.csv')) {\r\n      axios.post(endpoint.addCandidates, { candidate: this.state.candidates })\r\n        .then(res => {\r\n          console.log('YEET');\r\n        });\r\n    }\r\n    else {\r\n      alert('Cant upload a file that is not a CSV one');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"addCan\"\r\n        style={{\r\n          marginTop: 20,\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          backgroundColor: \"#FFFFFF\",\r\n          padding: 15,\r\n        }}\r\n      >\r\n        <p> {language.manyCandidates[this.context.language]}</p>\r\n        <CSVReader\r\n          ref={buttonRef}\r\n          onFileLoad={this.handleOnFileLoad}\r\n          onError={this.handleOnError}\r\n          onSubmit={this.handleOnSubmit}\r\n          noClick\r\n          noDrag\r\n          config={{ header: true }}\r\n          onRemoveFile={this.handleOnRemoveFile}\r\n        >\r\n          {({ file }) => (\r\n            <aside\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                marginBottom: 10\r\n              }}\r\n            >\r\n              <button\r\n                type='button'\r\n                onClick={this.handleOpenDialog}\r\n                style={{\r\n                  borderRadius: 0,\r\n                  marginLeft: 0,\r\n                  marginRight: 0,\r\n                  width: '30%',\r\n                  paddingLeft: 0,\r\n                  paddingRight: 0,\r\n                }}\r\n              >\r\n                {language.browseButton[this.context.language]}\r\n              </button>\r\n              <div\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderStyle: 'solid',\r\n                  borderColor: '#ccc',\r\n                  height: 45,\r\n                  lineHeight: 2.5,\r\n                  marginTop: 5,\r\n                  marginBottom: 5,\r\n                  paddingLeft: 13,\r\n                  paddingTop: 3,\r\n                  width: '60%'\r\n                }}\r\n              >\r\n                {file && file.name}\r\n              </div>\r\n              <button\r\n                style={{\r\n                  borderRadius: 0,\r\n                  marginLeft: 0,\r\n                  marginRight: 0,\r\n                  paddingLeft: 20,\r\n                  paddingRight: 20,\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                }}\r\n                onClick={this.handleRemoveFile}\r\n              >\r\n                {language.removeButton[this.context.language]}\r\n              </button>\r\n            </aside>\r\n          )}\r\n        </CSVReader>\r\n        <button onClick={this.confirmSubmit.bind(this)}\r\n          style={{\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >{language.fillFormButton[this.context.language]}</button>\r\n      </div >\r\n    )\r\n  }\r\n}\r\nexport default AddCandidates;","import React, { Component } from 'react'\r\nimport Swal from 'sweetalert2';\r\nimport axios from \"axios\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from '../../context/userContext';\r\nimport { endpoint } from '../../api';\r\n\r\nexport class addOneCandidate extends Component {\r\n    static contextType = UserContext;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            surname: '',\r\n            email: '',\r\n            school: '',\r\n            studentAssociation: '',\r\n            campus: '',\r\n            electoralDistrict: '',\r\n            electoralAlliance: '',\r\n            description: '',\r\n        };\r\n    }\r\n\r\n    handleChange() {\r\n        this.setState({ studentAssociation: this.refs.campus.value });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n        this.setState({ studentAssociation: this.refs.campus.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const oneCandidate = {\r\n            name: this.state.name,\r\n            surname: this.state.surname,\r\n            email: this.state.email,\r\n            school: this.state.school,\r\n            studentAssociation: this.state.studentAssociation,\r\n            campus: this.state.campus,\r\n            electoralDistrict: this.state.electoralDistrict,\r\n            electoralAlliance: this.state.electoralAlliance,\r\n            description: this.state.description,\r\n        }\r\n        axios.post(endpoint.addOneCandidate, oneCandidate)\r\n            .then(res => {\r\n                Swal.fire({\r\n                    text: res.data.includes('address') ? language.addingOneCandidateToDatabaseErrorAlert[this.context.language] : language.addingOneCandidateToDatabaseAlert[this.context.language],\r\n                    icon: res.data.includes('address') ? 'error' : 'success'\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    marginTop: 20,\r\n                    maxWidth: 500,\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    backgroundColor: \"#FFFFFF\",\r\n                    padding: 15,\r\n                }}\r\n            >\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <p>{language.oneCandidate[this.context.language]}</p>\r\n                    <label>{language.firstName[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"name\" value={this.state.name} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.surName[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"surname\" value={this.state.surname} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.emailPlaceHolder[this.context.language]}: </label>\r\n                    <input type=\"text\" name=\"email\" value={this.state.email} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.school[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"school\" value={this.state.school} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label htmlFor=\"campus\">{language.selectStudentAssociation[this.context.language]}</label>\r\n                    <select ref=\"campus\" onChange={this.handleChange}>\r\n                        <option value=\"ASK\">ASK</option>\r\n                        <option value=\"Helga\">Helga</option>\r\n                        <option value=\"HUMAKO\">HUMAKO</option>\r\n                        <option value=\"JAMKO\">JAMKO</option>\r\n                        <option value=\"Laureamko\">Laureamko</option>\r\n                        <option value=\"METKA\">METKA</option>\r\n                        <option value=\"O'Diako\">O'Diako</option>\r\n                        <option value=\"TUO\">TUO</option>\r\n                    </select>\r\n                    <br></br>\r\n                    <label>{language.campus[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"campus\" value={this.state.campus} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.electoralDistrict[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"electoralDistrict\" value={this.state.electoralDistrict} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.electoralAlliance[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"electoralAlliance\" value={this.state.electoralAlliance} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.description[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"description\" value={this.state.description} placeholder={''} onChange={this.handleChange}></input><br></br><br></br>\r\n                    <button type=\"submit\"\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\",\r\n                        }}\r\n                    >\r\n                        {language.fillFormButton[this.context.language]}</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default addOneCandidate","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\n\r\nclass AddQuestion extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question: \"\",\r\n      questionFin: \"\",\r\n      area: \"\",\r\n      selectValue: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  selectBoxChanged = (event) => {\r\n    this.setState({ selectValue: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const question = {\r\n      question: this.state.question,\r\n      questionFin: this.state.questionFin,\r\n      area: this.state.selectValue,\r\n    };\r\n    axios\r\n      .post(endpoint.addQuestion, question)\r\n      .then((res) => {\r\n        Swal.fire({\r\n          title: language.successQuestionAddedHolder[this.context.language],\r\n          icon: \"success\",\r\n          confirmButtonText: language.continueHolder[this.context.language],\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    this.setState({ question: \"\" });\r\n    this.setState({ questionFin: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div\r\n          style={{\r\n            marginTop: 20,\r\n            maxWidth: 500,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            backgroundColor: \"#FFFFFF\",\r\n            padding: 15,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <DefaultInput\r\n              label=\"Question in english\"\r\n              type=\"question\"\r\n              name=\"question\"\r\n              value={this.state.question}\r\n              onChange={this.handleChange}\r\n              // required={true}\r\n            />\r\n\r\n            <DefaultInput\r\n              label=\"Kysymys suomeksi\"\r\n              type=\"question\"\r\n              name=\"questionFin\"\r\n              value={this.state.questionFin}\r\n              onChange={this.handleChange}\r\n              required={true}\r\n            />\r\n\r\n            <label style={{ fontSize: 16, marginTop: 5 }}>\r\n              {language.school[this.context.language]}\r\n            </label>\r\n            <select\r\n              style={{\r\n                marginBottom: 10,\r\n                fontSize: 16,\r\n                padding: \"6px 4px\",\r\n              }}\r\n              value={this.state.selectValue}\r\n              onChange={this.selectBoxChanged}\r\n            >\r\n              <option value=\"Undefined\">Undefined</option>\r\n              <option value=\"ASK\">ASK</option>\r\n              <option value=\"Helga\">Helga</option>\r\n              <option value=\"HUMAKO\">HUMAKO</option>\r\n              <option value=\"JAMKO\">JAMKO</option>\r\n              <option value=\"Laureamko\">Laureamko</option>\r\n              <option value=\"METKA\">METKA</option>\r\n              <option value=\"O'Diako\">O'Diako</option>\r\n              <option value=\"TUO\">TUO</option>\r\n            </select>\r\n\r\n            <DefaultButton\r\n              type=\"submit\"\r\n              borderColor={DARK_GREEN}\r\n              backgroundColor={GREEN}\r\n              textColor={WHITE}\r\n              text={language.addQuestionButton[this.context.language]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddQuestion;\r\n","import React, { useState, createContext, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n    const [mode, setTheme] = useState(\"light\");\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('theme')) {\r\n            setTheme(sessionStorage.getItem('theme'));\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <ThemeContext.Provider\r\n            value={{\r\n                mode,\r\n                setTheme: () => {\r\n                    console.log(mode)\r\n                    setTheme(mode === \"dark\" ? \"light\" : \"dark\")\r\n                    sessionStorage.setItem('theme', mode === \"dark\" ? \"light\" : \"dark\");\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ThemeProvider;","import React, { useContext, useState } from 'react';\r\nimport { ThemeContext } from \"../../context/ThemeProvider\";\r\nimport { IoMdMoon, } from \"react-icons/io\";\r\nimport { FiSun } from \"react-icons/fi\";\r\n\r\nconst ThemeToggleButton = () => {\r\n    const [icon, setIcon] = useState(false)\r\n    const { setTheme, mode } = useContext(ThemeContext);\r\n\r\n    const iconChange = () => {\r\n        setIcon(!icon);\r\n        setTheme(!mode);\r\n    }\r\n\r\n    return mode === 'dark' ?\r\n        <FiSun style={{ color: '#FFFFFF' }} onClick={() => iconChange()} />\r\n        :\r\n        <IoMdMoon style={{ color: '#000000' }} onClick={() => iconChange()} />\r\n}\r\n\r\nexport default ThemeToggleButton;","export default __webpack_public_path__ + \"static/media/finland.0b789380.svg\";","export default __webpack_public_path__ + \"static/media/uk.7bb03f7e.svg\";","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BiHome } from \"react-icons/bi\";\r\nimport language from \"../../properties/language\";\r\nimport { BsLock } from \"react-icons/bs\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport ThemeToggleButton from \"../themeToggleButton\";\r\nimport { HiOutlineUserAdd } from \"react-icons/hi\";\r\n\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { ThemeContext } from \"../../context/ThemeProvider\";\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport Finland from '../../assets/icons/finland.svg'\r\nimport UK from '../../assets/icons/uk.svg'\r\n\r\nclass Navbar extends Component {\r\n  static contextType = UserContext;\r\n\r\n  componentDidMount() {\r\n    const { checkExistingLogin } = this.context;\r\n    checkExistingLogin();\r\n  }\r\n\r\n  isDark = (mode) => {\r\n    return mode === 'dark';\r\n  }\r\n\r\n  render() {\r\n    const { logOut, changeLanguage, changeUser } = this.context;\r\n    // language,\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <div className={classNames({\r\n            'navLoginWrapper': true,\r\n            'navLoginWrapperLight': !this.isDark(theme.mode),\r\n            'navLoginWrapperDark': this.isDark(theme.mode),\r\n\r\n          })}>\r\n            <div className={classNames({\r\n              'container': true,\r\n              'navLoginContainer': true\r\n            })}>\r\n              <ThemeToggleButton />\r\n              <NavLink to=\"/\">\r\n                <BiHome style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                  {language.navigationHome[this.context.language]}\r\n                </span>\r\n              </NavLink>\r\n              {this.context.loggedIn ? <>\r\n                <NavLink\r\n                  style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}\r\n                  to=\"/\" // TODO: You can't navigate in any route if this route does not exist for this i remove '/logout' to '/'\r\n                  onClick={() => logOut()} >\r\n                  <BsLock />\r\n                  <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                    {language.navigationLogOut[this.context.language]}\r\n                  </span>\r\n                </NavLink>\r\n                <NavLink to=\"/Profile\">\r\n                  <CgProfile style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                  <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                    {language.navigationProfile[this.context.language]}\r\n                  </span>\r\n                </NavLink>\r\n              </>\r\n                : <>\r\n                  <NavLink to=\"/Login\">\r\n                    <BsLock style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                    <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                      {language.navigationLogin[this.context.language]}\r\n                    </span>\r\n                  </NavLink>\r\n                  <NavLink to=\"/Register\">\r\n                    <HiOutlineUserAdd style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                    <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                      {language.navigationRegister[this.context.language]}\r\n                    </span>\r\n                  </NavLink>\r\n                </>\r\n              }\r\n              <div>\r\n                <span onClick={() => changeLanguage('fin')} style={{ padding: '0 10px' }}>\r\n                  <img style={{ width: 30 }} src={Finland} alt=\"Finland Flag\" />\r\n                </span>\r\n                <span onClick={() => changeLanguage('eng')} style={{ padding: '0 10px' }}>\r\n                  <img style={{ width: 30 }} src={UK} alt=\"United Kingdom of Great Britain Flag\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}</ThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from '../../context/userContext';\r\n\r\nclass AdminNavbar extends Component {\r\n    static contextType = UserContext;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.context.loggedIn && this.context.user === \"Admin\" &&\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', backgroundColor: '#404040', color: '#FFFFFF', paddingLeft: 10, paddingRight: 10, fontSize: '14px' }}>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <h5 style={{ margin: 0 }}>{language.adminLogo[this.context.language]}</h5>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/addCandidates\" className=\"whiteFont\"> {language.addCandidates[this.context.language]}</NavLink>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/addOneCandidate\" className=\"whiteFont\">  {language.addCandidate[this.context.language]} </NavLink>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/Candidates\" className=\"whiteFont\"> {language.browseCandidates[this.context.language]} </NavLink>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/addQuestion\" className=\"whiteFont\"> {language.addQuestion[this.context.language]} </NavLink>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/Questions\" className=\"whiteFont\"> {language.browseQuestions[this.context.language]} </NavLink>\r\n                </div>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default AdminNavbar;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport {AdminRoute, CandidateRoute, PublicRoute} from './routeValidation.js';\r\n\r\n//Components\r\nimport Form from '../containers/form';\r\nimport Home from '../containers/home';\r\nimport Registration from '../containers/registration';\r\nimport Login from '../containers/login';\r\nimport Profile from '../containers/profile';\r\nimport Candidates from '../containers/candidates';\r\nimport Questions from '../containers/questions';\r\nimport Suggestions from '../containers/suggestedCandidates';\r\nimport AddCandidates from '../containers/addCandidates';\r\nimport AddOneCandidate from '../containers/addOneCandidate';\r\nimport AddQuestion from '../containers/addQuestion';\r\nimport CandidateAnswers from '../containers/candidateAnswers';\r\nimport Navbar from \"../components/navbar\";\r\nimport AdminNavbar from '../components/adminNavbar';\r\n\r\n\r\nconst Navigation = () => {\r\n    return <>\r\n        <BrowserRouter>\r\n            <div>\r\n                <AdminNavbar />\r\n                <Navbar />\r\n                <Switch>\r\n                    <AdminRoute path=\"/addQuestion\" component={AddQuestion} />\r\n                    <AdminRoute path=\"/addCandidates\" component={AddCandidates} />\r\n                    <AdminRoute path=\"/addOneCandidate\" component={AddOneCandidate} />\r\n                    <AdminRoute path=\"/Candidates\" component={Candidates} />\r\n                    <AdminRoute path=\"/Questions\" component={Questions} />\r\n                    <CandidateRoute path=\"/Profile\" component={Profile} />\r\n                    <Route path=\"/suggestedCandidates\" component={Suggestions} />\r\n                    <Route path=\"/candidateAnswers\" component={CandidateAnswers} />\r\n                    <Route path=\"/Form/:id\" component={Form} />\r\n                    <PublicRoute path=\"/Login\" component={Login} />\r\n                    <PublicRoute path=\"/Register\" component={Registration} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    </>\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './App.css';\r\nimport './AppMini.css';\r\nimport Navigation from './navigation'\r\nimport UserContextProvider from './context/userContext';\r\nimport { ThemeContext } from \"./context/ThemeProvider\";\r\nimport classNames from 'classnames';\r\n\r\nexport default function App() {\r\n\r\n  const isDark = (mode) => {\r\n    return mode === 'dark';\r\n  }\r\n\r\n  return <>\r\n    <UserContextProvider>\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <div className={classNames({\r\n            'App': true,\r\n            'BodyColor': isDark(theme.mode)\r\n          })}>\r\n            <Navigation />\r\n          </div>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    </UserContextProvider>\r\n  </>\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ThemeProvider from \"./context/ThemeProvider\";\r\n\r\nReactDOM.render(\r\n    <ThemeProvider>\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    </ThemeProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}