[{"C:\\Git\\VotingAid-1\\client\\src\\index.js":"1","C:\\Git\\VotingAid-1\\client\\src\\App.js":"2","C:\\Git\\VotingAid-1\\client\\src\\serviceWorker.js":"3","C:\\Git\\VotingAid-1\\client\\src\\context\\ThemeProvider.js":"4","C:\\Git\\VotingAid-1\\client\\src\\context\\userContext.js":"5","C:\\Git\\VotingAid-1\\client\\src\\navigation\\index.js":"6","C:\\Git\\VotingAid-1\\client\\src\\navigation\\routeValidation.js":"7","C:\\Git\\VotingAid-1\\client\\src\\containers\\candidates\\index.js":"8","C:\\Git\\VotingAid-1\\client\\src\\containers\\addCandidates\\index.js":"9","C:\\Git\\VotingAid-1\\client\\src\\components\\navbar\\index.js":"10","C:\\Git\\VotingAid-1\\client\\src\\containers\\addOneCandidate\\index.js":"11","C:\\Git\\VotingAid-1\\client\\src\\components\\adminNavbar\\index.js":"12","C:\\Git\\VotingAid-1\\client\\src\\containers\\home\\index.jsx":"13","C:\\Git\\VotingAid-1\\client\\src\\containers\\registration\\index.jsx":"14","C:\\Git\\VotingAid-1\\client\\src\\containers\\form\\index.jsx":"15","C:\\Git\\VotingAid-1\\client\\src\\containers\\profile\\index.jsx":"16","C:\\Git\\VotingAid-1\\client\\src\\containers\\login\\index.jsx":"17","C:\\Git\\VotingAid-1\\client\\src\\containers\\questions\\index.jsx":"18","C:\\Git\\VotingAid-1\\client\\src\\containers\\suggestedCandidates\\index.jsx":"19","C:\\Git\\VotingAid-1\\client\\src\\containers\\addQuestion\\index.jsx":"20","C:\\Git\\VotingAid-1\\client\\src\\containers\\candidateAnswers\\index.jsx":"21","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\selectMenu.js":"22","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\selectMenuLists.js":"23","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTable.js":"24","C:\\Git\\VotingAid-1\\client\\src\\functions\\dbCalls.js":"25","C:\\Git\\VotingAid-1\\client\\src\\properties\\language.js":"26","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\picture.js":"27","C:\\Git\\VotingAid-1\\client\\src\\helpers\\constants.js":"28","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\studentAssociationOption.js":"29","C:\\Git\\VotingAid-1\\client\\src\\api\\index.js":"30","C:\\Git\\VotingAid-1\\client\\src\\components\\themeToggleButton\\index.js":"31","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTableHeader.js":"32","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTableRow.js":"33","C:\\Git\\VotingAid-1\\client\\src\\components\\upload\\index.js":"34","C:\\Git\\VotingAid-1\\client\\src\\components\\defaultInput\\index.jsx":"35","C:\\Git\\VotingAid-1\\client\\src\\components\\defaultButton\\index.jsx":"36","C:\\Git\\VotingAid-1\\client\\src\\components\\questionItem\\index.jsx":"37","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTableItem.js":"38","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTableLinkItem.js":"39"},{"size":683,"mtime":1633079206238,"results":"40","hashOfConfig":"41"},{"size":714,"mtime":1633079206206,"results":"42","hashOfConfig":"41"},{"size":5226,"mtime":1633079206242,"results":"43","hashOfConfig":"41"},{"size":832,"mtime":1633079206236,"results":"44","hashOfConfig":"41"},{"size":2205,"mtime":1633079206235,"results":"45","hashOfConfig":"41"},{"size":2126,"mtime":1633079206239,"results":"46","hashOfConfig":"41"},{"size":1869,"mtime":1633079206240,"results":"47","hashOfConfig":"41"},{"size":1883,"mtime":1633079206229,"results":"48","hashOfConfig":"41"},{"size":4980,"mtime":1633079206228,"results":"49","hashOfConfig":"41"},{"size":4366,"mtime":1633079206212,"results":"50","hashOfConfig":"41"},{"size":5561,"mtime":1633079206228,"results":"51","hashOfConfig":"41"},{"size":1813,"mtime":1633079206209,"results":"52","hashOfConfig":"41"},{"size":3232,"mtime":1633092440019,"results":"53","hashOfConfig":"41"},{"size":3846,"mtime":1633084869324,"results":"54","hashOfConfig":"41"},{"size":8979,"mtime":1633085847028,"results":"55","hashOfConfig":"41"},{"size":5692,"mtime":1633079206232,"results":"56","hashOfConfig":"41"},{"size":4131,"mtime":1633085078390,"results":"57","hashOfConfig":"41"},{"size":3926,"mtime":1633085301387,"results":"58","hashOfConfig":"41"},{"size":4728,"mtime":1633079206236,"results":"59","hashOfConfig":"41"},{"size":4136,"mtime":1633079206228,"results":"60","hashOfConfig":"41"},{"size":5691,"mtime":1633079206229,"results":"61","hashOfConfig":"41"},{"size":461,"mtime":1633079206217,"results":"62","hashOfConfig":"41"},{"size":411,"mtime":1633079206219,"results":"63","hashOfConfig":"41"},{"size":1675,"mtime":1633079206215,"results":"64","hashOfConfig":"41"},{"size":1192,"mtime":1633079206236,"results":"65","hashOfConfig":"41"},{"size":8204,"mtime":1633085634765,"results":"66","hashOfConfig":"41"},{"size":187,"mtime":1633079206215,"results":"67","hashOfConfig":"41"},{"size":174,"mtime":1633079206238,"results":"68","hashOfConfig":"41"},{"size":154,"mtime":1633079206218,"results":"69","hashOfConfig":"41"},{"size":683,"mtime":1633079206206,"results":"70","hashOfConfig":"41"},{"size":671,"mtime":1633079206219,"results":"71","hashOfConfig":"41"},{"size":119,"mtime":1633079206213,"results":"72","hashOfConfig":"41"},{"size":1257,"mtime":1633079206215,"results":"73","hashOfConfig":"41"},{"size":2323,"mtime":1633079206220,"results":"74","hashOfConfig":"41"},{"size":766,"mtime":1633079206211,"results":"75","hashOfConfig":"41"},{"size":919,"mtime":1633079206209,"results":"76","hashOfConfig":"41"},{"size":3729,"mtime":1633079206218,"results":"77","hashOfConfig":"41"},{"size":130,"mtime":1633079206214,"results":"78","hashOfConfig":"41"},{"size":367,"mtime":1633079206216,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h66gmw",{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Git\\VotingAid-1\\client\\src\\index.js",[],"C:\\Git\\VotingAid-1\\client\\src\\App.js",[],"C:\\Git\\VotingAid-1\\client\\src\\serviceWorker.js",[],"C:\\Git\\VotingAid-1\\client\\src\\context\\ThemeProvider.js",[],"C:\\Git\\VotingAid-1\\client\\src\\context\\userContext.js",[],"C:\\Git\\VotingAid-1\\client\\src\\navigation\\index.js",[],"C:\\Git\\VotingAid-1\\client\\src\\navigation\\routeValidation.js",[],"C:\\Git\\VotingAid-1\\client\\src\\containers\\candidates\\index.js",["168","169","170","171"],"import React, { Component } from 'react';\r\nimport { SetCandidateTable, FilterCandidateTable } from '../../functions/dbCalls';\r\nimport { QuestionAreaList } from '../../components/partials/selectMenuLists'\r\nimport SelectMenu from '../../components/partials/selectMenu.js';\r\nimport CandidateTable from '../../components/partials/candidateTable';\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from '../../context/userContext';\r\n\r\nclass Candidates extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: [],\r\n      Association: [],\r\n      theme: this.props.theme,\r\n      filtered: false,\r\n    }\r\n  }\r\n\r\n  SetStateArray = (stateArray, value) => {\r\n    console.log(value)\r\n    console.log(stateArray)\r\n    this.setState({ [stateArray]: value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    FilterCandidateTable(this.SetStateArray, this.context.school);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: '50%', marginLeft: '25%', marginTop: '5%' }}>\r\n        {/* <label htmlFor=\"school\" className=\"filterCandidateLabel\"\r\n          style={{\r\n            backgroundColor: 'rgba(255, 255, 255, 0.829)', width: '50%', marginTop: '5%',\r\n            marginLeft: '18%'\r\n          }}\r\n        >{language.filterCandidateLabel[this.context.language]}</label>\r\n        <SelectMenu\r\n          className={'studentAssociationList'}\r\n          selectMenuList={QuestionAreaList}\r\n          action={this.handleChange.bind(this)}\r\n        />\r\n        {console.log(this.state.amount)} */}\r\n        <CandidateTable\r\n          stateArray={this.state} counter={-1}\r\n          candidateDeleted={() => {\r\n            console.log('Got event')\r\n            FilterCandidateTable(this.SetStateArray, this.context.school);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Candidates;","C:\\Git\\VotingAid-1\\client\\src\\containers\\addCandidates\\index.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\navbar\\index.js",["172"],"import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BiHome } from \"react-icons/bi\";\r\nimport language from \"../../properties/language\";\r\nimport { BsLock } from \"react-icons/bs\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport ThemeToggleButton from \"../themeToggleButton\";\r\nimport { HiOutlineUserAdd } from \"react-icons/hi\";\r\n\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { ThemeContext } from \"../../context/ThemeProvider\";\r\n\r\nimport classNames from 'classnames';\r\nimport Sweden from '../../assets/icons/sweden.svg'\r\nimport Finland from '../../assets/icons/finland.svg'\r\nimport UK from '../../assets/icons/uk.svg'\r\n\r\nclass Navbar extends Component {\r\n  static contextType = UserContext;\r\n\r\n  componentDidMount() {\r\n    const { checkExistingLogin } = this.context;\r\n    checkExistingLogin();\r\n  }\r\n\r\n  isDark = (mode) => {\r\n    return mode === 'dark';\r\n  }\r\n\r\n  render() {\r\n    const { logOut, changeLanguage, changeUser } = this.context;\r\n    // language,\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <div className={classNames({\r\n            'navLoginWrapper': true,\r\n            'navLoginWrapperLight': !this.isDark(theme.mode),\r\n            'navLoginWrapperDark': this.isDark(theme.mode),\r\n\r\n          })}>\r\n            <div className={classNames({\r\n              'container': true,\r\n              'navLoginContainer': true\r\n            })}>\r\n              <ThemeToggleButton />\r\n              <NavLink to=\"/\">\r\n                <BiHome style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                  {language.navigationHome[this.context.language]}\r\n                </span>\r\n              </NavLink>\r\n              {this.context.loggedIn ? <>\r\n                <NavLink\r\n                  style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}\r\n                  to=\"/\" // TODO: You can't navigate in any route if this route does not exist for this i remove '/logout' to '/'\r\n                  onClick={() => logOut()} >\r\n                  <BsLock />\r\n                  <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                    {language.navigationLogOut[this.context.language]}\r\n                  </span>\r\n                </NavLink>\r\n                <NavLink to=\"/Profile\">\r\n                  <CgProfile style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                  <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                    {language.navigationProfile[this.context.language]}\r\n                  </span>\r\n                </NavLink>\r\n              </>\r\n                : <>\r\n                  <NavLink to=\"/Login\">\r\n                    <BsLock style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                    <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                      {language.navigationLogin[this.context.language]}\r\n                    </span>\r\n                  </NavLink>\r\n                  <NavLink to=\"/Register\">\r\n                    <HiOutlineUserAdd style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                    <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                      {language.navigationRegister[this.context.language]}\r\n                    </span>\r\n                  </NavLink>\r\n                </>\r\n              }\r\n              <div>\r\n                <span onClick={() => changeLanguage('fin')} style={{ padding: '0 10px' }}>\r\n                  <img style={{ width: 30 }} src={Finland} alt=\"Finland Flag\" />\r\n                </span>\r\n                <span onClick={() => changeLanguage('swe')} style={{ padding: '0 10px' }}>\r\n                  <img style={{ width: 30 }} src={Sweden} alt=\"Sweden Flag\" />\r\n                </span>\r\n                <span onClick={() => changeLanguage('eng')} style={{ padding: '0 10px' }}>\r\n                  <img style={{ width: 30 }} src={UK} alt=\"United Kingdom of Great Britain Flag\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}</ThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar","C:\\Git\\VotingAid-1\\client\\src\\containers\\addOneCandidate\\index.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\adminNavbar\\index.js",[],"C:\\Git\\VotingAid-1\\client\\src\\containers\\home\\index.jsx",["173"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\n\r\nclass Home extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studentAssociation: \"\",\r\n      userStudentAssociation: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.context.email) {\r\n      axios\r\n        .post(endpoint.profile, { email: this.context.email })\r\n        .then((res) => {\r\n          this.setState({\r\n            userStudentAssociation: res.data.studentAssociation,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ studentAssociation: e.target.value });\r\n    // console.log(this.state.studentAssociation);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 800,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          {language.title[this.context.language]}\r\n        </h1>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          {language.homePageDescription[this.context.language]}\r\n        </p>\r\n        {/* <label htmlFor=\"campus\">\r\n          {language.selectStudentAssociation[this.context.language]}\r\n        </label> */}\r\n        <select\r\n          onChange={this.handleChange.bind(this)}\r\n          style={{ marginBottom: 5 }}\r\n        >\r\n          {this.context.loggedIn ? (\r\n            <>\r\n              <option value=\"\">\r\n                {language.selectStudentAssociation[this.context.language]}\r\n              </option>\r\n              <option value={this.state.userStudentAssociation}>\r\n                {this.state.userStudentAssociation}\r\n              </option>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <option value=\"\">\r\n                {language.selectStudentAssociation[this.context.language]}\r\n              </option>\r\n              <option value=\"ASK\">ASK</option>\r\n              <option value=\"Helga\">Helga</option>\r\n              <option value=\"HUMAKO\">HUMAKO</option>\r\n              <option value=\"JAMKO\">JAMKO</option>\r\n              <option value=\"Laureamko\">Laureamko</option>\r\n              <option value=\"METKA\">METKA</option>\r\n              <option value=\"O'Diako\">O'Diako</option>\r\n              <option value=\"TUO\">TUO</option>\r\n            </>\r\n          )}\r\n        </select>\r\n\r\n        {this.state.studentAssociation != \"-\" && (\r\n          <Link\r\n            className=\"Form-button\"\r\n            to={{\r\n              pathname: \"/Form/\" + this.state.studentAssociation,\r\n              studentAssociation: this.state.studentAssociation,\r\n              email: this.context.email,\r\n            }}\r\n          >\r\n            {language.formButton[this.context.language]}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Git\\VotingAid-1\\client\\src\\containers\\registration\\index.jsx",["174","175"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nclass Registration extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      registrationErrors: \"\",\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password_confirmation: this.state.password_confirmation,\r\n      status: \"Candidate\",\r\n    };\r\n    if (this.state.password == this.state.password_confirmation) {\r\n      axios.post(endpoint.register, user).then((res) => {\r\n        console.log(user.email);\r\n        console.log(res.data);\r\n        Swal.fire({\r\n          text: res.data.includes(\"address\")\r\n            ? language.registrationError[this.context.language]\r\n            : \"success\",\r\n          icon: res.data.includes(\"address\") ? \"error\" : \"success\",\r\n        });\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"ERROR\",\r\n        text: language.passwordConfirmationError[this.context.language],\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 800,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n\t\t<h1 style={{ textAlign: \"center\" }}>\r\n          {language.registrationTitle[this.context.language]}\r\n        </h1>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          {language.registrationPageDescription[this.context.language]}\r\n        </p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <DefaultInput\r\n            label={language.emailPlaceHolder[this.context.language]}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={language.passwordPlaceHolder[this.context.language]}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={\r\n              language.passwordConfirmationPlaceHolder[this.context.language]\r\n            }\r\n            type=\"password\"\r\n            name=\"password_confirmation\"\r\n            value={this.state.password_confirmation}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultButton\r\n            type=\"submit\"\r\n            text={language.registerButton[this.context.language]}\r\n            borderColor={DARK_GREEN}\r\n            backgroundColor={GREEN}\r\n            textColor={WHITE}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {language.mainPageLink[this.context.language]}{\" \"}\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;\r\n","C:\\Git\\VotingAid-1\\client\\src\\containers\\form\\index.jsx",["176","177","178","179"],"import React, { Component } from \"react\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport Swal from \"sweetalert2\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nexport const FromValueItem = (props) => {\r\n  return (\r\n    <label\r\n      onClick={() => props.handleClick(props.value)}\r\n      className=\"boxContainer\"\r\n    >\r\n      <span className={props.isActive ? \"checkActive\" : \"checkPassive\"}></span>\r\n      <span\r\n        style={{\r\n          fontSize: 14,\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {props.value}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const FormValueContainer = (props) => {\r\n  const staticValue = [-2, -1, 0, 1, 2];\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: 14,\r\n      }}\r\n    >\r\n      {staticValue.map((value, idx) => (\r\n        <FromValueItem\r\n          value={value}\r\n          isActive={props.answer === value}\r\n          question={props.answer}\r\n          idx={idx}\r\n          handleClick={(value) => props.handleClick(value, props.idx)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Form extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      answers: [],\r\n      answersDesc: [],\r\n      filledFormQuestion: [],\r\n      area: \"\",\r\n      path: this.props.location.pathname.split(\"/\")[2],\r\n      loader: true,\r\n      required: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.path);\r\n    let email = this.props.location.email;\r\n    if (this.context.loggedIn) {\r\n      {\r\n        console.log(endpoint.questions);\r\n      }\r\n      axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n        console.log(res);\r\n        this.setState({ questions: res.data });\r\n        axios.post(endpoint.fillForm, { data: email }).then((response) => {\r\n          console.log(response);\r\n          let oldQuestions = res.data;\r\n          let questionDesc = [];\r\n          let questionNumber = [];\r\n          oldQuestions.map((question, idx) => {\r\n            console.log(\"question\");\r\n            console.log(question);\r\n            console.log(\"idx\");\r\n            console.log(idx);\r\n            Object.assign(oldQuestions[idx], {\r\n              questionValue: Object.values(response.data.filledForm).filter(\r\n                (item) => isNaN(item)\r\n              )[idx],\r\n              questionNumber: Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx],\r\n            });\r\n            questionDesc.push(\r\n              Object.values(response.data.filledForm).filter((item) =>\r\n                isNaN(item)\r\n              )[idx]\r\n            );\r\n            questionNumber.push(\r\n              Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx]\r\n            );\r\n          });\r\n          this.setState({ questions: oldQuestions });\r\n          this.setState({\r\n            answersDesc: questionDesc,\r\n            answers: questionNumber,\r\n          });\r\n          this.setState({ loader: false });\r\n        });\r\n      });\r\n    } else {\r\n      {\r\n        console.log(endpoint.questions);\r\n      }\r\n      axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n        this.setState({ loader: false });\r\n        this.setState({ questions: res.data });\r\n      });\r\n    }\r\n  }\r\n\r\n  isQuest(counter) {\r\n    if (this.context.user !== \"Quest\") {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          name={counter}\r\n          placeholder=\"Explain your choice\"\r\n          style={{ marginBottom: \"41px\", width: \"50%\" }}\r\n          onChange={this.handleChange}\r\n          required={this.state.required}\r\n          // disabled={this.state.disabled}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.state.answersDesc[e.currentTarget.name] = e.currentTarget.value;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.context.user !== \"Quest\") {\r\n      axios\r\n        .post(\r\n          endpoint.send,\r\n          {\r\n            ans: this.state.answers,\r\n            desc: this.state.answersDesc,\r\n            email: this.context.email,\r\n            studentAssociation: this.context.path,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.context.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          Swal.fire({\r\n            title: res.data /*language.filledFormAlert[this.context.language]*/, //  TEXT AND ICON DEFINITION FROM SERVER ROW 308\r\n            icon: res.data.includes(\"Error\") ? \"error\" : \"success\",\r\n            confirmButtonText: language.continueHolder[this.context.language],\r\n          });\r\n        });\r\n    } else {\r\n      this.props.history.push({\r\n        pathname: \"/suggestedCandidates\",\r\n        data: {\r\n          answers: this.state.answers,\r\n          studentAssociation: this.state.path,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClick = (value, idx) => {\r\n    const oldAnswers = [...this.state.answers];\r\n    oldAnswers[idx] = parseInt(value);\r\n    this.setState({\r\n      answers: [...oldAnswers],\r\n    });\r\n    // let sum = this.state.answers.reduce((result, number) => result + number);\r\n    // console.log(sum);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        {this.state.loader ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <p style={{ textAlign: \"center\" }}>Waiting for data...</p>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.state.questions &&\r\n              React.Children.toArray(\r\n                this.state.questions.map((question, idx) => (\r\n                  <>\r\n                    <div className=\"questionSet\">\r\n                      <label style={{ fontSize: 16 }}>\r\n                        <strong>\r\n                          {language.questionHolder[this.context.language]}\r\n                        </strong>\r\n                        {\r\n                          {\r\n                            fin: question.questionFin,\r\n                            eng: question.question,\r\n                            swe: question.questionSwe,\r\n                          }[this.context.language]\r\n                        }\r\n                      </label>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          {language.disagreeButton[this.context.language]}\r\n                        </span>\r\n                        <span className=\"agg\">\r\n                          {language.agreeButton[this.context.language]}\r\n                        </span>\r\n                      </div>\r\n\r\n                      {this.state.answers && (\r\n                        <FormValueContainer\r\n                          answer={this.state.answers[idx]}\r\n                          idx={idx}\r\n                          handleClick={(value, idx) =>\r\n                            this.handleClick(value, idx)\r\n                          }\r\n                        />\r\n                      )}\r\n\r\n                      {this.context.user !== \"Quest\" && this.state.answersDesc && (\r\n                        <DefaultInput\r\n                          label=\"Explain your choice\"\r\n                          type=\"text\"\r\n                          name={idx}\r\n                          value={this.state.answersDesc[idx]}\r\n                          onChange={this.handleChange}\r\n                          // disabled={this.state.disabled}\r\n                          required={this.state.required}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                ))\r\n              )}\r\n\r\n            <DefaultButton\r\n              type=\"submit\"\r\n              borderColor={DARK_GREEN}\r\n              backgroundColor={GREEN}\r\n              textColor={WHITE}\r\n              text={language.fillFormButton[this.context.language]}\r\n            />\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","C:\\Git\\VotingAid-1\\client\\src\\containers\\profile\\index.jsx",[],"C:\\Git\\VotingAid-1\\client\\src\\containers\\login\\index.jsx",["180"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    axios.post(endpoint.login, user).then((res) => {\r\n      console.log(res);\r\n      if (res) {\r\n        const { changeUser } = this.context;\r\n        changeUser(\r\n          res.data.tokenUser.status,\r\n          res.data.tokenUser.email,\r\n          res.data.tokenUser.school,\r\n          true,\r\n          res.data.token\r\n        );\r\n        if (!this.context.user || !this.context.email) {\r\n          changeUser(\"Quest\", \"\", \"\", false, this.context.language);\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"ERROR\",\r\n            text: language.wrongPasswordHolder[this.context.language],\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: language.loginHolder[this.context.language],\r\n            icon: \"success\",\r\n            confirmButtonText: \"Confirm\",\r\n          });\r\n          /*sessionStorage.setItem(\"email\", this.context.email);\r\n          sessionStorage.setItem(\"status\", this.context.user);*/\r\n          sessionStorage.setItem(\"language\", this.context.language);\r\n          sessionStorage.setItem(\"token\", this.context.token);\r\n          this.props.history.push({\r\n            pathname: \"/\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  static contextType = UserContext;\r\n\r\n  render() {\r\n    const { changeUser } = this.context;\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 800,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n\t\t<h1 style={{ textAlign: \"center\" }}>\r\n          {language.loginTitle[this.context.language]}\r\n        </h1>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          {language.loginPageDescription[this.context.language]}\r\n        </p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <DefaultInput\r\n            label={language.emailPlaceHolder[this.context.language]}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={language.passwordPlaceHolder[this.context.language]}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultButton\r\n            type=\"submit\"\r\n            text={language.loginButton[this.context.language]}\r\n            borderColor={DARK_GREEN}\r\n            backgroundColor={GREEN}\r\n            textColor={WHITE}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {language.mainPageLink[this.context.language]}{\" \"}\r\n          </Link>{\" \"}\r\n          <br></br>\r\n          <br></br>\r\n          {/* <p className=\"forgot-password text-right\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/newPassword\"\r\n              }}> Unohditko salasanan? </Link></p> */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Git\\VotingAid-1\\client\\src\\containers\\questions\\index.jsx",["181"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\nimport QuestionsItem from \"../../components/questionItem\";\r\nimport { endpoint } from \"../../api\";\r\n\r\nclass Questions extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      filteredQuestions: [],\r\n      schools: [],\r\n      filtersData: [],\r\n      selectBox: \"allQuestion\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.allQuestions();\r\n    console.log(this.context.school);\r\n    this.FilterQuestions(this.context.school);\r\n  }\r\n\r\n  changeInputValue = (e, idx) => {\r\n    let newQuestions = [...this.state.questions];\r\n    let question = newQuestions.findIndex((q) => q._id === idx);\r\n    //newQuestions[question].question = e.target.value;\r\n    newQuestions[question].question = e.target.value;\r\n    this.setState({ questions: [...newQuestions] });\r\n  };\r\n\r\n  allQuestions = () => {\r\n    console.log(\"inside\");\r\n    this.setState({ questions: [] });\r\n    axios.get(endpoint.allQuestions).then((res) => {\r\n      console.log(res.data);\r\n      this.setState({ questions: res.data });\r\n      let newFilters = [];\r\n      res.data.map((filter) => newFilters.push(filter.area));\r\n      let unique = [...new Set(newFilters)];\r\n      this.setState({ filtersData: [...unique] });\r\n    });\r\n  };\r\n\r\n  FilterQuestions = (filter) => {\r\n    console.log(filter);\r\n    this.setState({ questions: [] });\r\n    axios.post(endpoint.filteredQuestions, { data: filter }).then((res) => {\r\n      this.setState({ filteredQuestions: res.data });\r\n    });\r\n  };\r\n\r\n  // handleChange = (e) => {\r\n  //   if (e.target.value !== \"Select filter\") {\r\n  //     console.log(\"not select filter\");\r\n  //     this.FilterQuestions(e.target.value);\r\n  //     this.setState({ selectBox: e.target.value });\r\n  //   } else {\r\n  //     console.log(\"select filter\");\r\n  //     this.allQuestions();\r\n  //     this.setState({ selectBox: \"allQuestion\" });\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginTop: 20,\r\n            backgroundColor: \"rgba(255, 255, 255, 0.829)\",\r\n          }}\r\n        >\r\n          {/* <span className=\"filterCandidateLabel\">\r\n            {language.filterCandidateLabel[this.context.language]}\r\n          </span> */}\r\n          {/* <select className=\"questionsSelectBox\" onChange={this.handleChange}>\r\n            <option value=\"Select filter\">Select filter</option>\r\n            {this.state.filtersData &&\r\n              React.Children.toArray(\r\n                this.state.filtersData.map((filter) => (\r\n                  <option value={filter}>{filter}</option>\r\n                ))\r\n              )}\r\n          </select> */}\r\n        </div>\r\n\r\n        <form>\r\n          <div className=\"formQuestions\">\r\n            {this.state.questions &&\r\n              React.Children.toArray(\r\n                this.state.filteredQuestions.map((question) => (\r\n                  <QuestionsItem\r\n                    question={question}\r\n                    refreshQuestions={() => {\r\n                      //   this.state.selectBox === \"allQuestion\"\r\n                      //     ? this.allQuestions()\r\n                      //     : this.FilterQuestions(this.state.selectBox);\r\n                      this.FilterQuestions(this.context.school);\r\n                    }}\r\n                  />\r\n                ))\r\n              )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","C:\\Git\\VotingAid-1\\client\\src\\containers\\suggestedCandidates\\index.jsx",["182","183"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Picture from \"../../components/partials/picture\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { endpoint } from \"../../api\";\r\nimport CandidateAnswers from \"../candidateAnswers\";\r\n\r\nclass Suggestions extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      suggestions: [],\r\n      showCandidateAnswers: -1,\r\n    };\r\n  }\r\n\r\n  hideComponent = (name, e) => {\r\n    console.log(e.target.id);\r\n    console.log(this.state.showCandidateAnswers);\r\n    switch (name) {\r\n      case \"showCandidateAnswers\":\r\n        if(this.state.showCandidateAnswers !== -1) {\r\n          this.setState({showCandidateAnswers: -1});\r\n        }\r\n        else{\r\n          this.setState({showCandidateAnswers: e.target.id});\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    var data = {\r\n      answers: this.props.location.data.answers,\r\n      studentAssociation: this.props.location.data.studentAssociation,\r\n    };\r\n    axios.post(endpoint.suggested, { data: data }).then((res) => {\r\n      this.setState({ suggestions: res.data });\r\n      console.log(\"suggested answers\");\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { showCandidateAnswers } = this.state;\r\n    const myData = [].concat(this.state.suggestions);\r\n    if (this.state.suggestions.length > 0) {\r\n      return (\r\n        <div\r\n          className=\"candidateSuggestions\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              display: \"inline-block\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {language.matchingCandidates[this.context.language]}\r\n          </h1>\r\n          {myData\r\n            .sort((a, b) => (a.similarity < b.similarity ? 1 : -1))\r\n            .map((candidate, index) => {\r\n              return (\r\n                /*console.log(this.state.suggestions),*/\r\n                <div>\r\n                  <div className=\"candidateSuggestionCenter\">\r\n                    <h2\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {\r\n                        <Picture\r\n                          className=\"pic\"\r\n                          source={process.env.PUBLIC_URL + candidate.image}\r\n                        ></Picture>\r\n                      }{\" \"}\r\n                      {candidate.name} {candidate.surname}{\" \"}\r\n                      {candidate.similarity.toFixed() + \"%\"}\r\n                    </h2>{\" \"}\r\n                  </div>\r\n                  {showCandidateAnswers == index && (\r\n                    <CandidateAnswers candidateInfo={candidate} />\r\n                  )}\r\n                  <button\r\n                    style={{\r\n                      margin: \"0 auto\",\r\n                      display: \"block\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      /*paddingLeft: '10px',\r\n  paddingRight: '10px',*/\r\n                      backgroundColor: \"transparent\",\r\n                      width: \"auto\",\r\n                      borderTop: \"none\",\r\n                      borderLeft: \"none\",\r\n                      borderRight: \"none\",\r\n                      fontSize: \"20px\",\r\n                    }}\r\n                    id={index}\r\n                    onClick={(e) =>\r\n                      this.hideComponent(\"showCandidateAnswers\", e)\r\n                    }\r\n                  >\r\n                    {showCandidateAnswers === -1 ? \"Show more\" : \"Show less\"}\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <h2\r\n          className=\"candidateSuggestions\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Unfortunately no one related with your answers{\" \"}\r\n        </h2>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Suggestions;\r\n","C:\\Git\\VotingAid-1\\client\\src\\containers\\addQuestion\\index.jsx",[],"C:\\Git\\VotingAid-1\\client\\src\\containers\\candidateAnswers\\index.jsx",["184"],"import React, { Component } from \"react\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\n\r\nexport const FromValueItem = (props) => {\r\n  /* console.log('formvalueitem')\r\nconsole.log(props)*/\r\n  return (\r\n    <label className=\"boxContainer\">\r\n      <span className={props.isActive ? \"checkActive\" : \"checkPassive\"}></span>\r\n      <span\r\n        style={{\r\n          fontSize: 14,\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {props.value}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const FormValueContainer = (props) => {\r\n  /*console.log('formvaluecontainer')\r\nconsole.log(props)*/\r\n  const staticValue = [-2, -1, 0, 1, 2];\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: 14,\r\n      }}\r\n    >\r\n      {staticValue.map((value, idx) => (\r\n        <FromValueItem\r\n          value={value}\r\n          isActive={props.answer === value}\r\n          question={props.answer}\r\n          idx={idx}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport class CandidateAnswers extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      answers: [],\r\n      answersDesc: [],\r\n      filledFormQuestion: [],\r\n      area: \"\",\r\n      path: this.props.candidateInfo.studentAssociation,\r\n      loader: true,\r\n      disabled: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var email = this.props.candidateInfo.email;\r\n      console.log(this.state.path)\r\n    axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n      this.setState({ questions: res.data });\r\n      axios.post(endpoint.fillForm, { data: email }).then((response) => {\r\n        console.log(response);\r\n        let oldQuestions = res.data;\r\n        let questionDesc = [];\r\n        let questionNumber = [];\r\n        oldQuestions.map((question, idx) => {\r\n          Object.assign(oldQuestions[idx], {\r\n            questionValue: Object.values(response.data.filledForm).filter(\r\n              (item) => isNaN(item)\r\n            )[idx],\r\n            questionNumber: Object.values(response.data.filledForm).filter(\r\n              (item) => !isNaN(item)\r\n            )[idx],\r\n          });\r\n          questionDesc.push(\r\n            Object.values(response.data.filledForm).filter((item) =>\r\n              isNaN(item)\r\n            )[idx]\r\n          );\r\n          questionNumber.push(\r\n            Object.values(response.data.filledForm).filter(\r\n              (item) => !isNaN(item)\r\n            )[idx]\r\n          );\r\n        });\r\n        this.setState({ questions: oldQuestions });\r\n        this.setState({\r\n          answersDesc: questionDesc,\r\n          answers: questionNumber,\r\n        });\r\n        this.setState({ loader: false });\r\n      });\r\n    });\r\n  }\r\n\r\n  isQuest(counter) {\r\n    if (this.context.user !== \"Quest\") {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          name={counter}\r\n          placeholder=\"Explain your choice\"\r\n          style={{ marginBottom: \"41px\", width: \"50%\" }}\r\n          disabled={this.state.disabled}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        {this.state.loader ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <p style={{ textAlign: \"center\" }}>Waiting for data...</p>\r\n          </div>\r\n        ) : (\r\n          this.state.questions &&\r\n          React.Children.toArray(\r\n            this.state.questions.map((question, idx) => (\r\n              <>\r\n                <div className=\"questionSet\">\r\n                  <label style={{ fontSize: 16 }}>\r\n                    <strong>\r\n                      {language.questionHolder[this.context.language]}\r\n                    </strong>\r\n                    {this.context.language === \"fin\"\r\n                      ? question.questionFin\r\n                      : question.question}\r\n                  </label>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      fontSize: 14,\r\n                    }}\r\n                  >\r\n                    <span>\r\n                      {language.disagreeButton[this.context.language]}\r\n                    </span>\r\n                    <span className=\"agg\">\r\n                      {language.agreeButton[this.context.language]}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {this.state.answers && (\r\n                    <FormValueContainer\r\n                      answer={this.state.answers[idx]}\r\n                      idx={idx}\r\n                    />\r\n                  )}\r\n\r\n                  {this.state.answersDesc && (\r\n                    <DefaultInput\r\n                      label=\"Explain your choice\"\r\n                      type=\"text\"\r\n                      name={idx}\r\n                      value={this.state.answersDesc[idx]}\r\n                      disabled={this.state.disabled}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </>\r\n            ))\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CandidateAnswers;\r\n","C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\selectMenu.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\selectMenuLists.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTable.js",[],"C:\\Git\\VotingAid-1\\client\\src\\functions\\dbCalls.js",[],"C:\\Git\\VotingAid-1\\client\\src\\properties\\language.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\picture.js",[],"C:\\Git\\VotingAid-1\\client\\src\\helpers\\constants.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\studentAssociationOption.js",[],"C:\\Git\\VotingAid-1\\client\\src\\api\\index.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\themeToggleButton\\index.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTableHeader.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTableRow.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\upload\\index.js",["185","186","187","188","189","190"],"import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst Upload = ({ email, onUpload, profile }) => {\r\n    const [fileInputState, setFileInputState] = useState('')\r\n    const [selectedFile, setSelectedFile] = useState('')\r\n    const [previewSource, setPreviewSource] = useState('')\r\n    // const [name, setName] = useState('')\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        const fileName = e.target.files[0];\r\n        previewFile(file)\r\n        setSelectedFile(file.name)\r\n        // setName(file.name)\r\n    }\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        // shows the picture you are uploading, not necessary\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            // setPreviewSource(reader.result)\r\n            uploadImage(reader.result, file.name);\r\n            // console.log(file)\r\n            // console.log(previewSource)\r\n            // console.log(selectedFile)\r\n        }\r\n    }\r\n    // const handleSubmitFile = () => {\r\n    //     // e.preventDefault();\r\n    //     if (!previewSource) return;\r\n    //     uploadImage(previewSource, selectedFile);\r\n    // }\r\n    let dataResp;\r\n    const uploadImage = async (base64EncodedImage, fileName) => {\r\n        console.log(email)\r\n        try {\r\n            await axios.post('/api/uploadImage', { data: base64EncodedImage, email, fileName }\r\n                // body: JSON.stringify({ data: base64EncodedImage, email, fileName }),\r\n                // headers: { 'Content-type': 'application/json' },\r\n            ).then(resp => {\r\n                dataResp = resp.data;\r\n                console.log(resp)\r\n            })\r\n            onUpload(dataResp)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input type=\"file\" name=\"image\" onChange={handleFileInputChange} value={fileInputState} className=\"form-input\" />\r\n                {/* <button className=\"form-input\" type=\"submit\">Submit</button> */}\r\n            </form>\r\n            {/* {previewSource && (\r\n                <img src={previewSource} alt=\"chosen\" style={{ height: '300px' }} />\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload\r\n","C:\\Git\\VotingAid-1\\client\\src\\components\\defaultInput\\index.jsx",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\defaultButton\\index.jsx",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\questionItem\\index.jsx",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTableItem.js",[],"C:\\Git\\VotingAid-1\\client\\src\\components\\partials\\candidateTableLinkItem.js",[],{"ruleId":"191","severity":1,"message":"192","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":27},{"ruleId":"191","severity":1,"message":"195","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":26},{"ruleId":"191","severity":1,"message":"196","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":18},{"ruleId":"191","severity":1,"message":"197","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":16},{"ruleId":"191","severity":1,"message":"198","line":31,"column":37,"nodeType":"193","messageId":"194","endLine":31,"endColumn":47},{"ruleId":"199","severity":1,"message":"200","line":90,"column":40,"nodeType":"201","messageId":"202","endLine":90,"endColumn":42},{"ruleId":"191","severity":1,"message":"203","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"204","line":43,"column":29,"nodeType":"201","messageId":"202","endLine":43,"endColumn":31},{"ruleId":"205","severity":1,"message":"206","line":75,"column":7,"nodeType":"207","messageId":"208","endLine":77,"endColumn":8},{"ruleId":"209","severity":1,"message":"210","line":86,"column":44,"nodeType":"211","messageId":"212","endLine":86,"endColumn":46},{"ruleId":"205","severity":1,"message":"206","line":119,"column":7,"nodeType":"207","messageId":"208","endLine":121,"endColumn":8},{"ruleId":"213","severity":1,"message":"214","line":146,"column":5,"nodeType":"215","messageId":"216","endLine":146,"endColumn":27},{"ruleId":"191","severity":1,"message":"198","line":75,"column":13,"nodeType":"193","messageId":"194","endLine":75,"endColumn":23},{"ruleId":"191","severity":1,"message":"197","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":22,"column":5,"nodeType":"219","messageId":"220","endLine":31,"endColumn":6},{"ruleId":"199","severity":1,"message":"204","line":97,"column":41,"nodeType":"201","messageId":"202","endLine":97,"endColumn":43},{"ruleId":"209","severity":1,"message":"210","line":78,"column":42,"nodeType":"211","messageId":"212","endLine":78,"endColumn":44},{"ruleId":"191","severity":1,"message":"221","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"222","line":5,"column":28,"nodeType":"193","messageId":"194","endLine":5,"endColumn":45},{"ruleId":"191","severity":1,"message":"223","line":6,"column":12,"nodeType":"193","messageId":"194","endLine":6,"endColumn":24},{"ruleId":"191","severity":1,"message":"224","line":7,"column":12,"nodeType":"193","messageId":"194","endLine":7,"endColumn":25},{"ruleId":"191","severity":1,"message":"225","line":7,"column":27,"nodeType":"193","messageId":"194","endLine":7,"endColumn":43},{"ruleId":"191","severity":1,"message":"226","line":12,"column":15,"nodeType":"193","messageId":"194","endLine":12,"endColumn":23},"no-unused-vars","'SetCandidateTable' is defined but never used.","Identifier","unusedVar","'QuestionAreaList' is defined but never used.","'SelectMenu' is defined but never used.","'language' is defined but never used.","'changeUser' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Component' is defined but never used.","Expected '===' and instead saw '=='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useEffect' is defined but never used.","'setFileInputState' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'previewSource' is assigned a value but never used.","'setPreviewSource' is assigned a value but never used.","'fileName' is assigned a value but never used."]