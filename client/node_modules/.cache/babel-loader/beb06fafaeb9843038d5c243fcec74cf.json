{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\VotingAid-1\\\\client\\\\src\\\\containers\\\\form\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport language from \"../../properties/language\";\nimport axios from \"axios\";\nimport { endpoint } from \"../../api\";\nimport { UserContext } from \"../../context/userContext\";\nimport Swal from \"sweetalert2\";\nimport DefaultInput from \"../../components/defaultInput\";\nimport DefaultButton from \"../../components/defaultButton\";\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FromValueItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    onClick: () => props.handleClick(props.value),\n    className: \"boxContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: props.isActive ? \"checkActive\" : \"checkPassive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: 14,\n        textAlign: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = FromValueItem;\nexport const FormValueContainer = props => {\n  const staticValue = [-2, -1, 0, 1, 2];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      fontSize: 14\n    },\n    children: staticValue.map((value, idx) => /*#__PURE__*/_jsxDEV(FromValueItem, {\n      value: value,\n      isActive: props.answer === value,\n      question: props.answer,\n      idx: idx,\n      handleClick: value => props.handleClick(value, props.idx)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FormValueContainer;\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.state.answersDesc[e.currentTarget.name] = e.currentTarget.value;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.context.user !== \"Quest\") {\n        axios.post(endpoint.send, {\n          ans: this.state.answers,\n          desc: this.state.answersDesc,\n          email: this.context.email,\n          studentAssociation: this.context.path\n        }, {\n          headers: {\n            Authorization: `Bearer ${this.context.token}`\n          }\n        }).then(res => {\n          console.log(res);\n          Swal.fire({\n            title: res.data\n            /*language.filledFormAlert[this.context.language]*/\n            ,\n            //  TEXT AND ICON DEFINITION FROM SERVER ROW 308\n            icon: res.data.includes(\"Error\") ? \"error\" : \"success\",\n            confirmButtonText: language.continueHolder[this.context.language]\n          });\n        });\n      } else {\n        this.props.history.push({\n          pathname: \"/suggestedCandidates\",\n          data: {\n            answers: this.state.answers,\n            studentAssociation: this.state.path\n          }\n        });\n      }\n    };\n\n    this.handleClick = (value, idx) => {\n      const oldAnswers = [...this.state.answers];\n      oldAnswers[idx] = parseInt(value);\n      this.setState({\n        answers: [...oldAnswers]\n      }); // let sum = this.state.answers.reduce((result, number) => result + number);\n      // console.log(sum);\n    };\n\n    this.state = {\n      questions: [],\n      answers: [],\n      answersDesc: [],\n      filledFormQuestion: [],\n      area: \"\",\n      path: this.props.location.pathname.split(\"/\")[2],\n      loader: true,\n      required: true\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.path);\n    let email = this.props.location.email;\n\n    if (this.context.loggedIn) {\n      {\n        console.log(endpoint.questions);\n      }\n      axios.post(endpoint.questions, {\n        data: this.state.path\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          questions: res.data\n        });\n        axios.post(endpoint.fillForm, {\n          data: email\n        }).then(response => {\n          console.log(response);\n          let oldQuestions = res.data;\n          let questionDesc = [];\n          let questionNumber = [];\n          oldQuestions.map((question, idx) => {\n            console.log(\"question\");\n            console.log(question);\n            console.log(\"idx\");\n            console.log(idx);\n            Object.assign(oldQuestions[idx], {\n              questionValue: Object.values(response.data.filledForm).filter(item => isNaN(item))[idx],\n              questionNumber: Object.values(response.data.filledForm).filter(item => !isNaN(item))[idx]\n            });\n            questionDesc.push(Object.values(response.data.filledForm).filter(item => isNaN(item))[idx]);\n            questionNumber.push(Object.values(response.data.filledForm).filter(item => !isNaN(item))[idx]);\n          });\n          this.setState({\n            questions: oldQuestions\n          });\n          this.setState({\n            answersDesc: questionDesc,\n            answers: questionNumber\n          });\n          this.setState({\n            loader: false\n          });\n        });\n      });\n    } else {\n      {\n        console.log(endpoint.questions);\n      }\n      axios.post(endpoint.questions, {\n        data: this.state.path\n      }).then(res => {\n        this.setState({\n          loader: false\n        });\n        this.setState({\n          questions: res.data\n        });\n      });\n    }\n  }\n\n  isQuest(counter) {\n    if (this.context.user !== \"Quest\") {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: counter,\n        placeholder: \"Explain your choice\",\n        style: {\n          marginBottom: \"41px\",\n          width: \"50%\"\n        },\n        onChange: this.handleChange,\n        required: this.state.required // disabled={this.state.disabled}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeScreen\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        maxWidth: 500,\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      children: this.state.loader ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Waiting for data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.state.questions && React.Children.toArray(this.state.questions.map((question, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questionSet\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontSize: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: language.questionHolder[this.context.language]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 25\n              }, this), {\n                fin: question.questionFin,\n                eng: question.question,\n                swe: question.questionSwe\n              }[this.context.language]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                fontSize: 14\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: language.disagreeButton[this.context.language]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"agg\",\n                children: language.agreeButton[this.context.language]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 23\n            }, this), this.state.answers && /*#__PURE__*/_jsxDEV(FormValueContainer, {\n              answer: this.state.answers[idx],\n              idx: idx,\n              handleClick: (value, idx) => this.handleClick(value, idx)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 25\n            }, this), this.context.user !== \"Quest\" && this.state.answersDesc && /*#__PURE__*/_jsxDEV(DefaultInput, {\n              label: \"Explain your choice\",\n              type: \"text\",\n              name: idx,\n              value: this.state.answersDesc[idx],\n              onChange: this.handleChange // disabled={this.state.disabled}\n              ,\n              required: this.state.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }, this)\n        }, void 0, false))), /*#__PURE__*/_jsxDEV(DefaultButton, {\n          type: \"submit\",\n          borderColor: DARK_GREEN,\n          backgroundColor: GREEN,\n          textColor: WHITE,\n          text: language.fillFormButton[this.context.language]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nForm.contextType = UserContext;\nexport default Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FromValueItem\");\n$RefreshReg$(_c2, \"FormValueContainer\");","map":{"version":3,"sources":["C:/Git/VotingAid-1/client/src/containers/form/index.jsx"],"names":["React","Component","language","axios","endpoint","UserContext","Swal","DefaultInput","DefaultButton","DARK_GREEN","GREEN","WHITE","FromValueItem","props","handleClick","value","isActive","fontSize","textAlign","display","justifyContent","FormValueContainer","staticValue","map","idx","answer","Form","constructor","handleChange","e","state","answersDesc","currentTarget","name","handleSubmit","preventDefault","context","user","post","send","ans","answers","desc","email","studentAssociation","path","headers","Authorization","token","then","res","console","log","fire","title","data","icon","includes","confirmButtonText","continueHolder","history","push","pathname","oldAnswers","parseInt","setState","questions","filledFormQuestion","area","location","split","loader","required","componentDidMount","loggedIn","fillForm","response","oldQuestions","questionDesc","questionNumber","question","Object","assign","questionValue","values","filledForm","filter","item","isNaN","isQuest","counter","marginBottom","width","render","flexDirection","maxWidth","marginLeft","marginRight","Children","toArray","questionHolder","fin","questionFin","eng","swe","questionSwe","disagreeButton","agreeButton","fillFormButton","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport Swal from \"sweetalert2\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nexport const FromValueItem = (props) => {\r\n  return (\r\n    <label\r\n      onClick={() => props.handleClick(props.value)}\r\n      className=\"boxContainer\"\r\n    >\r\n      <span className={props.isActive ? \"checkActive\" : \"checkPassive\"}></span>\r\n      <span\r\n        style={{\r\n          fontSize: 14,\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {props.value}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const FormValueContainer = (props) => {\r\n  const staticValue = [-2, -1, 0, 1, 2];\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: 14,\r\n      }}\r\n    >\r\n      {staticValue.map((value, idx) => (\r\n        <FromValueItem\r\n          value={value}\r\n          isActive={props.answer === value}\r\n          question={props.answer}\r\n          idx={idx}\r\n          handleClick={(value) => props.handleClick(value, props.idx)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Form extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      answers: [],\r\n      answersDesc: [],\r\n      filledFormQuestion: [],\r\n      area: \"\",\r\n      path: this.props.location.pathname.split(\"/\")[2],\r\n      loader: true,\r\n      required: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.path);\r\n    let email = this.props.location.email;\r\n    if (this.context.loggedIn) {\r\n      {\r\n        console.log(endpoint.questions);\r\n      }\r\n      axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n        console.log(res);\r\n        this.setState({ questions: res.data });\r\n        axios.post(endpoint.fillForm, { data: email }).then((response) => {\r\n          console.log(response);\r\n          let oldQuestions = res.data;\r\n          let questionDesc = [];\r\n          let questionNumber = [];\r\n          oldQuestions.map((question, idx) => {\r\n            console.log(\"question\");\r\n            console.log(question);\r\n            console.log(\"idx\");\r\n            console.log(idx);\r\n            Object.assign(oldQuestions[idx], {\r\n              questionValue: Object.values(response.data.filledForm).filter(\r\n                (item) => isNaN(item)\r\n              )[idx],\r\n              questionNumber: Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx],\r\n            });\r\n            questionDesc.push(\r\n              Object.values(response.data.filledForm).filter((item) =>\r\n                isNaN(item)\r\n              )[idx]\r\n            );\r\n            questionNumber.push(\r\n              Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx]\r\n            );\r\n          });\r\n          this.setState({ questions: oldQuestions });\r\n          this.setState({\r\n            answersDesc: questionDesc,\r\n            answers: questionNumber,\r\n          });\r\n          this.setState({ loader: false });\r\n        });\r\n      });\r\n    } else {\r\n      {\r\n        console.log(endpoint.questions);\r\n      }\r\n      axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n        this.setState({ loader: false });\r\n        this.setState({ questions: res.data });\r\n      });\r\n    }\r\n  }\r\n\r\n  isQuest(counter) {\r\n    if (this.context.user !== \"Quest\") {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          name={counter}\r\n          placeholder=\"Explain your choice\"\r\n          style={{ marginBottom: \"41px\", width: \"50%\" }}\r\n          onChange={this.handleChange}\r\n          required={this.state.required}\r\n          // disabled={this.state.disabled}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.state.answersDesc[e.currentTarget.name] = e.currentTarget.value;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.context.user !== \"Quest\") {\r\n      axios\r\n        .post(\r\n          endpoint.send,\r\n          {\r\n            ans: this.state.answers,\r\n            desc: this.state.answersDesc,\r\n            email: this.context.email,\r\n            studentAssociation: this.context.path,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.context.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          Swal.fire({\r\n            title: res.data /*language.filledFormAlert[this.context.language]*/, //  TEXT AND ICON DEFINITION FROM SERVER ROW 308\r\n            icon: res.data.includes(\"Error\") ? \"error\" : \"success\",\r\n            confirmButtonText: language.continueHolder[this.context.language],\r\n          });\r\n        });\r\n    } else {\r\n      this.props.history.push({\r\n        pathname: \"/suggestedCandidates\",\r\n        data: {\r\n          answers: this.state.answers,\r\n          studentAssociation: this.state.path,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClick = (value, idx) => {\r\n    const oldAnswers = [...this.state.answers];\r\n    oldAnswers[idx] = parseInt(value);\r\n    this.setState({\r\n      answers: [...oldAnswers],\r\n    });\r\n    // let sum = this.state.answers.reduce((result, number) => result + number);\r\n    // console.log(sum);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        {this.state.loader ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <p style={{ textAlign: \"center\" }}>Waiting for data...</p>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.state.questions &&\r\n              React.Children.toArray(\r\n                this.state.questions.map((question, idx) => (\r\n                  <>\r\n                    <div className=\"questionSet\">\r\n                      <label style={{ fontSize: 16 }}>\r\n                        <strong>\r\n                          {language.questionHolder[this.context.language]}\r\n                        </strong>\r\n                        {\r\n                          {\r\n                            fin: question.questionFin,\r\n                            eng: question.question,\r\n                            swe: question.questionSwe,\r\n                          }[this.context.language]\r\n                        }\r\n                      </label>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          {language.disagreeButton[this.context.language]}\r\n                        </span>\r\n                        <span className=\"agg\">\r\n                          {language.agreeButton[this.context.language]}\r\n                        </span>\r\n                      </div>\r\n\r\n                      {this.state.answers && (\r\n                        <FormValueContainer\r\n                          answer={this.state.answers[idx]}\r\n                          idx={idx}\r\n                          handleClick={(value, idx) =>\r\n                            this.handleClick(value, idx)\r\n                          }\r\n                        />\r\n                      )}\r\n\r\n                      {this.context.user !== \"Quest\" && this.state.answersDesc && (\r\n                        <DefaultInput\r\n                          label=\"Explain your choice\"\r\n                          type=\"text\"\r\n                          name={idx}\r\n                          value={this.state.answersDesc[idx]}\r\n                          onChange={this.handleChange}\r\n                          // disabled={this.state.disabled}\r\n                          required={this.state.required}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                ))\r\n              )}\r\n\r\n            <DefaultButton\r\n              type=\"submit\"\r\n              borderColor={DARK_GREEN}\r\n              backgroundColor={GREEN}\r\n              textColor={WHITE}\r\n              text={language.fillFormButton[this.context.language]}\r\n            />\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}