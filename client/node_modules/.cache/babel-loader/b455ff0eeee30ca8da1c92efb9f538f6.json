{"ast":null,"code":"import _slicedToArray from\"C:/Git/VotingAid-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,createContext,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ThemeContext=/*#__PURE__*/createContext();var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],_setTheme=_useState2[1];useEffect(function(){if(sessionStorage.getItem('theme')){_setTheme(sessionStorage.getItem('theme'));}},[]);return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{mode:mode,setTheme:function setTheme(){console.log(mode);_setTheme(mode===\"dark\"?\"light\":\"dark\");sessionStorage.setItem('theme',mode===\"dark\"?\"light\":\"dark\");}},children:children});};export default ThemeProvider;","map":{"version":3,"sources":["C:/Git/VotingAid-1/client/src/context/ThemeProvider.js"],"names":["React","useState","createContext","useEffect","ThemeContext","ThemeProvider","children","mode","setTheme","sessionStorage","getItem","console","log","setItem"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,aAA1B,CAAyCC,SAAzC,KAA0D,OAA1D,C,2CAEA,MAAO,IAAMC,CAAAA,YAAY,cAAGF,aAAa,EAAlC,CAEP,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACpC,cAAyBL,QAAQ,CAAC,OAAD,CAAjC,wCAAOM,IAAP,eAAaC,SAAb,eAEAL,SAAS,CAAC,UAAM,CACZ,GAAIM,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAJ,CAAqC,CACjCF,SAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAD,CAAR,CACH,CACJ,CAJQ,CAIN,EAJM,CAAT,CAMA,mBACI,KAAC,YAAD,CAAc,QAAd,EACI,KAAK,CAAE,CACHH,IAAI,CAAJA,IADG,CAEHC,QAAQ,CAAE,mBAAM,CACZG,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACAC,SAAQ,CAACD,IAAI,GAAK,MAAT,CAAkB,OAAlB,CAA4B,MAA7B,CAAR,CACAE,cAAc,CAACI,OAAf,CAAuB,OAAvB,CAAgCN,IAAI,GAAK,MAAT,CAAkB,OAAlB,CAA4B,MAA5D,EACH,CANE,CADX,UAUKD,QAVL,EADJ,CAcH,CAvBD,CAyBA,cAAeD,CAAAA,aAAf","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n    const [mode, setTheme] = useState(\"light\");\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('theme')) {\r\n            setTheme(sessionStorage.getItem('theme'));\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <ThemeContext.Provider\r\n            value={{\r\n                mode,\r\n                setTheme: () => {\r\n                    console.log(mode)\r\n                    setTheme(mode === \"dark\" ? \"light\" : \"dark\")\r\n                    sessionStorage.setItem('theme', mode === \"dark\" ? \"light\" : \"dark\");\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}