{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\VotingAid-1\\\\client\\\\src\\\\containers\\\\candidateAnswers\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport language from \"../../properties/language\";\nimport axios from \"axios\";\nimport { endpoint } from \"../../api\";\nimport { UserContext } from \"../../context/userContext\";\nimport DefaultInput from \"../../components/defaultInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FromValueItem = props => {\n  /* console.log('formvalueitem')\r\n  console.log(props)*/\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"boxContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: props.isActive ? \"checkActive\" : \"checkPassive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: 14,\n        textAlign: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = FromValueItem;\nexport const FormValueContainer = props => {\n  /*console.log('formvaluecontainer')\r\n  console.log(props)*/\n  const staticValue = [-2, -1, 0, 1, 2];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      fontSize: 14\n    },\n    children: staticValue.map((value, idx) => /*#__PURE__*/_jsxDEV(FromValueItem, {\n      value: value,\n      isActive: props.answer === value,\n      question: props.answer,\n      idx: idx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FormValueContainer;\nexport class CandidateAnswers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      answers: [],\n      answersDesc: [],\n      filledFormQuestion: [],\n      area: \"\",\n      path: this.props.candidateInfo.studentAssociation,\n      loader: true,\n      disabled: true\n    };\n  }\n\n  componentDidMount() {\n    var email = this.props.candidateInfo.email;\n    console.log(this.state.path);\n    axios.post(endpoint.questions, {\n      data: this.state.path\n    }).then(res => {\n      this.setState({\n        questions: res.data\n      });\n      axios.post(endpoint.fillForm, {\n        data: email\n      }).then(response => {\n        console.log(response);\n        let oldQuestions = res.data;\n        let questionDesc = [];\n        let questionNumber = [];\n        oldQuestions.map((question, idx) => {\n          Object.assign(oldQuestions[idx], {\n            questionValue: Object.values(response.data.filledForm).filter(item => isNaN(item))[idx],\n            questionNumber: Object.values(response.data.filledForm).filter(item => !isNaN(item))[idx]\n          });\n          questionDesc.push(Object.values(response.data.filledForm).filter(item => isNaN(item))[idx]);\n          questionNumber.push(Object.values(response.data.filledForm).filter(item => !isNaN(item))[idx]);\n        });\n        this.setState({\n          questions: oldQuestions\n        });\n        this.setState({\n          answersDesc: questionDesc,\n          answers: questionNumber\n        });\n        this.setState({\n          loader: false\n        });\n      });\n    });\n  }\n\n  isQuest(counter) {\n    if (this.context.user !== \"Quest\") {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: counter,\n        placeholder: \"Explain your choice\",\n        style: {\n          marginBottom: \"41px\",\n          width: \"50%\"\n        },\n        disabled: this.state.disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeScreen\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        maxWidth: 500,\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      children: this.state.loader ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Waiting for data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : this.state.questions && React.Children.toArray(this.state.questions.map((question, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questionSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              fontSize: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: language.questionHolder[this.context.language]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this), this.context.language === \"fin\" ? question.questionFin : question.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              fontSize: 14\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: language.disagreeButton[this.context.language]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"agg\",\n              children: language.agreeButton[this.context.language]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this), this.state.answers && /*#__PURE__*/_jsxDEV(FormValueContainer, {\n            answer: this.state.answers[idx],\n            idx: idx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), this.state.answersDesc && /*#__PURE__*/_jsxDEV(DefaultInput, {\n            label: \"Explain your choice\",\n            type: \"text\",\n            name: idx,\n            value: this.state.answersDesc[idx],\n            disabled: this.state.disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, void 0, false)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nCandidateAnswers.contextType = UserContext;\nexport default CandidateAnswers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FromValueItem\");\n$RefreshReg$(_c2, \"FormValueContainer\");","map":{"version":3,"sources":["C:/Git/VotingAid-1/client/src/containers/candidateAnswers/index.jsx"],"names":["React","Component","language","axios","endpoint","UserContext","DefaultInput","FromValueItem","props","isActive","fontSize","textAlign","display","justifyContent","value","FormValueContainer","staticValue","map","idx","answer","CandidateAnswers","constructor","state","questions","answers","answersDesc","filledFormQuestion","area","path","candidateInfo","studentAssociation","loader","disabled","componentDidMount","email","console","log","post","data","then","res","setState","fillForm","response","oldQuestions","questionDesc","questionNumber","question","Object","assign","questionValue","values","filledForm","filter","item","isNaN","push","isQuest","counter","context","user","marginBottom","width","render","flexDirection","maxWidth","marginLeft","marginRight","Children","toArray","questionHolder","questionFin","disagreeButton","agreeButton","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\n\r\nexport const FromValueItem = (props) => {\r\n  /* console.log('formvalueitem')\r\nconsole.log(props)*/\r\n  return (\r\n    <label className=\"boxContainer\">\r\n      <span className={props.isActive ? \"checkActive\" : \"checkPassive\"}></span>\r\n      <span\r\n        style={{\r\n          fontSize: 14,\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {props.value}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const FormValueContainer = (props) => {\r\n  /*console.log('formvaluecontainer')\r\nconsole.log(props)*/\r\n  const staticValue = [-2, -1, 0, 1, 2];\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: 14,\r\n      }}\r\n    >\r\n      {staticValue.map((value, idx) => (\r\n        <FromValueItem\r\n          value={value}\r\n          isActive={props.answer === value}\r\n          question={props.answer}\r\n          idx={idx}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport class CandidateAnswers extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      answers: [],\r\n      answersDesc: [],\r\n      filledFormQuestion: [],\r\n      area: \"\",\r\n      path: this.props.candidateInfo.studentAssociation,\r\n      loader: true,\r\n      disabled: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var email = this.props.candidateInfo.email;\r\n      console.log(this.state.path)\r\n    axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n      this.setState({ questions: res.data });\r\n      axios.post(endpoint.fillForm, { data: email }).then((response) => {\r\n        console.log(response);\r\n        let oldQuestions = res.data;\r\n        let questionDesc = [];\r\n        let questionNumber = [];\r\n        oldQuestions.map((question, idx) => {\r\n          Object.assign(oldQuestions[idx], {\r\n            questionValue: Object.values(response.data.filledForm).filter(\r\n              (item) => isNaN(item)\r\n            )[idx],\r\n            questionNumber: Object.values(response.data.filledForm).filter(\r\n              (item) => !isNaN(item)\r\n            )[idx],\r\n          });\r\n          questionDesc.push(\r\n            Object.values(response.data.filledForm).filter((item) =>\r\n              isNaN(item)\r\n            )[idx]\r\n          );\r\n          questionNumber.push(\r\n            Object.values(response.data.filledForm).filter(\r\n              (item) => !isNaN(item)\r\n            )[idx]\r\n          );\r\n        });\r\n        this.setState({ questions: oldQuestions });\r\n        this.setState({\r\n          answersDesc: questionDesc,\r\n          answers: questionNumber,\r\n        });\r\n        this.setState({ loader: false });\r\n      });\r\n    });\r\n  }\r\n\r\n  isQuest(counter) {\r\n    if (this.context.user !== \"Quest\") {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          name={counter}\r\n          placeholder=\"Explain your choice\"\r\n          style={{ marginBottom: \"41px\", width: \"50%\" }}\r\n          disabled={this.state.disabled}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        {this.state.loader ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <p style={{ textAlign: \"center\" }}>Waiting for data...</p>\r\n          </div>\r\n        ) : (\r\n          this.state.questions &&\r\n          React.Children.toArray(\r\n            this.state.questions.map((question, idx) => (\r\n              <>\r\n                <div className=\"questionSet\">\r\n                  <label style={{ fontSize: 16 }}>\r\n                    <strong>\r\n                      {language.questionHolder[this.context.language]}\r\n                    </strong>\r\n                    {this.context.language === \"fin\"\r\n                      ? question.questionFin\r\n                      : question.question}\r\n                  </label>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      fontSize: 14,\r\n                    }}\r\n                  >\r\n                    <span>\r\n                      {language.disagreeButton[this.context.language]}\r\n                    </span>\r\n                    <span className=\"agg\">\r\n                      {language.agreeButton[this.context.language]}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {this.state.answers && (\r\n                    <FormValueContainer\r\n                      answer={this.state.answers[idx]}\r\n                      idx={idx}\r\n                    />\r\n                  )}\r\n\r\n                  {this.state.answersDesc && (\r\n                    <DefaultInput\r\n                      label=\"Explain your choice\"\r\n                      type=\"text\"\r\n                      name={idx}\r\n                      value={this.state.answersDesc[idx]}\r\n                      disabled={this.state.disabled}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </>\r\n            ))\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CandidateAnswers;\r\n"]},"metadata":{},"sourceType":"module"}