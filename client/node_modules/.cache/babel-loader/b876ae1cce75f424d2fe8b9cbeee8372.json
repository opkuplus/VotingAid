{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\VotingAid-1\\\\client\\\\src\\\\context\\\\ThemeProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\n\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n\n  const [mode, setTheme] = useState(\"light\");\n  useEffect(() => {\n    if (sessionStorage.getItem('theme')) {\n      setTheme(sessionStorage.getItem('theme'));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      mode,\n      setTheme: () => {\n        console.log(mode);\n        setTheme(mode === \"dark\" ? \"light\" : \"dark\");\n        sessionStorage.setItem('theme', mode === \"dark\" ? \"light\" : \"dark\");\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeProvider, \"HXpNc8AcQGN2ho+RGllf7eynEQs=\");\n\n_c = ThemeProvider;\nexport default ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/Git/VotingAid-1/client/src/context/ThemeProvider.js"],"names":["React","useState","createContext","useEffect","ThemeContext","ThemeProvider","children","mode","setTheme","sessionStorage","getItem","console","log","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;;AAEP,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,OAAD,CAAjC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAJ,EAAqC;AACjCF,MAAAA,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAD,CAAR;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,QAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHH,MAAAA,IADG;AAEHC,MAAAA,QAAQ,EAAE,MAAM;AACZG,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAC,QAAAA,QAAQ,CAACD,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4B,MAA7B,CAAR;AACAE,QAAAA,cAAc,CAACI,OAAf,CAAuB,OAAvB,EAAgCN,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4B,MAA5D;AACH;AANE,KADX;AAAA,cAUKD;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAvBD;;GAAMD,a;;KAAAA,a;AAyBN,eAAeA,aAAf","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n    const [mode, setTheme] = useState(\"light\");\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('theme')) {\r\n            setTheme(sessionStorage.getItem('theme'));\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <ThemeContext.Provider\r\n            value={{\r\n                mode,\r\n                setTheme: () => {\r\n                    console.log(mode)\r\n                    setTheme(mode === \"dark\" ? \"light\" : \"dark\")\r\n                    sessionStorage.setItem('theme', mode === \"dark\" ? \"light\" : \"dark\");\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}