{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\VotingAid-1\\\\client\\\\src\\\\context\\\\userContext.js\";\nimport jwt from \"jwt-decode\";\nimport React, { createContext, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\nclass UserContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeLanguage = e => {\n      this.setState({\n        language: e\n      });\n      sessionStorage.setItem('language', e);\n    };\n\n    this.changeUser = (user, email, school, loggedIn, token) => {\n      this.setState({\n        user: user,\n        email: email,\n        school: school,\n        loggedIn: loggedIn,\n        token: token\n      });\n    };\n\n    this.logOut = () => {\n      this.changeUser('Quest', '', '', false, '');\n      /*sessionStorage.removeItem('email');\r\n      sessionStorage.removeItem('status');*/\n\n      sessionStorage.removeItem('token');\n    };\n\n    this.checkExistingLogin = () => {\n      /*let email = sessionStorage.getItem('email');\r\n      let status = sessionStorage.getItem('status');*/\n      let storedToken = sessionStorage.getItem('token');\n\n      if (storedToken) {\n        let decodedToken = jwt(storedToken);\n        this.changeUser(decodedToken.status, decodedToken.email, decodedToken.school, true, storedToken);\n      }\n    };\n\n    this.state = this.existingLogin() || {\n      user: 'Quest',\n      email: '',\n      school: '',\n      loggedIn: false,\n      language: 'fin',\n      token: ''\n    };\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem('language')) {\n      this.setState({\n        language: sessionStorage.getItem('language')\n      });\n    }\n  }\n\n  existingLogin() {\n    let storedToken = sessionStorage.getItem('token');\n\n    if (storedToken) {\n      let decodedToken = jwt(storedToken);\n      return {\n        user: decodedToken.status,\n        email: decodedToken.email,\n        school: decodedToken.school,\n        loggedIn: true,\n        token: storedToken\n      };\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: { ...this.state,\n        changeUser: this.changeUser,\n        checkExistingLogin: this.checkExistingLogin,\n        logOut: this.logOut,\n        changeLanguage: this.changeLanguage\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserContextProvider;","map":{"version":3,"sources":["C:/Git/VotingAid-1/client/src/context/userContext.js"],"names":["jwt","React","createContext","Component","UserContext","UserContextProvider","constructor","props","changeLanguage","e","setState","language","sessionStorage","setItem","changeUser","user","email","school","loggedIn","token","logOut","removeItem","checkExistingLogin","storedToken","getItem","decodedToken","status","state","existingLogin","componentDidMount","render","children"],"mappings":"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","sourcesContent":["import jwt from \"jwt-decode\";\r\nimport React, { createContext, Component } from 'react';\r\n\r\nexport const UserContext = createContext();\r\nclass UserContextProvider extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = this.existingLogin() || {\r\n      user: 'Quest',\r\n      email: '',\r\n      school: '',\r\n      loggedIn: false,\r\n      language: 'fin',\r\n      token: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (sessionStorage.getItem('language')) {\r\n      this.setState({ language: sessionStorage.getItem('language') })\r\n    }\r\n  }\r\n\r\n  changeLanguage = (e) => {\r\n    this.setState({ language: e });\r\n    sessionStorage.setItem('language', e);\r\n  }\r\n\r\n  changeUser = (user, email, school, loggedIn, token) => {\r\n    this.setState({\r\n      user: user,\r\n      email: email,\r\n      school: school,\r\n      loggedIn: loggedIn,\r\n      token: token,\r\n    });\r\n  }\r\n\r\n  logOut = () => {\r\n    this.changeUser('Quest', '', '', false, '');\r\n    /*sessionStorage.removeItem('email');\r\n    sessionStorage.removeItem('status');*/\r\n    sessionStorage.removeItem('token');\r\n  }\r\n\r\n  checkExistingLogin = () => {\r\n    /*let email = sessionStorage.getItem('email');\r\n    let status = sessionStorage.getItem('status');*/\r\n    let storedToken = sessionStorage.getItem('token');\r\n    if (storedToken) {\r\n      let decodedToken = jwt(storedToken)\r\n      this.changeUser(decodedToken.status, decodedToken.email, decodedToken.school, true, storedToken);\r\n    }\r\n  }\r\n\r\n  existingLogin() {\r\n    let storedToken = sessionStorage.getItem('token')\r\n    if (storedToken) {\r\n      let decodedToken = jwt(storedToken)\r\n      return {\r\n        user: decodedToken.status,\r\n        email: decodedToken.email,\r\n        school: decodedToken.school,\r\n        loggedIn: true,\r\n        token: storedToken,\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <UserContext.Provider value={{\r\n        ...this.state,\r\n        changeUser: this.changeUser,\r\n        checkExistingLogin: this.checkExistingLogin,\r\n        logOut: this.logOut,\r\n        changeLanguage: this.changeLanguage,\r\n      }}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserContextProvider;"]},"metadata":{},"sourceType":"module"}