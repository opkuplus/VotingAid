{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\VotingAid-1\\\\client\\\\src\\\\components\\\\upload\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = ({\n  email,\n  onUpload,\n  profile\n}) => {\n  _s();\n\n  const [fileInputState, setFileInputState] = useState('');\n  const [selectedFile, setSelectedFile] = useState('');\n  const [previewSource, setPreviewSource] = useState(''); // const [name, setName] = useState('')\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    const fileName = e.target.files[0];\n    previewFile(file);\n    setSelectedFile(file.name); // setName(file.name)\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader(); // shows the picture you are uploading, not necessary\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      // setPreviewSource(reader.result)\n      uploadImage(reader.result, file.name); // console.log(file)\n      // console.log(previewSource)\n      // console.log(selectedFile)\n    };\n  }; // const handleSubmitFile = () => {\n  //     // e.preventDefault();\n  //     if (!previewSource) return;\n  //     uploadImage(previewSource, selectedFile);\n  // }\n\n\n  let dataResp;\n\n  const uploadImage = async (base64EncodedImage, fileName) => {\n    console.log(email);\n\n    try {\n      await axios.post('/api/uploadImage', {\n        data: base64EncodedImage,\n        email,\n        fileName\n      } // body: JSON.stringify({ data: base64EncodedImage, email, fileName }),\n      // headers: { 'Content-type': 'application/json' },\n      ).then(resp => {\n        dataResp = resp.data;\n        console.log(resp);\n      });\n      onUpload(dataResp);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: handleFileInputChange,\n        value: fileInputState,\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"CdzFnetpblJoJzTP109pqnzgSUs=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["C:/Git/VotingAid-1/client/src/components/upload/index.js"],"names":["React","useState","useEffect","axios","Upload","email","onUpload","profile","fileInputState","setFileInputState","selectedFile","setSelectedFile","previewSource","setPreviewSource","handleFileInputChange","e","file","target","files","fileName","previewFile","name","reader","FileReader","readAsDataURL","onloadend","uploadImage","result","dataResp","base64EncodedImage","console","log","post","data","then","resp","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAAA;;AAC7C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD,CAH6C,CAI7C;;AAEA,QAAMa,qBAAqB,GAAIC,CAAD,IAAO;AACjC,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,QAAQ,GAAGJ,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAjB;AACAE,IAAAA,WAAW,CAACJ,IAAD,CAAX;AACAL,IAAAA,eAAe,CAACK,IAAI,CAACK,IAAN,CAAf,CAJiC,CAKjC;AACH,GAND;;AAQA,QAAMD,WAAW,GAAIJ,IAAD,IAAU;AAC1B,UAAMM,MAAM,GAAG,IAAIC,UAAJ,EAAf,CAD0B,CAE1B;;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBR,IAArB;;AACAM,IAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACrB;AACAC,MAAAA,WAAW,CAACJ,MAAM,CAACK,MAAR,EAAgBX,IAAI,CAACK,IAArB,CAAX,CAFqB,CAGrB;AACA;AACA;AACH,KAND;AAOH,GAXD,CAd6C,CA0B7C;AACA;AACA;AACA;AACA;;;AACA,MAAIO,QAAJ;;AACA,QAAMF,WAAW,GAAG,OAAOG,kBAAP,EAA2BV,QAA3B,KAAwC;AACxDW,IAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAZ;;AACA,QAAI;AACA,YAAMF,KAAK,CAAC6B,IAAN,CAAW,kBAAX,EAA+B;AAAEC,QAAAA,IAAI,EAAEJ,kBAAR;AAA4BxB,QAAAA,KAA5B;AAAmCc,QAAAA;AAAnC,OAA/B,CACF;AACA;AAFE,QAGJe,IAHI,CAGCC,IAAI,IAAI;AACXP,QAAAA,QAAQ,GAAGO,IAAI,CAACF,IAAhB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACH,OANK,CAAN;AAOA7B,MAAAA,QAAQ,CAACsB,QAAD,CAAR;AACH,KATD,CASE,OAAOQ,KAAP,EAAc;AACZN,MAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACH;AACJ,GAdD;;AAgBA,sBACI;AAAA,2BACI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,QAAQ,EAAEtB,qBAA1C;AAAiE,QAAA,KAAK,EAAEN,cAAxE;AAAwF,QAAA,SAAS,EAAC;AAAlG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA3DD;;GAAMJ,M;;KAAAA,M;AA6DN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst Upload = ({ email, onUpload, profile }) => {\r\n    const [fileInputState, setFileInputState] = useState('')\r\n    const [selectedFile, setSelectedFile] = useState('')\r\n    const [previewSource, setPreviewSource] = useState('')\r\n    // const [name, setName] = useState('')\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        const fileName = e.target.files[0];\r\n        previewFile(file)\r\n        setSelectedFile(file.name)\r\n        // setName(file.name)\r\n    }\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        // shows the picture you are uploading, not necessary\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            // setPreviewSource(reader.result)\r\n            uploadImage(reader.result, file.name);\r\n            // console.log(file)\r\n            // console.log(previewSource)\r\n            // console.log(selectedFile)\r\n        }\r\n    }\r\n    // const handleSubmitFile = () => {\r\n    //     // e.preventDefault();\r\n    //     if (!previewSource) return;\r\n    //     uploadImage(previewSource, selectedFile);\r\n    // }\r\n    let dataResp;\r\n    const uploadImage = async (base64EncodedImage, fileName) => {\r\n        console.log(email)\r\n        try {\r\n            await axios.post('/api/uploadImage', { data: base64EncodedImage, email, fileName }\r\n                // body: JSON.stringify({ data: base64EncodedImage, email, fileName }),\r\n                // headers: { 'Content-type': 'application/json' },\r\n            ).then(resp => {\r\n                dataResp = resp.data;\r\n                console.log(resp)\r\n            })\r\n            onUpload(dataResp)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input type=\"file\" name=\"image\" onChange={handleFileInputChange} value={fileInputState} className=\"form-input\" />\r\n                {/* <button className=\"form-input\" type=\"submit\">Submit</button> */}\r\n            </form>\r\n            {/* {previewSource && (\r\n                <img src={previewSource} alt=\"chosen\" style={{ height: '300px' }} />\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload\r\n"]},"metadata":{},"sourceType":"module"}