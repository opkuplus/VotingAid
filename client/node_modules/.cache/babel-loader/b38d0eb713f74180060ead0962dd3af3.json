{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\VotingAid-1\\\\client\\\\src\\\\containers\\\\questions\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport language from \"../../properties/language\";\nimport { UserContext } from \"../../context/userContext\";\nimport QuestionsItem from \"../../components/questionItem\";\nimport { endpoint } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeInputValue = (e, idx) => {\n      let newQuestions = [...this.state.questions];\n      let question = newQuestions.findIndex(q => q._id === idx); //newQuestions[question].question = e.target.value;\n\n      newQuestions[question].question = e.target.value;\n      this.setState({\n        questions: [...newQuestions]\n      });\n    };\n\n    this.allQuestions = () => {\n      console.log(\"inside\");\n      this.setState({\n        questions: []\n      });\n      axios.get(endpoint.allQuestions).then(res => {\n        console.log(res.data);\n        this.setState({\n          questions: res.data\n        });\n        let newFilters = [];\n        res.data.map(filter => newFilters.push(filter.area));\n        let unique = [...new Set(newFilters)];\n        this.setState({\n          filtersData: [...unique]\n        });\n      });\n    };\n\n    this.FilterQuestions = filter => {\n      console.log(filter);\n      this.setState({\n        questions: []\n      });\n      axios.post(endpoint.filteredQuestions, {\n        data: filter\n      }).then(res => {\n        this.setState({\n          filteredQuestions: res.data\n        });\n      });\n    };\n\n    this.state = {\n      questions: [],\n      filteredQuestions: [],\n      schools: [],\n      filtersData: [],\n      selectBox: \"allQuestion\"\n    };\n  }\n\n  componentDidMount() {\n    this.allQuestions();\n    console.log(this.context.school);\n    this.FilterQuestions(this.context.school);\n  }\n\n  // handleChange = (e) => {\n  //   if (e.target.value !== \"Select filter\") {\n  //     console.log(\"not select filter\");\n  //     this.FilterQuestions(e.target.value);\n  //     this.setState({ selectBox: e.target.value });\n  //   } else {\n  //     console.log(\"select filter\");\n  //     this.allQuestions();\n  //     this.setState({ selectBox: \"allQuestion\" });\n  //   }\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        maxWidth: 800,\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          marginTop: 20,\n          backgroundColor: \"rgba(255, 255, 255, 0.829)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formQuestions\",\n          children: this.state.questions && React.Children.toArray(this.state.filteredQuestions.map(question => /*#__PURE__*/_jsxDEV(QuestionsItem, {\n            question: question,\n            refreshQuestions: () => {\n              //   this.state.selectBox === \"allQuestion\"\n              //     ? this.allQuestions()\n              //     : this.FilterQuestions(this.state.selectBox);\n              this.FilterQuestions(this.context.school);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nQuestions.contextType = UserContext;\nexport default Questions;","map":{"version":3,"sources":["C:/Git/VotingAid-1/client/src/containers/questions/index.jsx"],"names":["React","Component","axios","language","UserContext","QuestionsItem","endpoint","Questions","constructor","props","changeInputValue","e","idx","newQuestions","state","questions","question","findIndex","q","_id","target","value","setState","allQuestions","console","log","get","then","res","data","newFilters","map","filter","push","area","unique","Set","filtersData","FilterQuestions","post","filteredQuestions","schools","selectBox","componentDidMount","context","school","render","display","justifyContent","flexDirection","maxWidth","marginLeft","marginRight","alignItems","marginTop","backgroundColor","Children","toArray","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\nimport QuestionsItem from \"../../components/questionItem\";\r\nimport { endpoint } from \"../../api\";\r\n\r\nclass Questions extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      filteredQuestions: [],\r\n      schools: [],\r\n      filtersData: [],\r\n      selectBox: \"allQuestion\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.allQuestions();\r\n    console.log(this.context.school);\r\n    this.FilterQuestions(this.context.school);\r\n  }\r\n\r\n  changeInputValue = (e, idx) => {\r\n    let newQuestions = [...this.state.questions];\r\n    let question = newQuestions.findIndex((q) => q._id === idx);\r\n    //newQuestions[question].question = e.target.value;\r\n    newQuestions[question].question = e.target.value;\r\n    this.setState({ questions: [...newQuestions] });\r\n  };\r\n\r\n  allQuestions = () => {\r\n    console.log(\"inside\");\r\n    this.setState({ questions: [] });\r\n    axios.get(endpoint.allQuestions).then((res) => {\r\n      console.log(res.data);\r\n      this.setState({ questions: res.data });\r\n      let newFilters = [];\r\n      res.data.map((filter) => newFilters.push(filter.area));\r\n      let unique = [...new Set(newFilters)];\r\n      this.setState({ filtersData: [...unique] });\r\n    });\r\n  };\r\n\r\n  FilterQuestions = (filter) => {\r\n    console.log(filter);\r\n    this.setState({ questions: [] });\r\n    axios.post(endpoint.filteredQuestions, { data: filter }).then((res) => {\r\n      this.setState({ filteredQuestions: res.data });\r\n    });\r\n  };\r\n\r\n  // handleChange = (e) => {\r\n  //   if (e.target.value !== \"Select filter\") {\r\n  //     console.log(\"not select filter\");\r\n  //     this.FilterQuestions(e.target.value);\r\n  //     this.setState({ selectBox: e.target.value });\r\n  //   } else {\r\n  //     console.log(\"select filter\");\r\n  //     this.allQuestions();\r\n  //     this.setState({ selectBox: \"allQuestion\" });\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 800,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginTop: 20,\r\n            backgroundColor: \"rgba(255, 255, 255, 0.829)\",\r\n          }}\r\n        >\r\n          {/* <span className=\"filterCandidateLabel\">\r\n            {language.filterCandidateLabel[this.context.language]}\r\n          </span> */}\r\n          {/* <select className=\"questionsSelectBox\" onChange={this.handleChange}>\r\n            <option value=\"Select filter\">Select filter</option>\r\n            {this.state.filtersData &&\r\n              React.Children.toArray(\r\n                this.state.filtersData.map((filter) => (\r\n                  <option value={filter}>{filter}</option>\r\n                ))\r\n              )}\r\n          </select> */}\r\n        </div>\r\n\r\n        <form>\r\n          <div className=\"formQuestions\">\r\n            {this.state.questions &&\r\n              React.Children.toArray(\r\n                this.state.filteredQuestions.map((question) => (\r\n                  <QuestionsItem\r\n                    question={question}\r\n                    refreshQuestions={() => {\r\n                      //   this.state.selectBox === \"allQuestion\"\r\n                      //     ? this.allQuestions()\r\n                      //     : this.FilterQuestions(this.state.selectBox);\r\n                      this.FilterQuestions(this.context.school);\r\n                    }}\r\n                  />\r\n                ))\r\n              )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n"]},"metadata":{},"sourceType":"module"}