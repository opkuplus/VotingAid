{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\VotingAid-1\\\\client\\\\src\\\\containers\\\\registration\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport language from \"../../properties/language\";\nimport { UserContext } from \"../../context/userContext\";\nimport { endpoint } from \"../../api\";\nimport DefaultInput from \"../../components/defaultInput\";\nimport DefaultButton from \"../../components/defaultButton\";\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const user = {\n        email: this.state.email,\n        password: this.state.password,\n        password_confirmation: this.state.password_confirmation,\n        status: \"Candidate\"\n      };\n\n      if (this.state.password == this.state.password_confirmation) {\n        axios.post(endpoint.register, user).then(res => {\n          console.log(user.email);\n          console.log(res.data);\n          Swal.fire({\n            text: res.data.includes(\"address\") ? language.registrationError[this.context.language] : \"success\",\n            icon: res.data.includes(\"address\") ? \"error\" : \"success\"\n          });\n        });\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"ERROR\",\n          text: language.passwordConfirmationError[this.context.language]\n        });\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      registrationErrors: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeScreen\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        maxWidth: 500,\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: language.registrationTitle[this.context.language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: language.registrationPageDescription[this.context.language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DefaultInput, {\n          label: language.emailPlaceHolder[this.context.language],\n          type: \"email\",\n          name: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DefaultInput, {\n          label: language.passwordPlaceHolder[this.context.language],\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DefaultInput, {\n          label: language.passwordConfirmationPlaceHolder[this.context.language],\n          type: \"password\",\n          name: \"password_confirmation\",\n          value: this.state.password_confirmation,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DefaultButton, {\n          type: \"submit\",\n          text: language.registerButton[this.context.language],\n          borderColor: DARK_GREEN,\n          backgroundColor: GREEN,\n          textColor: WHITE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: \"/\"\n          },\n          children: [\" \", language.mainPageLink[this.context.language], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nRegistration.contextType = UserContext;\nexport default Registration;","map":{"version":3,"sources":["C:/Git/VotingAid-1/client/src/containers/registration/index.jsx"],"names":["React","Component","axios","Link","Swal","language","UserContext","endpoint","DefaultInput","DefaultButton","DARK_GREEN","GREEN","WHITE","Registration","constructor","props","handleSubmit","event","preventDefault","user","email","state","password","password_confirmation","status","post","register","then","res","console","log","data","fire","text","includes","registrationError","context","icon","title","passwordConfirmationError","registrationErrors","bind","handleChange","setState","target","name","value","render","display","justifyContent","flexDirection","maxWidth","marginLeft","marginRight","textAlign","registrationTitle","registrationPageDescription","emailPlaceHolder","passwordPlaceHolder","passwordConfirmationPlaceHolder","registerButton","pathname","mainPageLink","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nclass Registration extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      registrationErrors: \"\",\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password_confirmation: this.state.password_confirmation,\r\n      status: \"Candidate\",\r\n    };\r\n    if (this.state.password == this.state.password_confirmation) {\r\n      axios.post(endpoint.register, user).then((res) => {\r\n        console.log(user.email);\r\n        console.log(res.data);\r\n        Swal.fire({\r\n          text: res.data.includes(\"address\")\r\n            ? language.registrationError[this.context.language]\r\n            : \"success\",\r\n          icon: res.data.includes(\"address\") ? \"error\" : \"success\",\r\n        });\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"ERROR\",\r\n        text: language.passwordConfirmationError[this.context.language],\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n\t\t<h1 style={{ textAlign: \"center\" }}>\r\n          {language.registrationTitle[this.context.language]}\r\n        </h1>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          {language.registrationPageDescription[this.context.language]}\r\n        </p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <DefaultInput\r\n            label={language.emailPlaceHolder[this.context.language]}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={language.passwordPlaceHolder[this.context.language]}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={\r\n              language.passwordConfirmationPlaceHolder[this.context.language]\r\n            }\r\n            type=\"password\"\r\n            name=\"password_confirmation\"\r\n            value={this.state.password_confirmation}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultButton\r\n            type=\"submit\"\r\n            text={language.registerButton[this.context.language]}\r\n            borderColor={DARK_GREEN}\r\n            backgroundColor={GREEN}\r\n            textColor={WHITE}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {language.mainPageLink[this.context.language]}{\" \"}\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;\r\n"]},"metadata":{},"sourceType":"module"}