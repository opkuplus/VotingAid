{"ast":null,"code":"import _regeneratorRuntime from\"C:/Git/VotingAid-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Git/VotingAid-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Git/VotingAid-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";var Upload=function Upload(_ref){var email=_ref.email,onUpload=_ref.onUpload,profile=_ref.profile;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),fileInputState=_useState2[0],setFileInputState=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),selectedFile=_useState4[0],setSelectedFile=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),previewSource=_useState6[0],setPreviewSource=_useState6[1];// const [name, setName] = useState('')\nvar handleFileInputChange=function handleFileInputChange(e){var file=e.target.files[0];var fileName=e.target.files[0];previewFile(file);setSelectedFile(file.name);// setName(file.name)\n};var previewFile=function previewFile(file){var reader=new FileReader();// shows the picture you are uploading, not necessary\nreader.readAsDataURL(file);reader.onloadend=function(){// setPreviewSource(reader.result)\nuploadImage(reader.result,file.name);// console.log(file)\n// console.log(previewSource)\n// console.log(selectedFile)\n};};// const handleSubmitFile = () => {\n//     // e.preventDefault();\n//     if (!previewSource) return;\n//     uploadImage(previewSource, selectedFile);\n// }\nvar dataResp;var uploadImage=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(base64EncodedImage,fileName){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(email);_context.prev=1;_context.next=4;return axios.post('/api/uploadImage',{data:base64EncodedImage,email:email,fileName:fileName}// body: JSON.stringify({ data: base64EncodedImage, email, fileName }),\n// headers: { 'Content-type': 'application/json' },\n).then(function(resp){dataResp=resp.data;console.log(resp);});case 4:onUpload(dataResp);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));return function uploadImage(_x,_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"image\",onChange:handleFileInputChange,value:fileInputState,className:\"form-input\"})})});};export default Upload;","map":{"version":3,"sources":["C:/Git/VotingAid-1/client/src/components/upload/index.js"],"names":["React","useState","useEffect","axios","Upload","email","onUpload","profile","fileInputState","setFileInputState","selectedFile","setSelectedFile","previewSource","setPreviewSource","handleFileInputChange","e","file","target","files","fileName","previewFile","name","reader","FileReader","readAsDataURL","onloadend","uploadImage","result","dataResp","base64EncodedImage","console","log","post","data","then","resp","error"],"mappings":"6aAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAkC,IAA/BC,CAAAA,KAA+B,MAA/BA,KAA+B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,OAAc,MAAdA,OAAc,CAC7C,cAA4CN,QAAQ,CAAC,EAAD,CAApD,wCAAOO,cAAP,eAAuBC,iBAAvB,eACA,eAAwCR,QAAQ,CAAC,EAAD,CAAhD,yCAAOS,YAAP,eAAqBC,eAArB,eACA,eAA0CV,QAAQ,CAAC,EAAD,CAAlD,yCAAOW,aAAP,eAAsBC,gBAAtB,eACA;AAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,CAAD,CAAO,CACjC,GAAMC,CAAAA,IAAI,CAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb,CACA,GAAMC,CAAAA,QAAQ,CAAGJ,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAjB,CACAE,WAAW,CAACJ,IAAD,CAAX,CACAL,eAAe,CAACK,IAAI,CAACK,IAAN,CAAf,CACA;AACH,CAND,CAQA,GAAMD,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,IAAD,CAAU,CAC1B,GAAMM,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACA;AACAD,MAAM,CAACE,aAAP,CAAqBR,IAArB,EACAM,MAAM,CAACG,SAAP,CAAmB,UAAM,CACrB;AACAC,WAAW,CAACJ,MAAM,CAACK,MAAR,CAAgBX,IAAI,CAACK,IAArB,CAAX,CACA;AACA;AACA;AACH,CAND,CAOH,CAXD,CAYA;AACA;AACA;AACA;AACA;AACA,GAAIO,CAAAA,QAAJ,CACA,GAAMF,CAAAA,WAAW,2FAAG,iBAAOG,kBAAP,CAA2BV,QAA3B,kHAChBW,OAAO,CAACC,GAAR,CAAY1B,KAAZ,EADgB,sCAGNF,CAAAA,KAAK,CAAC6B,IAAN,CAAW,kBAAX,CAA+B,CAAEC,IAAI,CAAEJ,kBAAR,CAA4BxB,KAAK,CAALA,KAA5B,CAAmCc,QAAQ,CAARA,QAAnC,CACjC;AACA;AAFE,EAGJe,IAHI,CAGC,SAAAC,IAAI,CAAI,CACXP,QAAQ,CAAGO,IAAI,CAACF,IAAhB,CACAH,OAAO,CAACC,GAAR,CAAYI,IAAZ,EACH,CANK,CAHM,QAUZ7B,QAAQ,CAACsB,QAAD,CAAR,CAVY,+EAYZE,OAAO,CAACM,KAAR,cAZY,oEAAH,kBAAXV,CAAAA,WAAW,iDAAjB,CAgBA,mBACI,kCACI,mCACI,cAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,OAAxB,CAAgC,QAAQ,CAAEZ,qBAA1C,CAAiE,KAAK,CAAEN,cAAxE,CAAwF,SAAS,CAAC,YAAlG,EADJ,EADJ,EADJ,CAWH,CA3DD,CA6DA,cAAeJ,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst Upload = ({ email, onUpload, profile }) => {\r\n    const [fileInputState, setFileInputState] = useState('')\r\n    const [selectedFile, setSelectedFile] = useState('')\r\n    const [previewSource, setPreviewSource] = useState('')\r\n    // const [name, setName] = useState('')\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        const fileName = e.target.files[0];\r\n        previewFile(file)\r\n        setSelectedFile(file.name)\r\n        // setName(file.name)\r\n    }\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        // shows the picture you are uploading, not necessary\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            // setPreviewSource(reader.result)\r\n            uploadImage(reader.result, file.name);\r\n            // console.log(file)\r\n            // console.log(previewSource)\r\n            // console.log(selectedFile)\r\n        }\r\n    }\r\n    // const handleSubmitFile = () => {\r\n    //     // e.preventDefault();\r\n    //     if (!previewSource) return;\r\n    //     uploadImage(previewSource, selectedFile);\r\n    // }\r\n    let dataResp;\r\n    const uploadImage = async (base64EncodedImage, fileName) => {\r\n        console.log(email)\r\n        try {\r\n            await axios.post('/api/uploadImage', { data: base64EncodedImage, email, fileName }\r\n                // body: JSON.stringify({ data: base64EncodedImage, email, fileName }),\r\n                // headers: { 'Content-type': 'application/json' },\r\n            ).then(resp => {\r\n                dataResp = resp.data;\r\n                console.log(resp)\r\n            })\r\n            onUpload(dataResp)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input type=\"file\" name=\"image\" onChange={handleFileInputChange} value={fileInputState} className=\"form-input\" />\r\n                {/* <button className=\"form-input\" type=\"submit\">Submit</button> */}\r\n            </form>\r\n            {/* {previewSource && (\r\n                <img src={previewSource} alt=\"chosen\" style={{ height: '300px' }} />\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload\r\n"]},"metadata":{},"sourceType":"module"}