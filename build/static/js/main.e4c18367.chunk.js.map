{"version":3,"sources":["navigation/routeValidation.js","properties/language.js","api/index.js","context/userContext.js","components/defaultInput/index.jsx","components/defaultButton/index.jsx","helpers/constants.js","containers/form/index.jsx","containers/home/index.jsx","containers/registration/index.jsx","containers/login/index.jsx","components/partials/picture.js","components/upload/index.js","containers/profile/index.jsx","functions/dbCalls.js","components/partials/selectMenuLists.js","components/partials/studentAssociationOption.js","components/partials/candidateTableLinkItem.js","components/partials/candidateTableItem.js","components/partials/candidateTableRow.js","components/partials/candidateTableHeader.js","components/partials/candidateTable.js","containers/candidates/index.js","components/questionItem/index.jsx","containers/questions/index.jsx","containers/candidateAnswers/index.jsx","containers/suggestedCandidates/index.jsx","containers/addCandidates/index.js","containers/addOneCandidate/index.js","containers/addQuestion/index.jsx","context/ThemeProvider.js","components/themeToggleButton/index.js","assets/icons/sweden.svg","assets/icons/finland.svg","assets/icons/uk.svg","components/navbar/index.js","components/adminNavbar/index.js","navigation/index.js","App.js","serviceWorker.js","index.js"],"names":["CandidateRoute","Component","component","rest","render","props","getLoginStatus","to","pathname","state","from","location","AdminRoute","PublicRoute","storedToken","sessionStorage","getItem","decodedToken","jwt","console","log","status","language","title","fin","eng","swe","registrationTitle","loginTitle","homePageDescription","registrationPageDescription","loginPageDescription","selectStudentAssociation","navigationHome","navigationLogin","navigationRegister","navigationLogOut","navigationProfile","formButton","loginButton","loginHolder","mainPageLink","registerButton","emailPlaceHolder","passwordPlaceHolder","passwordConfirmationPlaceHolder","registrationError","passwordConfirmationError","profileButton","adminLogo","addCandidatesCautionHolder","fillFormButton","continueHolder","browseButton","uploadPicture","candidateHolder","successQuestionAddedHolder","wrongPasswordHolder","addedCandidatesToDatabaseAlert","addingOneCandidateToDatabaseAlert","addingOneCandidateToDatabaseErrorAlert","changeProfileDataAlert","filledFormAlert","oneCandidate","manyCandidates","addCandidates","addCandidate","browseCandidates","addQuestion","browseQuestions","removeButton","agreeButton","disagreeButton","matchingCandidates","firstName","surName","school","selectStudentAssociationList","campus","electoralDistrict","electoralAlliance","description","addQuestionButton","deleteButton","editButton","updateButton","formLink","studentAssociationHolder","deleteHolder","questionHolder","noSimilarCandidates","endpoint","UserContext","createContext","UserContextProvider","changeLanguage","e","setState","setItem","changeUser","user","email","loggedIn","token","logOut","removeItem","checkExistingLogin","existingLogin","this","Provider","value","children","DefaultInput","style","fontSize","marginBottom","label","disabled","type","name","placeholder","defaultValue","onChange","required","id","ref","padding","PureComponent","DefaultButton","outline","border","borderColor","backgroundColor","color","textColor","textTransform","width","onClick","text","WHITE","DARK_GREEN","GREEN","FromValueItem","handleClick","className","isActive","textAlign","display","justifyContent","FormValueContainer","map","idx","answer","question","Form","handleChange","answersDesc","currentTarget","handleSubmit","preventDefault","context","axios","post","ans","answers","desc","studentAssociation","path","headers","Authorization","then","res","Swal","fire","data","icon","includes","confirmButtonText","history","push","oldAnswers","parseInt","questions","filledFormQuestion","area","split","loader","response","oldQuestions","questionDesc","questionNumber","Object","assign","questionValue","values","filledForm","filter","item","isNaN","counter","flexDirection","maxWidth","marginLeft","marginRight","onSubmit","React","Children","toArray","questionFin","questionSwe","contextType","Home","target","userStudentAssociation","catch","err","bind","Registration","event","password","password_confirmation","registrationErrors","Login","tokenUser","Picture","source","alt","src","Upload","dataResp","onUpload","profile","useState","fileInputState","setSelectedFile","previewFile","file","reader","FileReader","readAsDataURL","onloadend","uploadImage","result","base64EncodedImage","fileName","a","resp","error","files","Profile","fetchData","updatePicture","componentDidMount","submitData","prevState","filename","information","key","surname","image","height","objectFit","overflow","borderRadius","info","FilterCandidateTable","setStateArray","Axios","q","i","length","universal","ask","helga","humako","jamko","laureamko","metka","odiako","tuo","CandidateTableLinkItem","textOne","textTwo","cursor","CandidateTableItem","CandidateTableItemRow","candidateDeleted","button","useContext","callback","deleteCandidateByEmail","confirmDelete","CandidateTableHeader","header","CandidateTable","stateArray","Table","striped","bordered","hover","variant","amount","index","Candidates","SetStateArray","Association","theme","filtered","marginTop","QuestionsItem","changeInputValue","confirmChange","inputEnglish","inputFinnish","inputSwedish","_id","alert","refreshQuestions","borderBottom","alignItems","Questions","newQuestions","findIndex","allQuestions","get","newFilters","unique","Set","filtersData","FilterQuestions","filteredQuestions","schools","selectBox","CandidateAnswers","candidateInfo","Suggestions","hideComponent","showCandidateAnswers","suggestions","myData","concat","sort","b","similarity","candidate","process","toFixed","margin","borderTop","borderLeft","borderRight","buttonRef","createRef","AddCandidates","handleOpenDialog","current","open","handleOnFileLoad","candidates","handleOnError","inputElem","reason","handleRemoveFile","removeFile","candiates","swal","showCancelButton","confirmButtonColor","cancelButtonColor","isConfirmed","handeSubmit","onFileLoad","onError","handleOnSubmit","noClick","noDrag","config","onRemoveFile","handleOnRemoveFile","paddingLeft","paddingRight","borderWidth","borderStyle","lineHeight","paddingTop","confirmSubmit","addOneCandidate","refs","htmlFor","AddQuestion","selectBoxChanged","selectValue","ThemeContext","ThemeProvider","mode","setTheme","useEffect","ThemeToggleButton","setIcon","iconChange","Navbar","isDark","Consumer","classNames","Finland","Sweden","UK","AdminNavbar","Navigation","AddOneCandidate","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4c18367.chunk.js","sourcesContent":["import { Route, Redirect } from 'react-router-dom';\r\nimport jwt from 'jwt-decode'\r\n\r\n// Simple Auth check with out token just to stop us to navigate in any private route\r\nexport const CandidateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        // Here need to check if Token exist because is unsecure\r\n        getLoginStatus() === \"Candidate\" ||\r\n            getLoginStatus() === \"Admin\" // TODO: TOKEN\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/Login',\r\n                state: { from: props.location }\r\n            }} />\r\n    )} />\r\n)\r\n\r\n// Simple Auth check with out token just to stop us to navigate in any private route\r\nexport const AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        // Here need to check if Token exist because is unsecure\r\n        getLoginStatus() === \"Admin\" // TODO: TOKEN\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/Login',\r\n                state: { from: props.location }\r\n            }} />\r\n    )} />\r\n)\r\n\r\n// Simple Auth check with out token just to stop us to navigate in any private route\r\nexport const PublicRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        // Here need to check if Token exist because is unsecure\r\n        !getLoginStatus() // TODO: TOKEN\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/Login',\r\n                state: { from: props.location }\r\n            }} />\r\n    )} />\r\n)\r\n\r\nconst getLoginStatus = () => {\r\n    const storedToken = sessionStorage.getItem(\"token\")\r\n    const decodedToken = storedToken ? jwt(storedToken) : ''\r\n    console.log(decodedToken);\r\n    return decodedToken.status;\r\n}","const language = {\r\n    title: { fin: 'Tervetuloa käyttämään opiskelijakuntien yhteistä edustajistovaalien vaalikonetta!', eng: 'Welcome to use the student unions’ Voting Aid!', swe: 'Välkommen att använda studerandekårernas gemensamma valkompass!' },\r\n    registrationTitle: { fin: 'Rekisteröidy', eng: 'Register', swe: 'Registrering' },\r\n\tloginTitle: { fin: 'Kirjaudu sisään', eng: 'Login', swe: 'Logga in' },\r\n\thomePageDescription: { fin: 'Aloita valitsemalla valikosta oman korkeakoulusi opiskelijakunta ja löydä sinulle parhaiten sopiva ehdokas edustajistovaaleissa.', eng: 'Start by choosing your own student union in the menu, and find the best candidate for you to vote for in the Representatives Council Election.', swe: 'Börja med att välja din studerandekår i drop-down menyn och hitta den bästa kandidaten för just dig i detta val. ' },\r\n    registrationPageDescription: { fin: 'Hei ehdokas! Luo tunnus samalla sähköpostilla, johon sait rekisteröitymisohjeet.', eng: 'Hello candidate! Create an account using the same email in which you received the instructions.', swe: 'Hej kandidat! Skapa ett konto med samma e-post som du fick registreringsinstruktionerna till ' },\r\n\tloginPageDescription: { fin: 'Tämä sivu on tarkoitettu ainoastaan edustajistovaalien ehdokkaille. Kirjauduthan sisään aiemmin rekisteröimilläsi tunnuksilla.', eng: 'This page is for the candidates only. Log in using the information you have registered with.', swe: 'Denna sida är endast för kandidater i fullmäktigevalet. Logga in med de inloggningsuppgifter som du registrerade tidigare. ' },\r\n\tselectStudentAssociation: { fin: 'Valitse opiskelijakuntasi', eng: 'Choose your student union', swe: 'Välj din studerandekår' },\r\n    navigationHome: { fin: 'Koti', eng: 'Home', swe: 'Hem' },\r\n    navigationLogin: { fin: 'Kirjaudu sisään', eng: 'Login', swe: 'Inloggning' },\r\n    navigationRegister: { fin: 'Rekisteröidy', eng: 'Register', swe: ' Registrering' },\r\n    navigationLogOut: { fin: 'Kirjaudu ulos', eng: 'Logout', swe: 'Logga ut' },\r\n    navigationProfile: { fin: 'Profiili', eng: 'Profile', swe: ' Profil' },\r\n    formButton: { fin: 'Vastaa vaalikoneeseen', eng: 'Answer the Voting Aid questions', swe: 'Fyll i valkompassen' },\r\n    loginButton: { fin: 'Kirjaudu', eng: 'Login', swe: 'Logga in' },\r\n    loginHolder: { fin: 'Olet onnistuneesti kirjautunut sisään!', eng: 'You have succesfully logged in', swe: 'Inloggningen lyckades' },\r\n    mainPageLink: { fin: 'Takaisin etusivulle', eng: 'Back to main page', swe: 'Tillbaka till framsidan' },\r\n    registerButton: { fin: 'Rekisteröidy', eng: 'Register', swe: 'Registrering' },\r\n    emailPlaceHolder: { fin: 'Sähköpostiosoite', eng: 'Email', swe: 'E-postadress' },\r\n    passwordPlaceHolder: { fin: 'Salasana', eng: 'Password', swe: ' Lösenord' },\r\n    passwordConfirmationPlaceHolder: { fin: 'Salasanan varmennus', eng: 'Password confirmation', swe: ' Lösenordsverifiering' },\r\n    // missing swedish----------\r\n    registrationError: { fin: 'Et voi rekisteröityä sellaisella sähköpostiosoitteella, jota ei ole lisätty tietokantaan kandidaattina!', eng: 'You cannot register an account for email address that does not exist as a candidate!' },\r\n    passwordConfirmationError: { fin: 'Varmennetun salasanan täytyy täsmätä salasanan kanssa', eng: 'Confirmation password must match with password' },\r\n    profileButton: { fin: 'Varmista tiedot', eng: 'Submit Information' },\r\n    adminLogo: { fin: 'Ylläpitäjän paneli', eng: 'Admin Panel' },\r\n    addCandidatesCautionHolder: { fin: 'Lisätään kandidaatit, jotka eivät ole tietokannassa', eng: 'This will add all the candidates, which are not present in the database' },\r\n    fillFormButton: { fin: 'Lähetä', eng: 'Submit', swe: 'Skicka' },\r\n    continueHolder: { fin: 'Jatka', eng: 'Proceed' },\r\n    browseButton: { fin: 'Selaa', eng: 'Browse file' },\r\n    // filterCandidateLabel: { fin: 'Suodata koulun perusteella', eng: 'Filter by School' },\r\n    uploadPicture: { fin: 'Lataa profiilikuva', eng: 'Upload a profile picture' },\r\n    candidateHolder: { fin: 'Kandidaatti', eng: 'Candidate' },\r\n    successQuestionAddedHolder: { fin: 'Olet onnistuneesti lisännyt uuden kysymyksen', eng: 'You have succesfully submitted a question\"' },\r\n    wrongPasswordHolder: { fin: 'Väärä käyttäjätunnus tai salasana', eng: 'Invalid Username Or Password' },\r\n    addedCandidatesToDatabaseAlert: { fin: 'Kanditaatit onnistuneesti lisätty tietokantaan', eng: 'Candidates have been added into the database' },\r\n    addingOneCandidateToDatabaseAlert: { fin: 'Kandidaatti onnistuneesti lisätty tietokantaan', eng: 'Succesfully added user to database' },\r\n    addingOneCandidateToDatabaseErrorAlert: { fin: 'Kandidaatti tällä sähköpostiosoitteella on jo olemassa', eng: 'Email with this address already exists as a user' },\r\n    changeProfileDataAlert: { fin: 'Olet onnistuneesti päivittänyt profiilisi tiedot', eng: 'You have Succesfully updated your profile data' },\r\n    filledFormAlert: { fin: 'Olet onnistuneesti täyttänyt kyselyn', eng: 'You have succesfully filled the form' },\r\n    // -----------\r\n    oneCandidate: { fin: 'Täytä alla olevat tiedot lisätäksesi yhden kandidaatin:', eng: 'Fill in the information below to add one candidate:', swe: 'Fyll i informationen nedan för att lägga till en kandidat' },\r\n    manyCandidates: { fin: 'Voit lisätä useamman kandidaatin alla olevan linkin kautta. Vain CSV tiedostot käyvät. ', eng: 'You can add candidates by the link below. Only CSV files are acceptable.', swe: ' Du kan lägga till fler kandidater via länken nedan. Endast CSV -filer fungerar' },\r\n    addCandidates: { fin: 'Lisää monta kandidaattia', eng: 'Add Candidates', swe: 'Lägg till flera kandidater' },\r\n    addCandidate: { fin: 'Lisää yksi kandidaatti', eng: 'Add One Candidate', swe: 'Lägg till en kandidat' },\r\n    browseCandidates: { fin: 'Selaa kandidaatteja', eng: 'Browse Candidates', swe: 'Bläddra kandidater' },\r\n    addQuestion: { fin: 'Lisää kysymys', eng: 'Add Question', swe: 'Lägg till en fråga' },\r\n    browseQuestions: { fin: 'Selaa kysymyksiä', eng: 'Browse Questions', swe: 'Bläddra frågor' },\r\n    removeButton: { fin: 'Poista', eng: 'Remove', swe: 'Ta bort' },\r\n    agreeButton: { fin: 'Samaa mieltä', eng: 'Agree', swe: 'Samma åsikt' },\r\n    disagreeButton: { fin: 'Eri mieltä', eng: 'Disagree', swe: 'Annan åsikt' },\r\n    matchingCandidates: { fin: 'Saman näkemyksen omaavat kandit:', eng: 'Candidates with matching values:', swe: ' Kandidater med liknande åsikt' },\r\n    firstName: { fin: 'Etunimi:', eng: 'First name:', swe: 'Förnamn' },\r\n    surName: { fin: 'Sukunimi:', eng: 'Surname:', swe: 'Efternamn' },\r\n    school: { fin: 'Koulu:', eng: 'School:', swe: ' Högskola:' },\r\n    selectStudentAssociationList: { fin: 'Opiskelijakunta:', eng: 'Student Association:', swe: 'Studerandekår:' },\r\n    campus: { fin: 'Kampus:', eng: 'Campus:', swe: 'Campus' },\r\n    electoralDistrict: { fin: 'Vaalipiiri:', eng: 'Electoral District:', swe: 'Valcirkel:' },\r\n    electoralAlliance: { fin: 'Vaaliliitto:', eng: 'Electoral Alliance:', swe: 'Valförbund:' },\r\n    description: { fin: 'Kuvaus:', eng: 'Description:', swe: ' Beskrivning:' },\r\n    addQuestionButton: { fin: 'Lisää kysymys', eng: 'Add question' },\r\n    deleteButton: { fin: 'Poista', eng: 'Delete', swe: 'Ta bort' },\r\n    editButton: { fin: 'Muokkaa', eng: 'Edit', swe: ' Redigera' },\r\n    updateButton: { fin: 'Päivitä tiedot', eng: 'Update your information', swe: 'Uppdatera information' },\r\n    formLink: { fin: 'Linkki täytettyyn kyselyyn', eng: 'Link to your filled form', swe: 'Länk till ditt ifyllda formulär' },\r\n    studentAssociationHolder: { fin: 'Opiskelijakunta', eng: 'Student Association', swe: 'Studerandekår' },\r\n    deleteHolder: { fin: 'Poista', eng: 'Delete', swe: 'Ta bort' },\r\n    questionHolder: { fin: 'Kysymys:', eng: 'Question:', swe: ' Fråga:' },\r\n    noSimilarCandidates: { fin: 'Valitettavasti kukaan ei ollut samaa mieltä kanssasi', eng: 'Unfortunately no one related with your answers', swe: ' Tyvärr var det ingen som var av samma åsikt som dig' },\r\n}\r\n\r\nexport default language;","// export const url = 'https://votingaid.herokuapp.com/';\r\n\r\nexport const endpoint = {\r\n    addCandidates: 'addCandidates/',\r\n    addOneCandidate: 'addOneCandidate/',\r\n    filteredCandidates: 'filteredCandidates/',\r\n    candidates: 'candidates/',\r\n\r\n    questions: '/questions/',\r\n    addQuestion: 'addQuestion/',\r\n    allQuestions: 'allQuestions/',\r\n    filteredQuestions: 'filteredQuestions/',\r\n\r\n    deleteQhuahoo: 'deleteQhuahoo/',\r\n    submitQhuahoo: 'submitQhuahoo/',\r\n\r\n    fillForm: '/fillForm/',\r\n\r\n    send: '/send/',\r\n    suggested: 'suggested/',\r\n\r\n    login: 'login/',\r\n    profile: 'profile/',\r\n    editInformation: 'editInformation/',\r\n    register: 'registration',\r\n}","import jwt from \"jwt-decode\";\r\nimport React, { createContext, Component } from 'react';\r\n\r\nexport const UserContext = createContext();\r\nclass UserContextProvider extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = this.existingLogin() || {\r\n      user: 'Quest',\r\n      email: '',\r\n      school: '',\r\n      loggedIn: false,\r\n      language: 'fin',\r\n      token: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (sessionStorage.getItem('language')) {\r\n      this.setState({ language: sessionStorage.getItem('language') })\r\n    }\r\n  }\r\n\r\n  changeLanguage = (e) => {\r\n    this.setState({ language: e });\r\n    sessionStorage.setItem('language', e);\r\n  }\r\n\r\n  changeUser = (user, email, school, loggedIn, token) => {\r\n    this.setState({\r\n      user: user,\r\n      email: email,\r\n      school: school,\r\n      loggedIn: loggedIn,\r\n      token: token,\r\n    });\r\n  }\r\n\r\n  logOut = () => {\r\n    this.changeUser('Quest', '', '', false, '');\r\n    /*sessionStorage.removeItem('email');\r\n    sessionStorage.removeItem('status');*/\r\n    sessionStorage.removeItem('token');\r\n  }\r\n\r\n  checkExistingLogin = () => {\r\n    /*let email = sessionStorage.getItem('email');\r\n    let status = sessionStorage.getItem('status');*/\r\n    let storedToken = sessionStorage.getItem('token');\r\n    if (storedToken) {\r\n      let decodedToken = jwt(storedToken)\r\n      this.changeUser(decodedToken.status, decodedToken.email, decodedToken.school, true, storedToken);\r\n    }\r\n  }\r\n\r\n  existingLogin() {\r\n    let storedToken = sessionStorage.getItem('token')\r\n    if (storedToken) {\r\n      let decodedToken = jwt(storedToken)\r\n      return {\r\n        user: decodedToken.status,\r\n        email: decodedToken.email,\r\n        school: decodedToken.school,\r\n        loggedIn: true,\r\n        token: storedToken,\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <UserContext.Provider value={{\r\n        ...this.state,\r\n        changeUser: this.changeUser,\r\n        checkExistingLogin: this.checkExistingLogin,\r\n        logOut: this.logOut,\r\n        changeLanguage: this.changeLanguage,\r\n      }}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserContextProvider;","import React, { PureComponent } from \"react\";\r\n\r\nclass DefaultInput extends PureComponent {\r\n  render() {\r\n    return (\r\n      <>\r\n        <label style={{ fontSize: 16, marginBottom: 3 }}>\r\n          {this.props.label}\r\n        </label>\r\n        <input\r\n          disabled={this.props.disabled}\r\n          type={this.props.type}\r\n          name={this.props.name}\r\n          placeholder={this.props.placeholder}\r\n          defaultValue={this.props.value}\r\n          onChange={this.props.onChange}\r\n          required={this.props.required}\r\n          id={this.props.id}\r\n          ref={this.props.ref}\r\n          style={{\r\n            fontSize: 16,\r\n            padding: \"6px 4px\",\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultInput;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DefaultButton extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          type={this.props.type ? this.props.type : \"button\"}\r\n          style={{\r\n            outline: \"none\",\r\n            border: \"1px solid\",\r\n            borderColor: this.props.borderColor\r\n              ? this.props.borderColor\r\n              : \"#000000\",\r\n            backgroundColor: this.props.backgroundColor\r\n              ? this.props.backgroundColor\r\n              : \"#FFFFFF\",\r\n            color: this.props.textColor ? this.props.textColor : \"#000000\",\r\n            textTransform: \"capitalize\",\r\n            fontSize: \"15px\",\r\n            padding: \"2px 15px\",\r\n            width: \"100%\",\r\n          }}\r\n          onClick={this.props.onClick}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultButton;\r\n","\r\nexport const WHITE = \"#FFFFFF\"\r\n\r\nexport const DARK_GREEN = \"#43571A\";\r\nexport const GREEN = \"#80AE35\";\r\n\r\nexport const DARK_RED = \"#790207\";\r\nexport const RED = \"#CB0812\";","import React, { Component } from \"react\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport Swal from \"sweetalert2\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nexport const FromValueItem = (props) => {\r\n  return (\r\n    <label\r\n      onClick={() => props.handleClick(props.value)}\r\n      className=\"boxContainer\"\r\n    >\r\n      <span className={props.isActive ? \"checkActive\" : \"checkPassive\"}></span>\r\n      <span\r\n        style={{\r\n          fontSize: 14,\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {props.value}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const FormValueContainer = (props) => {\r\n  const staticValue = [-2, -1, 0, 1, 2];\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: 14,\r\n      }}\r\n    >\r\n      {staticValue.map((value, idx) => (\r\n        <FromValueItem\r\n          value={value}\r\n          isActive={props.answer === value}\r\n          question={props.answer}\r\n          idx={idx}\r\n          handleClick={(value) => props.handleClick(value, props.idx)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Form extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      answers: [],\r\n      answersDesc: [],\r\n      filledFormQuestion: [],\r\n      area: \"\",\r\n      path: this.props.location.pathname.split(\"/\")[2],\r\n      loader: true,\r\n      required: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.path);\r\n    let email = this.props.location.email;\r\n    if (this.context.loggedIn) {\r\n      {\r\n        console.log(endpoint.questions);\r\n      }\r\n      axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n        console.log(res);\r\n        this.setState({ questions: res.data });\r\n        axios.post(endpoint.fillForm, { data: email }).then((response) => {\r\n          console.log(response);\r\n          let oldQuestions = res.data;\r\n          let questionDesc = [];\r\n          let questionNumber = [];\r\n          oldQuestions.map((question, idx) => {\r\n            console.log(\"question\");\r\n            console.log(question);\r\n            console.log(\"idx\");\r\n            console.log(idx);\r\n            Object.assign(oldQuestions[idx], {\r\n              questionValue: Object.values(response.data.filledForm).filter(\r\n                (item) => isNaN(item)\r\n              )[idx],\r\n              questionNumber: Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx],\r\n            });\r\n            questionDesc.push(\r\n              Object.values(response.data.filledForm).filter((item) =>\r\n                isNaN(item)\r\n              )[idx]\r\n            );\r\n            questionNumber.push(\r\n              Object.values(response.data.filledForm).filter(\r\n                (item) => !isNaN(item)\r\n              )[idx]\r\n            );\r\n          });\r\n          this.setState({ questions: oldQuestions });\r\n          this.setState({\r\n            answersDesc: questionDesc,\r\n            answers: questionNumber,\r\n          });\r\n          this.setState({ loader: false });\r\n        });\r\n      });\r\n    } else {\r\n      {\r\n        console.log(endpoint.questions);\r\n      }\r\n      axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n        this.setState({ loader: false });\r\n        this.setState({ questions: res.data });\r\n      });\r\n    }\r\n  }\r\n\r\n  isQuest(counter) {\r\n    if (this.context.user !== \"Quest\") {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          name={counter}\r\n          placeholder=\"Explain your choice\"\r\n          style={{ marginBottom: \"41px\", width: \"50%\" }}\r\n          onChange={this.handleChange}\r\n          required={this.state.required}\r\n          // disabled={this.state.disabled}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.state.answersDesc[e.currentTarget.name] = e.currentTarget.value;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.context.user !== \"Quest\") {\r\n      axios\r\n        .post(\r\n          endpoint.send,\r\n          {\r\n            ans: this.state.answers,\r\n            desc: this.state.answersDesc,\r\n            email: this.context.email,\r\n            studentAssociation: this.context.path,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.context.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          Swal.fire({\r\n            title: res.data /*language.filledFormAlert[this.context.language]*/, //  TEXT AND ICON DEFINITION FROM SERVER ROW 308\r\n            icon: res.data.includes(\"Error\") ? \"error\" : \"success\",\r\n            confirmButtonText: language.continueHolder[this.context.language],\r\n          });\r\n        });\r\n    } else {\r\n      this.props.history.push({\r\n        pathname: \"/suggestedCandidates\",\r\n        data: {\r\n          answers: this.state.answers,\r\n          studentAssociation: this.state.path,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClick = (value, idx) => {\r\n    const oldAnswers = [...this.state.answers];\r\n    oldAnswers[idx] = parseInt(value);\r\n    this.setState({\r\n      answers: [...oldAnswers],\r\n    });\r\n    // let sum = this.state.answers.reduce((result, number) => result + number);\r\n    // console.log(sum);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        {this.state.loader ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <p style={{ textAlign: \"center\" }}>Waiting for data...</p>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.state.questions &&\r\n              React.Children.toArray(\r\n                this.state.questions.map((question, idx) => (\r\n                  <>\r\n                    <div className=\"questionSet\">\r\n                      <label style={{ fontSize: 16 }}>\r\n                        <strong>\r\n                          {language.questionHolder[this.context.language]}\r\n                        </strong>\r\n                        {\r\n                          {\r\n                            fin: question.questionFin,\r\n                            eng: question.question,\r\n                            swe: question.questionSwe,\r\n                          }[this.context.language]\r\n                        }\r\n                      </label>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          {language.disagreeButton[this.context.language]}\r\n                        </span>\r\n                        <span className=\"agg\">\r\n                          {language.agreeButton[this.context.language]}\r\n                        </span>\r\n                      </div>\r\n\r\n                      {this.state.answers && (\r\n                        <FormValueContainer\r\n                          answer={this.state.answers[idx]}\r\n                          idx={idx}\r\n                          handleClick={(value, idx) =>\r\n                            this.handleClick(value, idx)\r\n                          }\r\n                        />\r\n                      )}\r\n\r\n                      {this.context.user !== \"Quest\" && this.state.answersDesc && (\r\n                        <DefaultInput\r\n                          label=\"Explain your choice\"\r\n                          type=\"text\"\r\n                          name={idx}\r\n                          value={this.state.answersDesc[idx]}\r\n                          onChange={this.handleChange}\r\n                          // disabled={this.state.disabled}\r\n                          required={this.state.required}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                ))\r\n              )}\r\n\r\n            <DefaultButton\r\n              type=\"submit\"\r\n              borderColor={DARK_GREEN}\r\n              backgroundColor={GREEN}\r\n              textColor={WHITE}\r\n              text={language.fillFormButton[this.context.language]}\r\n            />\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\n\r\nclass Home extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      studentAssociation: \"\",\r\n      userStudentAssociation: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.context.email) {\r\n      axios\r\n        .post(endpoint.profile, { email: this.context.email })\r\n        .then((res) => {\r\n          this.setState({\r\n            userStudentAssociation: res.data.studentAssociation,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ studentAssociation: e.target.value });\r\n    // console.log(this.state.studentAssociation);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 800,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          {language.title[this.context.language]}\r\n        </h1>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          {language.homePageDescription[this.context.language]}\r\n        </p>\r\n        {/* <label htmlFor=\"campus\">\r\n          {language.selectStudentAssociation[this.context.language]}\r\n        </label> */}\r\n        <select\r\n          onChange={this.handleChange.bind(this)}\r\n          style={{ marginBottom: 5 }}\r\n        >\r\n          {this.context.loggedIn ? (\r\n            <>\r\n              <option value=\"\">\r\n                {language.selectStudentAssociation[this.context.language]}\r\n              </option>\r\n              <option value={this.state.userStudentAssociation}>\r\n                {this.state.userStudentAssociation}\r\n              </option>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <option value=\"\">\r\n                {language.selectStudentAssociation[this.context.language]}\r\n              </option>\r\n              <option value=\"ASK\">ASK</option>\r\n              <option value=\"Helga\">Helga</option>\r\n              <option value=\"HUMAKO\">HUMAKO</option>\r\n              <option value=\"JAMKO\">JAMKO</option>\r\n              <option value=\"Laureamko\">Laureamko</option>\r\n              <option value=\"METKA\">METKA</option>\r\n              <option value=\"O'Diako\">O'Diako</option>\r\n              <option value=\"TUO\">TUO</option>\r\n            </>\r\n          )}\r\n        </select>\r\n\r\n        {this.state.studentAssociation != \"-\" && (\r\n          <Link\r\n            className=\"Form-button\"\r\n            to={{\r\n              pathname: \"/Form/\" + this.state.studentAssociation,\r\n              studentAssociation: this.state.studentAssociation,\r\n              email: this.context.email,\r\n            }}\r\n          >\r\n            {language.formButton[this.context.language]}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nclass Registration extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      registrationErrors: \"\",\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password_confirmation: this.state.password_confirmation,\r\n      status: \"Candidate\",\r\n    };\r\n    if (this.state.password == this.state.password_confirmation) {\r\n      axios.post(endpoint.register, user).then((res) => {\r\n        console.log(user.email);\r\n        console.log(res.data);\r\n        Swal.fire({\r\n          text: res.data.includes(\"address\")\r\n            ? language.registrationError[this.context.language]\r\n            : \"success\",\r\n          icon: res.data.includes(\"address\") ? \"error\" : \"success\",\r\n        });\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"ERROR\",\r\n        text: language.passwordConfirmationError[this.context.language],\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 800,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n\t\t<h1 style={{ textAlign: \"center\" }}>\r\n          {language.registrationTitle[this.context.language]}\r\n        </h1>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          {language.registrationPageDescription[this.context.language]}\r\n        </p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <DefaultInput\r\n            label={language.emailPlaceHolder[this.context.language]}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={language.passwordPlaceHolder[this.context.language]}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={\r\n              language.passwordConfirmationPlaceHolder[this.context.language]\r\n            }\r\n            type=\"password\"\r\n            name=\"password_confirmation\"\r\n            value={this.state.password_confirmation}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultButton\r\n            type=\"submit\"\r\n            text={language.registerButton[this.context.language]}\r\n            borderColor={DARK_GREEN}\r\n            backgroundColor={GREEN}\r\n            textColor={WHITE}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {language.mainPageLink[this.context.language]}{\" \"}\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    axios.post(endpoint.login, user).then((res) => {\r\n      console.log(res);\r\n      if (res) {\r\n        const { changeUser } = this.context;\r\n        changeUser(\r\n          res.data.tokenUser.status,\r\n          res.data.tokenUser.email,\r\n          res.data.tokenUser.school,\r\n          true,\r\n          res.data.token\r\n        );\r\n        if (!this.context.user || !this.context.email) {\r\n          changeUser(\"Quest\", \"\", \"\", false, this.context.language);\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"ERROR\",\r\n            text: language.wrongPasswordHolder[this.context.language],\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: language.loginHolder[this.context.language],\r\n            icon: \"success\",\r\n            confirmButtonText: \"Confirm\",\r\n          });\r\n          /*sessionStorage.setItem(\"email\", this.context.email);\r\n          sessionStorage.setItem(\"status\", this.context.user);*/\r\n          sessionStorage.setItem(\"language\", this.context.language);\r\n          sessionStorage.setItem(\"token\", this.context.token);\r\n          this.props.history.push({\r\n            pathname: \"/\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  static contextType = UserContext;\r\n\r\n  render() {\r\n    const { changeUser } = this.context;\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 800,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n\t\t<h1 style={{ textAlign: \"center\" }}>\r\n          {language.loginTitle[this.context.language]}\r\n        </h1>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          {language.loginPageDescription[this.context.language]}\r\n        </p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <DefaultInput\r\n            label={language.emailPlaceHolder[this.context.language]}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultInput\r\n            label={language.passwordPlaceHolder[this.context.language]}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <DefaultButton\r\n            type=\"submit\"\r\n            text={language.loginButton[this.context.language]}\r\n            borderColor={DARK_GREEN}\r\n            backgroundColor={GREEN}\r\n            textColor={WHITE}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {language.mainPageLink[this.context.language]}{\" \"}\r\n          </Link>{\" \"}\r\n          <br></br>\r\n          <br></br>\r\n          {/* <p className=\"forgot-password text-right\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/newPassword\"\r\n              }}> Unohditko salasanan? </Link></p> */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","export const Picture = ({ source, alt, className, style }) => {\r\n    return <img src={source} alt={alt} className={className ? className : ''} style={style} />\r\n}\r\nexport default Picture;","import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst Upload = ({ email, onUpload, profile }) => {\r\n    const [fileInputState, setFileInputState] = useState('')\r\n    const [selectedFile, setSelectedFile] = useState('')\r\n    const [previewSource, setPreviewSource] = useState('')\r\n    // const [name, setName] = useState('')\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        const fileName = e.target.files[0];\r\n        previewFile(file)\r\n        setSelectedFile(file.name)\r\n        // setName(file.name)\r\n    }\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        // shows the picture you are uploading, not necessary\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            // setPreviewSource(reader.result)\r\n            uploadImage(reader.result, file.name);\r\n            // console.log(file)\r\n            // console.log(previewSource)\r\n            // console.log(selectedFile)\r\n        }\r\n    }\r\n    // const handleSubmitFile = () => {\r\n    //     // e.preventDefault();\r\n    //     if (!previewSource) return;\r\n    //     uploadImage(previewSource, selectedFile);\r\n    // }\r\n    let dataResp;\r\n    const uploadImage = async (base64EncodedImage, fileName) => {\r\n        console.log(email)\r\n        try {\r\n            await axios.post('/api/uploadImage', { data: base64EncodedImage, email, fileName }\r\n                // body: JSON.stringify({ data: base64EncodedImage, email, fileName }),\r\n                // headers: { 'Content-type': 'application/json' },\r\n            ).then(resp => {\r\n                dataResp = resp.data;\r\n                console.log(resp)\r\n            })\r\n            onUpload(dataResp)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input type=\"file\" name=\"image\" onChange={handleFileInputChange} value={fileInputState} className=\"form-input\" />\r\n                {/* <button className=\"form-input\" type=\"submit\">Submit</button> */}\r\n            </form>\r\n            {/* {previewSource && (\r\n                <img src={previewSource} alt=\"chosen\" style={{ height: '300px' }} />\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload\r\n","import React, { Component } from \"react\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Picture from \"../../components/partials/picture\";\r\nimport Upload from \"../../components/upload\";\r\nimport Swal from \"sweetalert2\";\r\nimport language from \"../../properties/language\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\n\r\nclass Profile extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profile: {},\r\n      filename: null,\r\n    };\r\n  }\r\n\r\n  fetchData = async () => {\r\n    let email = this.context.email;\r\n    if (this.props.location.data != null) {\r\n      email = this.props.location.data;\r\n    }\r\n    await axios\r\n      .post(endpoint.profile, { email: email })\r\n      .then((res) => {\r\n        this.setState({ profile: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  updatePicture = () => {\r\n    // console.log(data);\r\n    // this.setState((state) => ({\r\n    //   ...state,\r\n    //   profile: {\r\n    //     ...state.profile,\r\n    //     image: data,\r\n    //   },\r\n    // }));\r\n    this.fetchData();\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  submitData = async () => {\r\n    console.log(\"state\");\r\n    console.log(this.state.profile);\r\n    await axios\r\n      .post(endpoint.editInformation, { data: this.state.profile })\r\n      .then((res) => {\r\n        Swal.fire({\r\n          title: language.changeProfileDataAlert[this.context.language],\r\n          icon: \"success\",\r\n        });\r\n        this.setState({ profile: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //componentDidUpdate = () => {\r\n  onChange = (e) => {\r\n    let target = e.target;\r\n    this.setState((prevState) => {\r\n      let profile = { ...prevState.profile };\r\n      profile[target.id] = target.value;\r\n      console.log(profile);\r\n      return { profile };\r\n    });\r\n  };\r\n  // };\r\n\r\n  render() {\r\n    const { profile } = this.state;\r\n    //console.log(profile);\r\n    if (!profile) {\r\n      return null;\r\n    }\r\n    let information = [\r\n      {\r\n        value: profile.name,\r\n        key: this.state.profile.name,\r\n        id: \"name\",\r\n        placeholder: language.firstName[this.context.language],\r\n      },\r\n      {\r\n        value: profile.surname,\r\n        id: \"surname\",\r\n        placeholder: language.surName[this.context.language],\r\n      },\r\n      {\r\n        value: profile.school,\r\n        id: \"school\",\r\n        placeholder: language.school[this.context.language],\r\n      },\r\n      {\r\n        value: profile.studentAssociation,\r\n        id: \"studentAssociation\",\r\n        placeholder:\r\n          language.selectStudentAssociationList[this.context.language],\r\n      },\r\n      {\r\n        value: profile.description,\r\n        id: \"description\",\r\n        placeholder: language.description[this.context.language],\r\n      },\r\n      {\r\n        value: profile.campus,\r\n        id: \"campus\",\r\n        placeholder: language.campus[this.context.language],\r\n      },\r\n    ];\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <form onSubmit={this.submitData}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            {profile.image && (\r\n              <div\r\n                style={{\r\n                  width: 100,\r\n                  height: 120,\r\n                  objectFit: \"contain\",\r\n                  overflow: \"hidden\",\r\n                  borderRadius: \"50%\",\r\n                }}\r\n              >\r\n                <Picture source={profile.image} style={{ width: \"100%\" }} />\r\n              </div>\r\n            )}\r\n          </div>\r\n          {information &&\r\n            React.Children.toArray(\r\n              information.map((info) => (\r\n                <div>\r\n                  <DefaultInput\r\n                    label={info.placeholder}\r\n                    type=\"text\"\r\n                    name=\"password\"\r\n                    value={info.value}\r\n                    onChange={this.onChange}\r\n                    className=\"profileInput\"\r\n                    id={info.id}\r\n                    required\r\n                  />\r\n                </div>\r\n              ))\r\n            )}\r\n          {/* <FileUpload\r\n            email={profile.email}\r\n            onUpload={this.updatePicture}\r\n          ></FileUpload> */}\r\n          <Upload\r\n            email={profile.email}\r\n            onUpload={this.updatePicture}\r\n            profile={this.state.profile}\r\n          ></Upload>\r\n          <DefaultButton\r\n            type=\"submit\"\r\n            borderColor={DARK_GREEN}\r\n            backgroundColor={GREEN}\r\n            textColor={WHITE}\r\n            text={language.updateButton[this.context.language]}\r\n          />\r\n          <hr />\r\n          <Link\r\n            to={{\r\n              pathname: \"/Form/\" + profile.studentAssociation,\r\n              email: profile.email,\r\n            }}\r\n          >\r\n            {language.formLink[this.context.language]}\r\n          </Link>\r\n          <br />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import Axios from 'axios';\r\nimport { endpoint } from '../api';\r\n\r\nconst FilterCandidateTable = (setStateArray, filter) => {\r\n    Axios.post(endpoint.filteredCandidates, { data: filter })\r\n        .then(res => {\r\n            console.log(res)\r\n            let q = [];\r\n            for (var i = 0; i < res.data.length; i++) {\r\n                setStateArray(['Candidate' + i], res.data[i])\r\n                q.push(res.data[i].name);\r\n                setStateArray('amount', q);\r\n            }\r\n        })\r\n}\r\n\r\n// const SetCandidateTable = (setStateArray) => {\r\n//     Axios.get(endpoint)\r\n//         .then(res => {\r\n//             let q = [];\r\n//             let s = [];\r\n//             for (var i = 0; i < res.data.length; i++) {\r\n//                 setStateArray(['Candidate' + i], res.data[i])\r\n//                 q.push(res.data[i].name);\r\n//                 setStateArray('amount', q);\r\n//                 s.push(res.data[i].studentAssociation);\r\n\r\n//             }\r\n//             const uniqueAssociations = Array.from(new Set(s));\r\n//             setStateArray('Association', uniqueAssociations);\r\n//         });\r\n// }\r\n\r\nexport {\r\n    // SetCandidateTable,\r\n    FilterCandidateTable,\r\n};","const QuestionAreaList = {\r\n    universal: 'Select filter',\r\n    ask: 'ASK',\r\n    helga: 'Helga',\r\n    humako: 'HUMAKO',\r\n    jamko: 'JAMKO',\r\n    laureamko: 'Laureamko',\r\n    metka: 'METKA',\r\n    odiako: \"O'Diako\",\r\n    tuo: 'TUO',\r\n};\r\n\r\nconst StudentAssociations = Object.assign({}, QuestionAreaList);\r\ndelete StudentAssociations.universal;\r\n\r\n\r\n\r\nexport {\r\n    QuestionAreaList,\r\n    StudentAssociations,\r\n}","const StudentAssociationOption = ({ value, text }) => {\r\n    return <option value={value}>{text}</option>\r\n}\r\n\r\n\r\nexport default StudentAssociationOption;","import { Link } from 'react-router-dom'\r\n\r\nconst CandidateTableLinkItem = ({ pathname, data, textOne, textTwo }) => {\r\n    return (\r\n        <td style={{ cursor: \"pointer\" }}>\r\n            <Link to={{ pathname: pathname, data: data }}>\r\n                {textOne + ' ' + textTwo}\r\n            </Link>\r\n        </td>\r\n    );\r\n}\r\n\r\nexport default CandidateTableLinkItem;","const CandidateTableItem = ({ text }) => {\r\n    return (\r\n        <td>{text}</td>\r\n    );\r\n}\r\n\r\nexport default CandidateTableItem;","import CandidateTableLinkItem from './candidateTableLinkItem'\r\nimport CandidateTableItem from './candidateTableItem'\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport React, { useContext } from 'react';\r\n\r\n\r\nconst CandidateTableItemRow = ({ text, textOne, textTwo, data, candidateDeleted, button }) => {\r\n    const context = useContext(UserContext);\r\n\r\n    const confirmDelete = (email) => {\r\n        // console.log(data)\r\n\r\n        const callback = () => candidateDeleted(data)\r\n\r\n        axios\r\n            .post('/deleteCandidate', { deleteCandidateByEmail: email })\r\n            .then(callback, callback);\r\n    }\r\n\r\n    return (\r\n        <tr id=\"candidate\" >\r\n            <CandidateTableLinkItem textOne={textOne} textTwo={textTwo} pathname={'/Profile'} data={data} />\r\n            <CandidateTableItem text={text} />\r\n            <td>\r\n                <button style={{\r\n                    backgroundColor: \"rgb(203, 8, 18)\",\r\n                    color: \"white\",\r\n                }} onClick={() => confirmDelete(data)}>{language.deleteHolder[context.language]}</button>\r\n            </td>\r\n        </tr >\r\n    );\r\n}\r\n\r\n\r\nexport default CandidateTableItemRow;","const CandidateTableHeader = ({ header }) => {\r\n    return <th>{header}</th>\r\n}\r\n\r\nexport default CandidateTableHeader;","import CandidateTableItemRow from './candidateTableRow'\r\nimport CandidateTableHeader from './candidateTableHeader'\r\nimport Table from 'react-bootstrap/Table';\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport React, { useContext } from 'react';\r\n\r\nconst CandidateTable = ({ stateArray, counter, candidateDeleted }) => {\r\n    console.log(stateArray)\r\n    const context = useContext(UserContext);\r\n    return (\r\n        <Table striped bordered hover variant=\"light\">\r\n            <thead>\r\n                <tr>\r\n                    <CandidateTableHeader header={language.candidateHolder[context.language]} />\r\n                    <CandidateTableHeader header={language.studentAssociationHolder[context.language]} />\r\n                    <CandidateTableHeader header={language.deleteHolder[context.language]} />\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {stateArray.amount.map(index => {\r\n                    counter++;\r\n                    return (\r\n                        <CandidateTableItemRow key={index} id=\"candidate\"\r\n                            candidateDeleted={candidateDeleted}\r\n                            text={stateArray['Candidate' + counter].studentAssociation}\r\n                            textOne={stateArray['Candidate' + counter].name}\r\n                            textTwo={stateArray['Candidate' + counter].surname}\r\n                            data={stateArray['Candidate' + counter].email}\r\n                        />\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default CandidateTable;","import React, { Component } from 'react';\r\nimport { SetCandidateTable, FilterCandidateTable } from '../../functions/dbCalls';\r\nimport { QuestionAreaList } from '../../components/partials/selectMenuLists'\r\nimport SelectMenu from '../../components/partials/selectMenu.js';\r\nimport CandidateTable from '../../components/partials/candidateTable';\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from '../../context/userContext';\r\n\r\nclass Candidates extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: [],\r\n      Association: [],\r\n      theme: this.props.theme,\r\n      filtered: false,\r\n    }\r\n  }\r\n\r\n  SetStateArray = (stateArray, value) => {\r\n    console.log(value)\r\n    console.log(stateArray)\r\n    this.setState({ [stateArray]: value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    FilterCandidateTable(this.SetStateArray, this.context.school);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: '50%', marginLeft: '25%', marginTop: '5%' }}>\r\n        {/* <label htmlFor=\"school\" className=\"filterCandidateLabel\"\r\n          style={{\r\n            backgroundColor: 'rgba(255, 255, 255, 0.829)', width: '50%', marginTop: '5%',\r\n            marginLeft: '18%'\r\n          }}\r\n        >{language.filterCandidateLabel[this.context.language]}</label>\r\n        <SelectMenu\r\n          className={'studentAssociationList'}\r\n          selectMenuList={QuestionAreaList}\r\n          action={this.handleChange.bind(this)}\r\n        />\r\n        {console.log(this.state.amount)} */}\r\n        <CandidateTable\r\n          stateArray={this.state} counter={-1}\r\n          candidateDeleted={() => {\r\n            console.log('Got event')\r\n            FilterCandidateTable(this.SetStateArray, this.context.school);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Candidates;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  DARK_GREEN,\r\n  DARK_RED,\r\n  GREEN,\r\n  RED,\r\n  WHITE,\r\n} from \"../../helpers/constants\";\r\nimport DefaultButton from \"../defaultButton\";\r\nimport DefaultInput from \"../defaultInput\";\r\nimport { endpoint } from \"../../api\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\nclass QuestionsItem extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputFinnish: \"\",\r\n      inputEnglish: \"\",\r\n      inputSwedish: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      inputFinnish: this.props.question.questionFin,\r\n      inputEnglish: this.props.question.question,\r\n      inputSwedish: this.props.question.questionSwe,\r\n    });\r\n  }\r\n\r\n  changeInputValue = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  confirmChange = (e) => {\r\n    e.preventDefault();\r\n    var data = {\r\n      question: this.state.inputEnglish,\r\n      questionFin: this.state.inputFinnish,\r\n      questionSwe: this.state.inputSwedish,\r\n      id: this.props.question._id,\r\n    };\r\n\r\n    axios\r\n      .post(endpoint.submitQhuahoo, { data })\r\n      .then((res) => {\r\n        alert(\"We've changed you\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  confirmDelete = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(endpoint.deleteQhuahoo, { id: this.props.question._id })\r\n      .then((res) => {\r\n        alert(\"is removed\");\r\n        console.log(res);\r\n        this.props.refreshQuestions();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { idx, question } = this.props;\r\n    return (\r\n      <div\r\n        key={idx}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          borderBottom: \"1px solid #999999\",\r\n          padding: \"20px 0\",\r\n        }}\r\n      >\r\n        <DefaultInput\r\n          label=\"Kysymys suomeksi\"\r\n          type=\"text\"\r\n          name=\"inputFinnish\"\r\n          value={this.state.inputFinnish}\r\n          onChange={this.changeInputValue}\r\n        />\r\n\r\n        <DefaultInput\r\n          label=\"Question in English\"\r\n          type=\"text\"\r\n          name=\"inputEnglish\"\r\n          value={this.state.inputEnglish}\r\n          onChange={this.changeInputValue}\r\n        />\r\n\r\n        <DefaultInput\r\n          label=\"Frågan på svenska\"\r\n          type=\"text\"\r\n          name=\"inputSwedish\"\r\n          value={this.state.inputSwedish}\r\n          onChange={this.changeInputValue}\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <b style={{ fontSize: 16 }}>\r\n            {\" \"}\r\n            {language.school[this.context.language]} {question.area}\r\n          </b>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ marginRight: 10 }}>\r\n              <DefaultButton\r\n                borderColor={DARK_GREEN}\r\n                backgroundColor={GREEN}\r\n                textColor={WHITE}\r\n                onClick={this.confirmChange}\r\n                text={language.editButton[this.context.language]}\r\n              />\r\n            </div>\r\n            <div>\r\n              <DefaultButton\r\n                borderColor={DARK_RED}\r\n                backgroundColor={RED}\r\n                textColor={WHITE}\r\n                onClick={this.confirmDelete}\r\n                text={language.deleteButton[this.context.language]}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionsItem;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\nimport QuestionsItem from \"../../components/questionItem\";\r\nimport { endpoint } from \"../../api\";\r\n\r\nclass Questions extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      filteredQuestions: [],\r\n      schools: [],\r\n      filtersData: [],\r\n      selectBox: \"allQuestion\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.allQuestions();\r\n    console.log(this.context.school);\r\n    this.FilterQuestions(this.context.school);\r\n  }\r\n\r\n  changeInputValue = (e, idx) => {\r\n    let newQuestions = [...this.state.questions];\r\n    let question = newQuestions.findIndex((q) => q._id === idx);\r\n    //newQuestions[question].question = e.target.value;\r\n    newQuestions[question].question = e.target.value;\r\n    this.setState({ questions: [...newQuestions] });\r\n  };\r\n\r\n  allQuestions = () => {\r\n    console.log(\"inside\");\r\n    this.setState({ questions: [] });\r\n    axios.get(endpoint.allQuestions).then((res) => {\r\n      console.log(res.data);\r\n      this.setState({ questions: res.data });\r\n      let newFilters = [];\r\n      res.data.map((filter) => newFilters.push(filter.area));\r\n      let unique = [...new Set(newFilters)];\r\n      this.setState({ filtersData: [...unique] });\r\n    });\r\n  };\r\n\r\n  FilterQuestions = (filter) => {\r\n    console.log(filter);\r\n    this.setState({ questions: [] });\r\n    axios.post(endpoint.filteredQuestions, { data: filter }).then((res) => {\r\n      this.setState({ filteredQuestions: res.data });\r\n    });\r\n  };\r\n\r\n  // handleChange = (e) => {\r\n  //   if (e.target.value !== \"Select filter\") {\r\n  //     console.log(\"not select filter\");\r\n  //     this.FilterQuestions(e.target.value);\r\n  //     this.setState({ selectBox: e.target.value });\r\n  //   } else {\r\n  //     console.log(\"select filter\");\r\n  //     this.allQuestions();\r\n  //     this.setState({ selectBox: \"allQuestion\" });\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginTop: 20,\r\n            backgroundColor: \"rgba(255, 255, 255, 0.829)\",\r\n          }}\r\n        >\r\n          {/* <span className=\"filterCandidateLabel\">\r\n            {language.filterCandidateLabel[this.context.language]}\r\n          </span> */}\r\n          {/* <select className=\"questionsSelectBox\" onChange={this.handleChange}>\r\n            <option value=\"Select filter\">Select filter</option>\r\n            {this.state.filtersData &&\r\n              React.Children.toArray(\r\n                this.state.filtersData.map((filter) => (\r\n                  <option value={filter}>{filter}</option>\r\n                ))\r\n              )}\r\n          </select> */}\r\n        </div>\r\n\r\n        <form>\r\n          <div className=\"formQuestions\">\r\n            {this.state.questions &&\r\n              React.Children.toArray(\r\n                this.state.filteredQuestions.map((question) => (\r\n                  <QuestionsItem\r\n                    question={question}\r\n                    refreshQuestions={() => {\r\n                      //   this.state.selectBox === \"allQuestion\"\r\n                      //     ? this.allQuestions()\r\n                      //     : this.FilterQuestions(this.state.selectBox);\r\n                      this.FilterQuestions(this.context.school);\r\n                    }}\r\n                  />\r\n                ))\r\n              )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from \"react\";\r\nimport language from \"../../properties/language\";\r\nimport axios from \"axios\";\r\nimport { endpoint } from \"../../api\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\n\r\nexport const FromValueItem = (props) => {\r\n  /* console.log('formvalueitem')\r\nconsole.log(props)*/\r\n  return (\r\n    <label className=\"boxContainer\">\r\n      <span className={props.isActive ? \"checkActive\" : \"checkPassive\"}></span>\r\n      <span\r\n        style={{\r\n          fontSize: 14,\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {props.value}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const FormValueContainer = (props) => {\r\n  /*console.log('formvaluecontainer')\r\nconsole.log(props)*/\r\n  const staticValue = [-2, -1, 0, 1, 2];\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: 14,\r\n      }}\r\n    >\r\n      {staticValue.map((value, idx) => (\r\n        <FromValueItem\r\n          value={value}\r\n          isActive={props.answer === value}\r\n          question={props.answer}\r\n          idx={idx}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport class CandidateAnswers extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      answers: [],\r\n      answersDesc: [],\r\n      filledFormQuestion: [],\r\n      area: \"\",\r\n      path: this.props.candidateInfo.studentAssociation,\r\n      loader: true,\r\n      disabled: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var email = this.props.candidateInfo.email;\r\n      console.log(this.state.path)\r\n    axios.post(endpoint.questions, { data: this.state.path }).then((res) => {\r\n      this.setState({ questions: res.data });\r\n      axios.post(endpoint.fillForm, { data: email }).then((response) => {\r\n        console.log(response);\r\n        let oldQuestions = res.data;\r\n        let questionDesc = [];\r\n        let questionNumber = [];\r\n        oldQuestions.map((question, idx) => {\r\n          Object.assign(oldQuestions[idx], {\r\n            questionValue: Object.values(response.data.filledForm).filter(\r\n              (item) => isNaN(item)\r\n            )[idx],\r\n            questionNumber: Object.values(response.data.filledForm).filter(\r\n              (item) => !isNaN(item)\r\n            )[idx],\r\n          });\r\n          questionDesc.push(\r\n            Object.values(response.data.filledForm).filter((item) =>\r\n              isNaN(item)\r\n            )[idx]\r\n          );\r\n          questionNumber.push(\r\n            Object.values(response.data.filledForm).filter(\r\n              (item) => !isNaN(item)\r\n            )[idx]\r\n          );\r\n        });\r\n        this.setState({ questions: oldQuestions });\r\n        this.setState({\r\n          answersDesc: questionDesc,\r\n          answers: questionNumber,\r\n        });\r\n        this.setState({ loader: false });\r\n      });\r\n    });\r\n  }\r\n\r\n  isQuest(counter) {\r\n    if (this.context.user !== \"Quest\") {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          name={counter}\r\n          placeholder=\"Explain your choice\"\r\n          style={{ marginBottom: \"41px\", width: \"50%\" }}\r\n          disabled={this.state.disabled}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"homeScreen\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        {this.state.loader ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <p style={{ textAlign: \"center\" }}>Waiting for data...</p>\r\n          </div>\r\n        ) : (\r\n          this.state.questions &&\r\n          React.Children.toArray(\r\n            this.state.questions.map((question, idx) => (\r\n              <>\r\n                <div className=\"questionSet\">\r\n                  <label style={{ fontSize: 16 }}>\r\n                    <strong>\r\n                      {language.questionHolder[this.context.language]}\r\n                    </strong>\r\n                    {this.context.language === \"fin\"\r\n                      ? question.questionFin\r\n                      : question.question}\r\n                  </label>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      fontSize: 14,\r\n                    }}\r\n                  >\r\n                    <span>\r\n                      {language.disagreeButton[this.context.language]}\r\n                    </span>\r\n                    <span className=\"agg\">\r\n                      {language.agreeButton[this.context.language]}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {this.state.answers && (\r\n                    <FormValueContainer\r\n                      answer={this.state.answers[idx]}\r\n                      idx={idx}\r\n                    />\r\n                  )}\r\n\r\n                  {this.state.answersDesc && (\r\n                    <DefaultInput\r\n                      label=\"Explain your choice\"\r\n                      type=\"text\"\r\n                      name={idx}\r\n                      value={this.state.answersDesc[idx]}\r\n                      disabled={this.state.disabled}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </>\r\n            ))\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CandidateAnswers;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Picture from \"../../components/partials/picture\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { endpoint } from \"../../api\";\r\nimport CandidateAnswers from \"../candidateAnswers\";\r\n\r\nclass Suggestions extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      suggestions: [],\r\n      showCandidateAnswers: -1,\r\n    };\r\n  }\r\n\r\n  hideComponent = (name, e) => {\r\n    console.log(e.target.id);\r\n    console.log(this.state.showCandidateAnswers);\r\n    switch (name) {\r\n      case \"showCandidateAnswers\":\r\n        if(this.state.showCandidateAnswers !== -1) {\r\n          this.setState({showCandidateAnswers: -1});\r\n        }\r\n        else{\r\n          this.setState({showCandidateAnswers: e.target.id});\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    var data = {\r\n      answers: this.props.location.data.answers,\r\n      studentAssociation: this.props.location.data.studentAssociation,\r\n    };\r\n    axios.post(endpoint.suggested, { data: data }).then((res) => {\r\n      this.setState({ suggestions: res.data });\r\n      console.log(\"suggested answers\");\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { showCandidateAnswers } = this.state;\r\n    const myData = [].concat(this.state.suggestions);\r\n    if (this.state.suggestions.length > 0) {\r\n      return (\r\n        <div\r\n          className=\"candidateSuggestions\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              display: \"inline-block\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {language.matchingCandidates[this.context.language]}\r\n          </h1>\r\n          {myData\r\n            .sort((a, b) => (a.similarity < b.similarity ? 1 : -1))\r\n            .map((candidate, index) => {\r\n              return (\r\n                /*console.log(this.state.suggestions),*/\r\n                <div>\r\n                  <div className=\"candidateSuggestionCenter\">\r\n                    <h2\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {\r\n                        <Picture\r\n                          className=\"pic\"\r\n                          source={process.env.PUBLIC_URL + candidate.image}\r\n                        ></Picture>\r\n                      }{\" \"}\r\n                      {candidate.name} {candidate.surname}{\" \"}\r\n                      {candidate.similarity.toFixed() + \"%\"}\r\n                    </h2>{\" \"}\r\n                  </div>\r\n                  {showCandidateAnswers == index && (\r\n                    <CandidateAnswers candidateInfo={candidate} />\r\n                  )}\r\n                  <button\r\n                    style={{\r\n                      margin: \"0 auto\",\r\n                      display: \"block\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                      /*paddingLeft: '10px',\r\n  paddingRight: '10px',*/\r\n                      backgroundColor: \"transparent\",\r\n                      width: \"auto\",\r\n                      borderTop: \"none\",\r\n                      borderLeft: \"none\",\r\n                      borderRight: \"none\",\r\n                      fontSize: \"20px\",\r\n                    }}\r\n                    id={index}\r\n                    onClick={(e) =>\r\n                      this.hideComponent(\"showCandidateAnswers\", e)\r\n                    }\r\n                  >\r\n                    {showCandidateAnswers === -1 ? \"Show more\" : \"Show less\"}\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <h2\r\n          className=\"candidateSuggestions\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Unfortunately no one related with your answers{\" \"}\r\n        </h2>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Suggestions;\r\n","import React, { Component } from 'react'\r\nimport axios from \"axios\"\r\nimport swal from \"sweetalert2\"\r\nimport { CSVReader } from 'react-papaparse'\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport language from \"../../properties/language\";\r\nimport { endpoint } from '../../api';\r\n\r\nconst buttonRef = React.createRef()\r\nclass AddCandidates extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filename: null,\r\n      candidates: [],\r\n    }\r\n  }\r\n  handleOpenDialog = (e) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      buttonRef.current.open(e)\r\n    }\r\n  }\r\n\r\n  handleOnFileLoad = (data, file) => {\r\n    this.setState({ filename: file.name })\r\n    if (file.name.includes('.csv')) {\r\n      this.setState({ candidates: null }); //Reset the state\r\n      this.setState({ candidates: data });\r\n    }\r\n    else {\r\n      console.log('NOT CSV');\r\n    }\r\n  }\r\n\r\n  handleOnError = (err, file, inputElem, reason) => {\r\n    console.log(err)\r\n  }\r\n\r\n  handleRemoveFile = (e) => {\r\n    // Note that the ref is set async, so it might be null at some point\r\n    if (buttonRef.current) {\r\n      buttonRef.current.removeFile(e)\r\n      this.setState({ candidates: null })\r\n      console.log(this.state.candiates);\r\n    }\r\n  }\r\n\r\n  confirmSubmit() {\r\n    swal.fire({\r\n      title: 'Caution!',\r\n      text: language.addCandidatesCautionHolder[this.context.language],\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: language.continueHolder[this.context.language]\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.handeSubmit();\r\n        swal.fire(\r\n          language.addedCandidatesToDatabaseAlert[this.context.language]\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  handeSubmit() {\r\n    if (this.state.filename.includes('.csv')) {\r\n      axios.post(endpoint.addCandidates, { candidate: this.state.candidates })\r\n        .then(res => {\r\n          console.log('YEET');\r\n        });\r\n    }\r\n    else {\r\n      alert('Cant upload a file that is not a CSV one');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"addCan\"\r\n        style={{\r\n          marginTop: 20,\r\n          maxWidth: 500,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          backgroundColor: \"#FFFFFF\",\r\n          padding: 15,\r\n        }}\r\n      >\r\n        <p> {language.manyCandidates[this.context.language]}</p>\r\n        <CSVReader\r\n          ref={buttonRef}\r\n          onFileLoad={this.handleOnFileLoad}\r\n          onError={this.handleOnError}\r\n          onSubmit={this.handleOnSubmit}\r\n          noClick\r\n          noDrag\r\n          config={{ header: true }}\r\n          onRemoveFile={this.handleOnRemoveFile}\r\n        >\r\n          {({ file }) => (\r\n            <aside\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                marginBottom: 10\r\n              }}\r\n            >\r\n              <button\r\n                type='button'\r\n                onClick={this.handleOpenDialog}\r\n                style={{\r\n                  borderRadius: 0,\r\n                  marginLeft: 0,\r\n                  marginRight: 0,\r\n                  width: '30%',\r\n                  paddingLeft: 0,\r\n                  paddingRight: 0,\r\n                }}\r\n              >\r\n                {language.browseButton[this.context.language]}\r\n              </button>\r\n              <div\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderStyle: 'solid',\r\n                  borderColor: '#ccc',\r\n                  height: 45,\r\n                  lineHeight: 2.5,\r\n                  marginTop: 5,\r\n                  marginBottom: 5,\r\n                  paddingLeft: 13,\r\n                  paddingTop: 3,\r\n                  width: '60%'\r\n                }}\r\n              >\r\n                {file && file.name}\r\n              </div>\r\n              <button\r\n                style={{\r\n                  borderRadius: 0,\r\n                  marginLeft: 0,\r\n                  marginRight: 0,\r\n                  paddingLeft: 20,\r\n                  paddingRight: 20,\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                }}\r\n                onClick={this.handleRemoveFile}\r\n              >\r\n                {language.removeButton[this.context.language]}\r\n              </button>\r\n            </aside>\r\n          )}\r\n        </CSVReader>\r\n        <button onClick={this.confirmSubmit.bind(this)}\r\n          style={{\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >{language.fillFormButton[this.context.language]}</button>\r\n      </div >\r\n    )\r\n  }\r\n}\r\nexport default AddCandidates;","import React, { Component } from 'react'\r\nimport Swal from 'sweetalert2';\r\nimport axios from \"axios\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from '../../context/userContext';\r\nimport { endpoint } from '../../api';\r\n\r\nexport class addOneCandidate extends Component {\r\n    static contextType = UserContext;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            surname: '',\r\n            email: '',\r\n            school: '',\r\n            studentAssociation: '',\r\n            campus: '',\r\n            electoralDistrict: '',\r\n            electoralAlliance: '',\r\n            description: '',\r\n        };\r\n    }\r\n\r\n    handleChange() {\r\n        this.setState({ studentAssociation: this.refs.campus.value });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n        this.setState({ studentAssociation: this.refs.campus.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const oneCandidate = {\r\n            name: this.state.name,\r\n            surname: this.state.surname,\r\n            email: this.state.email,\r\n            school: this.state.school,\r\n            studentAssociation: this.state.studentAssociation,\r\n            campus: this.state.campus,\r\n            electoralDistrict: this.state.electoralDistrict,\r\n            electoralAlliance: this.state.electoralAlliance,\r\n            description: this.state.description,\r\n        }\r\n        axios.post(endpoint.addOneCandidate, oneCandidate)\r\n            .then(res => {\r\n                Swal.fire({\r\n                    text: res.data.includes('address') ? language.addingOneCandidateToDatabaseErrorAlert[this.context.language] : language.addingOneCandidateToDatabaseAlert[this.context.language],\r\n                    icon: res.data.includes('address') ? 'error' : 'success'\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    marginTop: 20,\r\n                    maxWidth: 500,\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    backgroundColor: \"#FFFFFF\",\r\n                    padding: 15,\r\n                }}\r\n            >\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <p>{language.oneCandidate[this.context.language]}</p>\r\n                    <label>{language.firstName[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"name\" value={this.state.name} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.surName[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"surname\" value={this.state.surname} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.emailPlaceHolder[this.context.language]}: </label>\r\n                    <input type=\"text\" name=\"email\" value={this.state.email} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.school[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"school\" value={this.state.school} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label htmlFor=\"campus\">{language.selectStudentAssociation[this.context.language]}</label>\r\n                    <select ref=\"campus\" onChange={this.handleChange}>\r\n                        <option value=\"ASK\">ASK</option>\r\n                        <option value=\"Helga\">Helga</option>\r\n                        <option value=\"HUMAKO\">HUMAKO</option>\r\n                        <option value=\"JAMKO\">JAMKO</option>\r\n                        <option value=\"Laureamko\">Laureamko</option>\r\n                        <option value=\"METKA\">METKA</option>\r\n                        <option value=\"O'Diako\">O'Diako</option>\r\n                        <option value=\"TUO\">TUO</option>\r\n                    </select>\r\n                    <br></br>\r\n                    <label>{language.campus[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"campus\" value={this.state.campus} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.electoralDistrict[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"electoralDistrict\" value={this.state.electoralDistrict} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.electoralAlliance[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"electoralAlliance\" value={this.state.electoralAlliance} placeholder={''} onChange={this.handleChange}></input>\r\n                    <label>{language.description[this.context.language]}</label>\r\n                    <input type=\"text\" name=\"description\" value={this.state.description} placeholder={''} onChange={this.handleChange}></input><br></br><br></br>\r\n                    <button type=\"submit\"\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\",\r\n                        }}\r\n                    >\r\n                        {language.fillFormButton[this.context.language]}</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default addOneCandidate","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { DARK_GREEN, GREEN, WHITE } from \"../../helpers/constants\";\r\nimport DefaultButton from \"../../components/defaultButton\";\r\nimport { endpoint } from \"../../api\";\r\nimport DefaultInput from \"../../components/defaultInput\";\r\nclass AddQuestion extends Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question: \"\",\r\n      questionFin: \"\",\r\n      questionSwe: \"\",\r\n      area: \"\",\r\n      selectValue: \"\",\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  selectBoxChanged = (event) => {\r\n    this.setState({ selectValue: event.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const question = {\r\n      question: this.state.question,\r\n      questionFin: this.state.questionFin,\r\n      questionSwe: this.state.questionSwe,\r\n      area: this.state.selectValue,\r\n    };\r\n    axios\r\n      .post(endpoint.addQuestion, question)\r\n      .then((res) => {\r\n        Swal.fire({\r\n          title: language.successQuestionAddedHolder[this.context.language],\r\n          icon: \"success\",\r\n          confirmButtonText: language.continueHolder[this.context.language],\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    this.setState({ question: \"\" });\r\n    this.setState({ questionFin: \"\" });\r\n    this.setState({ questionSwe: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div\r\n          style={{\r\n            marginTop: 20,\r\n            maxWidth: 500,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            backgroundColor: \"#FFFFFF\",\r\n            padding: 15,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <DefaultInput\r\n              label=\"Kysymys suomeksi\"\r\n              type=\"question\"\r\n              name=\"questionFin\"\r\n              value={this.state.questionFin}\r\n              onChange={this.handleChange}\r\n            />\r\n            <DefaultInput\r\n              label=\"Question in english\"\r\n              type=\"question\"\r\n              name=\"question\"\r\n              value={this.state.question}\r\n              onChange={this.handleChange}\r\n            />\r\n            <DefaultInput\r\n              label=\"Frågan på svenska\"\r\n              type=\"question\"\r\n              name=\"questionSwe\"\r\n              value={this.state.questionSwe}\r\n              onChange={this.handleChange}\r\n            />\r\n            <label style={{ fontSize: 16, marginTop: 5 }}>\r\n              {language.school[this.context.language]}\r\n            </label>\r\n            <select\r\n              style={{\r\n                marginBottom: 10,\r\n                fontSize: 16,\r\n                padding: \"6px 4px\",\r\n              }}\r\n              value={this.state.selectValue}\r\n              onChange={this.selectBoxChanged}\r\n            >\r\n              <option value=\"Undefined\">Undefined</option>\r\n              <option value=\"ASK\">ASK</option>\r\n              <option value=\"Helga\">Helga</option>\r\n              <option value=\"HUMAKO\">HUMAKO</option>\r\n              <option value=\"JAMKO\">JAMKO</option>\r\n              <option value=\"Laureamko\">Laureamko</option>\r\n              <option value=\"METKA\">METKA</option>\r\n              <option value=\"O'Diako\">O'Diako</option>\r\n              <option value=\"TUO\">TUO</option>\r\n            </select>\r\n            <DefaultButton\r\n              type=\"submit\"\r\n              borderColor={DARK_GREEN}\r\n              backgroundColor={GREEN}\r\n              textColor={WHITE}\r\n              text={language.addQuestionButton[this.context.language]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default AddQuestion;\r\n","import React, { useState, createContext, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n    const [mode, setTheme] = useState(\"light\");\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('theme')) {\r\n            setTheme(sessionStorage.getItem('theme'));\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <ThemeContext.Provider\r\n            value={{\r\n                mode,\r\n                setTheme: () => {\r\n                    console.log(mode)\r\n                    setTheme(mode === \"dark\" ? \"light\" : \"dark\")\r\n                    sessionStorage.setItem('theme', mode === \"dark\" ? \"light\" : \"dark\");\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ThemeProvider;","import React, { useContext, useState } from 'react';\r\nimport { ThemeContext } from \"../../context/ThemeProvider\";\r\nimport { IoMdMoon, } from \"react-icons/io\";\r\nimport { FiSun } from \"react-icons/fi\";\r\n\r\nconst ThemeToggleButton = () => {\r\n    const [icon, setIcon] = useState(false)\r\n    const { setTheme, mode } = useContext(ThemeContext);\r\n\r\n    const iconChange = () => {\r\n        setIcon(!icon);\r\n        setTheme(!mode);\r\n    }\r\n\r\n    return mode === 'dark' ?\r\n        <FiSun style={{ color: '#FFFFFF' }} onClick={() => iconChange()} />\r\n        :\r\n        <IoMdMoon style={{ color: '#000000' }} onClick={() => iconChange()} />\r\n}\r\n\r\nexport default ThemeToggleButton;","export default __webpack_public_path__ + \"static/media/sweden.bd536379.svg\";","export default __webpack_public_path__ + \"static/media/finland.0b789380.svg\";","export default __webpack_public_path__ + \"static/media/uk.7bb03f7e.svg\";","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { BiHome } from \"react-icons/bi\";\r\nimport language from \"../../properties/language\";\r\nimport { BsLock } from \"react-icons/bs\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport ThemeToggleButton from \"../themeToggleButton\";\r\nimport { HiOutlineUserAdd } from \"react-icons/hi\";\r\n\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport { ThemeContext } from \"../../context/ThemeProvider\";\r\n\r\nimport classNames from 'classnames';\r\nimport Sweden from '../../assets/icons/sweden.svg'\r\nimport Finland from '../../assets/icons/finland.svg'\r\nimport UK from '../../assets/icons/uk.svg'\r\n\r\nclass Navbar extends Component {\r\n  static contextType = UserContext;\r\n\r\n  componentDidMount() {\r\n    const { checkExistingLogin } = this.context;\r\n    checkExistingLogin();\r\n  }\r\n\r\n  isDark = (mode) => {\r\n    return mode === 'dark';\r\n  }\r\n\r\n  render() {\r\n    const { logOut, changeLanguage, changeUser } = this.context;\r\n    // language,\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <div className={classNames({\r\n            'navLoginWrapper': true,\r\n            'navLoginWrapperLight': !this.isDark(theme.mode),\r\n            'navLoginWrapperDark': this.isDark(theme.mode),\r\n\r\n          })}>\r\n            <div className={classNames({\r\n              'container': true,\r\n              'navLoginContainer': true\r\n            })}>\r\n              <ThemeToggleButton />\r\n              <NavLink to=\"/\">\r\n                <BiHome style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                  {language.navigationHome[this.context.language]}\r\n                </span>\r\n              </NavLink>\r\n              {this.context.loggedIn ? <>\r\n                <NavLink\r\n                  style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}\r\n                  to=\"/\" // TODO: You can't navigate in any route if this route does not exist for this i remove '/logout' to '/'\r\n                  onClick={() => logOut()} >\r\n                  <BsLock />\r\n                  <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                    {language.navigationLogOut[this.context.language]}\r\n                  </span>\r\n                </NavLink>\r\n                <NavLink to=\"/Profile\">\r\n                  <CgProfile style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                  <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                    {language.navigationProfile[this.context.language]}\r\n                  </span>\r\n                </NavLink>\r\n              </>\r\n                : <>\r\n                  <NavLink to=\"/Login\">\r\n                    <BsLock style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                    <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                      {language.navigationLogin[this.context.language]}\r\n                    </span>\r\n                  </NavLink>\r\n                  <NavLink to=\"/Register\">\r\n                    <HiOutlineUserAdd style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }} />\r\n                    <span style={{ color: this.isDark(theme.mode) ? '#FFFFFF' : '#000000' }}>\r\n                      {language.navigationRegister[this.context.language]}\r\n                    </span>\r\n                  </NavLink>\r\n                </>\r\n              }\r\n              <div>\r\n                <span onClick={() => changeLanguage('fin')} style={{ padding: '0 10px' }}>\r\n                  <img style={{ width: 30 }} src={Finland} alt=\"Finland Flag\" />\r\n                </span>\r\n                <span onClick={() => changeLanguage('swe')} style={{ padding: '0 10px' }}>\r\n                  <img style={{ width: 30 }} src={Sweden} alt=\"Sweden Flag\" />\r\n                </span>\r\n                <span onClick={() => changeLanguage('eng')} style={{ padding: '0 10px' }}>\r\n                  <img style={{ width: 30 }} src={UK} alt=\"United Kingdom of Great Britain Flag\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}</ThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport language from \"../../properties/language\";\r\nimport { UserContext } from '../../context/userContext';\r\n\r\nclass AdminNavbar extends Component {\r\n    static contextType = UserContext;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.context.loggedIn && this.context.user === \"Admin\" &&\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', backgroundColor: '#404040', color: '#FFFFFF', paddingLeft: 10, paddingRight: 10, fontSize: '14px' }}>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <h5 style={{ margin: 0 }}>{language.adminLogo[this.context.language]}</h5>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/addCandidates\" className=\"whiteFont\"> {language.addCandidates[this.context.language]}</NavLink>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/addOneCandidate\" className=\"whiteFont\">  {language.addCandidate[this.context.language]} </NavLink>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/Candidates\" className=\"whiteFont\"> {language.browseCandidates[this.context.language]} </NavLink>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/addQuestion\" className=\"whiteFont\"> {language.addQuestion[this.context.language]} </NavLink>\r\n                    <NavLink style={{ color: '#FFFFFF' }} to=\"/Questions\" className=\"whiteFont\"> {language.browseQuestions[this.context.language]} </NavLink>\r\n                </div>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default AdminNavbar;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { AdminRoute, CandidateRoute, PublicRoute } from './routeValidation.js';\r\n\r\n//Components\r\nimport Form from '../containers/form';\r\nimport Home from '../containers/home';\r\nimport Registration from '../containers/registration';\r\nimport Login from '../containers/login';\r\nimport Profile from '../containers/profile';\r\nimport Candidates from '../containers/candidates';\r\nimport Questions from '../containers/questions';\r\nimport Suggestions from '../containers/suggestedCandidates';\r\nimport AddCandidates from '../containers/addCandidates';\r\nimport AddOneCandidate from '../containers/addOneCandidate';\r\nimport AddQuestion from '../containers/addQuestion';\r\nimport CandidateAnswers from '../containers/candidateAnswers';\r\nimport Navbar from \"../components/navbar\";\r\nimport AdminNavbar from '../components/adminNavbar';\r\n\r\n\r\nconst Navigation = () => {\r\n    return <>\r\n        <BrowserRouter>\r\n            <div>\r\n                <AdminNavbar />\r\n                <Navbar />\r\n                <Switch>\r\n                    <AdminRoute path=\"/addQuestion\" component={AddQuestion} />\r\n                    <AdminRoute path=\"/addCandidates\" component={AddCandidates} />\r\n                    <AdminRoute path=\"/addOneCandidate\" component={AddOneCandidate} />\r\n                    <AdminRoute path=\"/Candidates\" component={Candidates} />\r\n                    <AdminRoute path=\"/Questions\" component={Questions} />\r\n                    <CandidateRoute path=\"/Profile\" component={Profile} />\r\n                    <Route path=\"/suggestedCandidates\" component={Suggestions} />\r\n                    <Route path=\"/candidateAnswers\" component={CandidateAnswers} />\r\n                    <Route path=\"/Form/:id\" component={Form} />\r\n                    <PublicRoute path=\"/Login\" component={Login} />\r\n                    <PublicRoute path=\"/Register\" component={Registration} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    </>\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './App.css';\r\nimport './AppMini.css';\r\nimport Navigation from './navigation'\r\nimport UserContextProvider from './context/userContext';\r\nimport { ThemeContext } from \"./context/ThemeProvider\";\r\nimport classNames from 'classnames';\r\n\r\nexport default function App() {\r\n\r\n  const isDark = (mode) => {\r\n    return mode === 'dark';\r\n  }\r\n\r\n  return <>\r\n    <UserContextProvider>\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <div className={classNames({\r\n            'App': true,\r\n            'BodyColor': isDark(theme.mode)\r\n          })}>\r\n            <Navigation />\r\n          </div>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    </UserContextProvider>\r\n  </>\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ThemeProvider from \"./context/ThemeProvider\";\r\n\r\nReactDOM.render(\r\n    <ThemeProvider>\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    </ThemeProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}